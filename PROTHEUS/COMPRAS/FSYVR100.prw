#Include "Protheus.ch"
#Include "Topconn.ch"
#Include "fwprintsetup.ch"

#DEFINE MAXMENLIN  200
#DEFINE DMPAPER_A4 9

#DEFINE COLUNA_INICIAL	15
#DEFINE LARGURA_PAGINA	oPrinter:nPageWidth-150
#DEFINE ALTURA_PAGINA	oPrinter:nPageHeight

#DEFINE GRD_INI		3
#DEFINE GRD_FIMTAM	5
#DEFINE CRLF        CHR(13)+CHR(10)

/*
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???????????????????????????????????????????????????????????????????????????
???Programa  ? SYVR100 ? Autor ?  Alexandro Dias    ? Data ?  17/01/06   ???
???????????????????????????????????????????????????????????????????????????
???Descricao ? Emite pedido de compra.                                   ???
???????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
*/

//Template Function SYVR100()
User Function FSYVR100()

Local aArea 		:= GetArea()
Local aAreaSM0  	:= SM0->(GetArea())
Local aBoxParam  	:= {}
Local aRetParam  	:= {}
Local cEmail		:= ''
Local cArqPed		:= ''
Local cDirTemp		:= 'c:\temp'
Local cPar1			:= ''
Local cPar2			:= ''

Private cFileLogo  	:= "LOGO"+SM0->M0_CODIGO+SM0->M0_CODFIL+".BMP" // Empresa+Filial
Private cHoraEmiss	:= Time()
Private dDataInicio	:= dDataBase
Private oPrinter

//??????????????????????????????????????????????????
//? Tratamento para imprimir Logotipo Multifiliais  ?
//?  1a Busca LOGO + EMPRESA + FILIAL               ?
//?  2a Busca LOGO + EMPRESA                        ?
//?  3a Busca LOGO.BMP                              ?
//? Mauro Paladini - 01/12/2008                     ?
//???????????????????????????????????????????????????

If !File(cFileLogo)
	cFileLogo := "LOGO" + SM0->M0_CODIGO+".BMP" 	// Empresa
Endif

If !File(cFileLogo)
	cFileLogo := "LOGO.BMP" 						// Empresa
Endif

IF Type("c001Num") <> "U"
	cPar1 := c001Num
	cPar2 := c001Num
Else
	cPar1 := SC7->C7_NUM
	cPar2 := SC7->C7_NUM
EndIF

Aadd(aBoxParam,{1,"Do Pedido"		,cPar1		,PesqPict("SC7","C7_NUM")		,"!Vazio() .Or. ExistCpo('SC7')","SC7","",40,.F.})
Aadd(aBoxParam,{1,"Ate Pedido"		,cPar2		,PesqPict("SC7","C7_NUM")		,"!Vazio() .Or. ExistCpo('SC7')","SC7","",40,.F.})

IF !ParamBox(aBoxParam,"Informe os Parametros",@aRetParam)
	Return(.F.)
EndIf

//?????????????????????????????????
//? Cria diretorio.                ?
//??????????????????????????????????
IF !ExistDir(cDirTemp)
	MakeDir(cDirTemp)
	IF !ExistDir(cDirTemp)
		Help(Nil,Nil,ProcName(),,'Por favor criar a pasta/diret?rio TEMP no C:\.', 1, 5)
		Return(.T.)
	EndIF
EndIF

//?????????????????????????????????
//? Ajusta nome do arquivo do PC.  ?
//??????????????????????????????????
IF MV_PAR01 == MV_PAR02
	cArqPed := 'pedidodecompra_' +Alltrim(MV_PAR01)+ '.pdf'
Else
	cArqPed := 'pedidodecompra_' +Alltrim(MV_PAR01)+ '_ate_' +Alltrim(MV_PAR02)+ '.pdf'
EndIF

//?????????????????????????????????
//? Selecao da impressora.         ?
//??????????????????????????????????
oPrinter 			:= FwMSPrinter():New( cArqPed , 6 , .T. , , .T. , , , , , .T. , , .T. )
oPrinter:cPathPDF	:= cDirTemp+"\"
oPrinter:SetLandsCape()
oPrinter:SetPaperSize(DMPAPER_A4)
oPrinter:SetMargin(5,5,5,5)

LjMsgRun("Por favor aguarde, Imprimindo Pedido de Compra...",,{|| Imp_Pedido(@cEmail) })

LjMsgRun("Por favor aguarde, Gerando arquivo PDF...",,{|| oPrinter:Preview() })

//?????????????????????????????????
//? Envia pedido por email.        ?
//??????????????????????????????????
r001Email(cEmail,cArqPed,cDirTemp)

RestArea(aAreaSM0)
RestArea(aArea)

Return(.T.)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ?Imp_Pedido?Autor  ?   Alexandro Dias   ? Data ?  17/01/06   ???
????????????????????????????????????????????????????????????????????????????
???Desc.     ?Impressao do pedido em modo grafico.                        ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function Imp_Pedido(cEmail)

Local nX
Local nLinhaAtual	:= 0
Local nNumPagina	:= 0
Local nVlrTotal    	:= 0
Local nQtdTotal		:= 0
Local aColsSC7		:= {}
Local aHeaderSC7	:= {}
Local aHeaderGrade	:= {}
Local aColsGrade	:= {}
Local aColsFilial	:= {}
Local aProdutos		:= {}
Local aPedTamanhos	:= {}
Local cCondPagto    := ''
Local cProduto      := ''
Local cUser         := ''
Local cMaMemo       := ''
Local cPiloto		:= ''
Local cComprador	:= ''
Local cQualidade	:= ''
Local nDescFin		:= 0
Local nDesconto		:= 0
Local nAcrescimo	:= 0
Local aMascara 		:= Separa(GetMv('MV_MASCGRD',,'09,04,02,02'),',')
Local aCaract		:= {}
Local lRet , nP

Private nTamPai   	:= Val(aMascara[1])
Private nTamLin   	:= Val(aMascara[2])
Private nTamCol   	:= Val(aMascara[3])
Private nTamRef 	:= Val(aMascara[4])
Private cPedido 	:= ''
Private nCustoFinal		:= 0
Private oFonte1
Private oFonte2
Private oFonte3
Private oFonte4
Private oFntSy
Private cFornLj
Private dEmissao
Private cRepresentante
Private dEntrega

//??????????????????????????????????????????????????
//?Inicializa objetos da classe TMSPrinter.		    ?
//???????????????????????????????????????????????????
oFonte1	:= TFont():New("Courier New",,16,,.T.,,,,.F.)
oFonte2	:= TFont():New("Courier New",,10,,.T.,,,,.F.)
oFonte3	:= TFont():New("Courier New",,08,,.T.,,,,.F.)
oFonte4	:= TFont():New("Courier New",,11,,.T.,,,,.F.)
oFntSy	:= TFont():New("Courier New",,09,.T.,.F.,,.T.,,.T.,.T.)

//??????????????????????????????????????????????????
//? Imprime cabecalho do pedido de compra.  		?
//???????????????????????????????????????????????????

While MV_PAR01 <= MV_PAR02

	cPedido := MV_PAR01

	//??????????????????????????????????????????????????
	//? Pega os Produtos do pedido em questao.       	?
	//???????????????????????????????????????????????????
	lRet := R001RetGrade(cPedido,@aColsSC7,@aHeaderSC7,@aHeaderGrade,@aColsGrade,@aColsFilial,@aProdutos,@nVlrTotal,@nQtdTotal,@aCaract,@aPedTamanhos)

	IF lRet

		For nP := 1 To Len(aProdutos)

			DbSelectArea("SC7")
			DbOrderNickName("SYMMSC701")
			IF DbSeek( xFilial('SC7') + cPedido + Padr(aProdutos[nP,1],nTamPai) )

				cFornLj   		:= SC7->C7_FORNECE+SC7->C7_LOJA
				dEmissao  		:= SC7->C7_EMISSAO
				dEntrega  		:= SC7->C7_DATPRF
				cRepresentante	:= SC7->C7_CONTATO
				cPiloto			:= SC7->C7_01PILOT
				cUser     		:= SC7->C7_USER
				nDescFin 		:= SC7->C7_01DESCF
				nDesconto		:= SC7->C7_01DESCP
				nAcrescimo		:= SC7->C7_01ACREP
				cQualidade		:= SC7->C7_01QUALI
				cCondPagto		:= Posicione("SE4",1,xFilial("SE4")+SC7->C7_COND,"Alltrim(E4_DESCRI)")
				cComprador		:= Posicione('SY1',1,xFilial('SY1')+SC7->C7_01CDCOM,'Y1_NOME')
				cEmail			:= Posicione("SA2",1,xFilial("SA2")+SC7->C7_FORNECE+SC7->C7_LOJA,"A2_EMAIL")
				cMaMemo 		:= MSMM(SC7->C7_01MEMOC,TamSx3("C7_01MEMO")[1])

				// Imprime cabecalho
				//Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,Len(aProdutos[nP,4]),cQualidade,cCondPagto)

				// Imprimime relatorio
				ImpRel(aProdutos,nP,@nLinhaAtual,@nVlrTotal,@nQtdTotal,cPedido,@nNumPagina,cUser,cComprador,cQualidade,cPedido,cCondPagto,aPedTamanhos)

			EndIF

		Next

		Imp_Roda(@nLinhaAtual,cPiloto,nDescFin,nDesconto,nAcrescimo,nVlrTotal,nQtdTotal,cCondPagto,cMaMemo,cPedido,@nNumPagina,cUser,cComprador,cQualidade)

		// Inicio da alteração realizada por Eliene

		// Query da distribuição por filial
		cQuery := " SELECT AYM_FILDES, AYM_SKU, AYM_QUANT, B1_01DREF, B1_01LNGRD, B1_01CODFO, BV_DESCRI
		cQuery += "	FROM " +RetSqlName("AYM")+ " AYM "
		cQuery += "	INNER JOIN " +RetSqlName("SB1")+ " SB1 ON (B1_COD = AYM_SKU AND SB1.D_E_L_E_T_ = ' ')
		cQuery += "	INNER JOIN " +RetSqlName("SBV")+ " SBV ON (BV_TABELA = '01' AND BV_CHAVE = B1_01LNGRD AND SBV.D_E_L_E_T_ = ' ')
		cQuery += "	WHERE AYM.D_E_L_E_T_ = ' '
		cQuery += " AND AYM_NUM	= '" +cPedido+ "'"
		cQuery += " ORDER BY AYM_FILDES, AYM_SKU

		DbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"VR001TRB",.T.,.T.)

		DbGoTop()
		c_Filial := ''
		DbSelectArea("VR001TRB")
		While !Eof()
			If	AYM_FILDES <> c_Filial
				nLinhaAtual	:= 0
				Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,8,cQualidade,cCondPagto)
				DbSelectArea("VR001TRB")
				c_Filial := AYM_FILDES
				c_Produto := ''

				oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+0010 , Posicione('SM0',1,c_Filial,'SM0->M0_FILIAL'), oFonte2,CLR_HRED)
				nLinhaAtual += 50

				While !Eof() .and. AYM_FILDES = c_Filial
					If 	nLinhaAtual >= 2200
						Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,8,cQualidade,cCondPagto)
						nLinhaAtual := 0460
					Endif

					If	Substr(AYM_SKU,1,7) <> c_Produto
						c_Produto := Substr(AYM_SKU,1,7)
						a_Produto := {}
						oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+0010 , "Produto: " 		+ c_Produto+ " - " + Posicione('SB4',1,xFilial('SB4')+c_Produto,'SB4->B4_DESC'), oFonte2 )
						nLinhaAtual += 50
						oPrinter:Box( nLinhaAtual-22, COLUNA_INICIAL, nLinhaAtual+048, LARGURA_PAGINA)
						oPrinter:Line( nLinhaAtual-22 , 210 , nLinhaAtual+48 , 210 )
						oPrinter:Line( nLinhaAtual-22 , 500 , nLinhaAtual+48 , 500 )

						oPrinter:Say( nLinhaAtual, 20 	, "Referencia" , oFonte2 )
						oPrinter:Say( nLinhaAtual, 220 	, "Cores" , oFonte2 )
						oPrinter:Say( nLinhaAtual, 510 	, "Cod.Fornec" , oFonte2 )
						nIncremento := 790
						For	I := 1 to Len(aPedTamanhos)
							oPrinter:Line( nLinhaAtual-22 , nIncremento-10 , nLinhaAtual+48 , nIncremento-10 )
							oPrinter:Say( nLinhaAtual, nIncremento 	, aPedTamanhos[I] , oFonte2 )
							nIncremento += 100
						Next
						oPrinter:Line( nLinhaAtual-22 , nIncremento-10 , nLinhaAtual+48 , nIncremento-10 )
						oPrinter:Say( nLinhaAtual, nIncremento 	, "Total" , oFonte2 )
						nIncremento += 100
						oPrinter:Line( nLinhaAtual-22 , nIncremento-10 , nLinhaAtual+48 , nIncremento-10 )
						nLinhaAtual += 75

					Endif
					n_Aux := Ascan( a_Produto, {|x| x[1]+x[2] == B1_01DREF+BV_DESCRI } )
					IF n_Aux == 0
						Aadd(a_Produto,Array(Len(aPedTamanhos)+3))
						n_Aux := Len(a_Produto)
						a_Produto[n_Aux,1] := B1_01DREF
						a_Produto[n_Aux,2] := BV_DESCRI
						a_Produto[n_Aux,3] := B1_01CODFO
						For	I := 1 to Len(aPedTamanhos)
							a_Produto[n_Aux,I+3] := 0
						Next
					EndIF

					n_Tam := Ascan( aPedTamanhos, Substr(AYM_SKU,11,2) )
					a_Produto[n_Aux,n_Tam+3] += AYM_QUANT

					DbSelectArea("VR001TRB")
					DbSkip()
					If	(Substr(AYM_SKU,1,7) <> c_Produto .and. Len(a_Produto) > 0) .or. AYM_FILDES <> c_Filial
						n_TotGer := 0
						For Nx := 1 to Len(a_Produto)
							oPrinter:Say( nLinhaAtual, 20 	, a_Produto[Nx,1] , oFonte2 )
							oPrinter:Say( nLinhaAtual, 220 	, a_Produto[Nx,2] , oFonte2 )
							oPrinter:Say( nLinhaAtual, 510 	, a_Produto[Nx,3] , oFonte2 )
							nIncremento := 790
							n_Total := 0
							For	I := 1 to Len(aPedTamanhos)
								If	a_Produto[Nx,I+3] > 0
									oPrinter:Say( nLinhaAtual, nIncremento 	, Alltrim(Transform(a_Produto[Nx,I+3],"@E 9999")) , oFonte2 )
									n_Total += a_Produto[Nx,I+3]
								Endif
								nIncremento += 100
							Next
							oPrinter:Say( nLinhaAtual, nIncremento 	, Alltrim(Transform(n_Total,"@E 9999")) , oFonte2 )
							n_TotGer += n_Total
							nLinhaAtual += 50
						Next
						oPrinter:Line( nLinhaAtual-20 , nIncremento , nLinhaAtual-20 , nIncremento+100 )
						oPrinter:Say( nLinhaAtual, nIncremento 	, Alltrim(Transform(n_TotGer,"@E 9999")) , oFonte2 )
						nLinhaAtual += 75
					Endif
				Enddo
			Endif
		EndDo
		DbCloseArea()

		// Fim da alteração realizada por Eliene
	Else
		Help(Nil,Nil,ProcName(),,'N?o Existe este Pedido de Compra: '+cPedido , 1, 5)
	EndIF

	//??????????????????????????????????????????????????
	//? Pula para o proximo pedido.                  	?
	//???????????????????????????????????????????????????
	MV_PAR01 := Soma1(MV_PAR01,Len(MV_PAR01))

	//??????????????????????????????????????????????????
	//? Zera linha atual para impresao do cabecalho.	?
	//???????????????????????????????????????????????????
	nLinhaAtual := 0

EndDo

Return(.T.)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ?Imp_Cabec ?Autor  ?   Alexandro Dias   ? Data ?  17/01/06   ???
????????????????????????????????????????????????????????????????????????????
???Desc.     ?Impressao do cabecalho da pagina do relatorio               ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function Imp_Cabec(cPedido,nNumPagina,nLinhaAtual,cUser,cComprador,cQualidade,cCondPagto,nLinhaFil)

Local cCNPJ 		:= IF(!Empty(SM0->M0_CGC)		,SM0->M0_CGC		,"99999999999999")
Local cNomeEmpresa 	:= IF(!Empty(SM0->M0_NOMECOM)	,SM0->M0_NOMECOM	,'EMPRESA TESTE DA TOTVS')
Local cEndEmpresa 	:= IF(!Empty(SM0->M0_ENDENT)	,SM0->M0_ENDENT		,'Av. das Avenidas, 1000')
Local cCepEmpresa 	:= IF(!Empty(SM0->M0_CEPENT)	,SM0->M0_CEPENT		,'99999999')
Local cMunEmpresa 	:= IF(!Empty(SM0->M0_CIDENT)	,SM0->M0_CIDENT		,'SAO PAULO')
Local cUfEmpresa	:= IF(!Empty(SM0->M0_ESTENT)	,SM0->M0_ESTENT		,'SP')
Local cTelEmpresa 	:= IF(!Empty(SM0->M0_TEL)		,SM0->M0_TEL		,'(99) 9999-9999')
Local cFaxEmpresa 	:= IF(!Empty(SM0->M0_FAX)		,SM0->M0_FAX		,'(11) 9999-9999')
Local aDadosUsu 	:= {}
Local cDigitador		:= ""

// Pesquisa dados do usuario que gerou o pedido
PswSeek(cUser)
aDadosUsu := PswRet()
cDigitador := aDadosUsu[1][2]

nNumPagina += 1

oPrinter:EndPage()
oPrinter:StartPage()

oPrinter:SayBitmap( 0100,0060,cFileLogo,360,220 )
//             Lin    Col   Lin  Col
oPrinter:Box( 0045, 0450, 0145,1380)
oPrinter:Box( 0045, 1380, 0145,2520)
oPrinter:Box( 0045, 2520, 0145,LARGURA_PAGINA)

oPrinter:Box( 0145, 0450, 0410,1380)
oPrinter:Box( 0145, 1380, 0410,2520)
oPrinter:Box( 0145, 2520, 0410,LARGURA_PAGINA)

oPrinter:Say( 0095, 0470, "PEDIDO DE COMPRA",oFonte1,100 )
oPrinter:Say( 0095, 1400, "Pedido no: "+cPedido,oFonte1,100,CLR_HRED)
oPrinter:Say( 0095, 2540, "Pagina: "+ StrZero(nNumPagina,2) ,oFonte1,100 )

DbSelectArea('SA2')
DbSetOrder(1)
DbSeek(xFilial('SA2')+cFornLj)

//Itens das Empresas
oPrinter:Say( 0180, 0470, "FATURAR ESTE PEDIDO PARA:",oFonte2,100 )
oPrinter:Say( 0220, 0470, cNomeEmpresa ,oFonte2,100,CLR_HBLUE )
oPrinter:Say( 0255, 0470, "TEL: " + cTelEmpresa ,oFonte2,100 )
//oPrinter:Say( 0255, 0470, cEndEmpresa ,oFonte2,100 )
//oPrinter:Say( 0290, 0470, "CEP: "+Trans(cCepEmpresa,PesqPict("SA1","A1_CEP")),oFonte2,100 )
//oPrinter:Say( 0325, 0470, "TEL: " + cTelEmpresa ,oFonte2,100 )
//oPrinter:Say( 0360, 0470, "CNPJ/CPF: "+ Transform(cCNPJ,PesqPict("SA1","A1_CGC")),oFonte2,100 )

//oPrinter:Say( 0290, 1010, Alltrim(cMunEmpresa)+" - "+cUfEmpresa,oFonte2,100 )
//oPrinter:Say( 0325, 1010, "FAX: " + cFaxEmpresa ,oFonte2,100 )
//oPrinter:Say( 0360, 1010, "IE:" + InscrEst() ,oFonte2,100 )

oPrinter:Say( 0180, 1400, "FORNECEDOR:",oFonte2,100 )
oPrinter:Say( 0220, 1400, Alltrim(Substr(SA2->A2_NOME,1,28))+" - ("+SA2->A2_COD+")" ,oFonte2,100,CLR_HBLUE )
oPrinter:Say( 0255, 1400, UPPER(Substr(SA2->A2_END,1,30)+ Substr(SA2->A2_BAIRRO,1,10)) ,oFonte2,100 )
oPrinter:Say( 0290, 1400, Upper(Trim(SA2->A2_MUN)+"   "+SA2->A2_EST+" "+"CEP: "+Trans(SA2->A2_CEP,PesqPict("SA1","A1_CEP"))) ,oFonte2,100 )
oPrinter:Say( 0325, 1400, "VENDEDOR: " + Upper(Substr(cRepresentante,1,10)),oFonte2,100 )
oPrinter:Say( 0360, 1400, "CNPJ: " + Alltrim(SA2->A2_CGC) ,oFonte2,100 )

oPrinter:Say( 0290, 2150, "FAX: " + "("+Substr(SA2->A2_DDD,1,3)+") "+SA2->A2_FAX ,oFonte2,100 )
oPrinter:Say( 0325, 2150, "FONE: " + "("+Substr(SA2->A2_DDD,1,3)+") "+Substr(SA2->A2_TEL,1,15) ,oFonte2,100 )
oPrinter:Say( 0360, 2150, "IE: " + SA2->A2_INSCR ,oFonte2,100 )

oPrinter:Say( 0180, 2540, "DATA EMISSAO: "		+ DTOC(dEmissao)	,oFonte2,100 )
oPrinter:Say( 0220, 2540, "DATA ENTREGA: "		+ DTOC(dEntrega)	,oFonte2,100,CLR_HRED )
oPrinter:Say( 0255, 2540, "COMPRADOR: "			+ cComprador		,oFonte2,100 )
oPrinter:Say( 0290, 2540, "DIGITADO POR: "		+ cDigitador		,oFonte2,100 )
oPrinter:Say( 0325, 2540, "QUALIDADE: "			+ cQualidade		,oFonte2,100,CLR_HRED )
oPrinter:Say( 0360, 2540, "COND.PAGAMENTO: "	+ cCondPagto		,oFonte2,100 )

nLinhaAtual := 0460
nLinhaFil   := nLinhaAtual

Return(.T.)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ?Imp_Cabec ?Autor  ?   Julio Cesar      ? Data ?  17/01/06   ???
????????????????????????????????????????????????????????????????????????????
???Desc.     ?Impressao do corpo do relatorio                             ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function ImpRel(aProdutos,nPos,nLinhaAtual,nVlrTotal,nQtdTotal,cPedido,nNumPagina,cUser,cComprador,cQualidade,cPedido,cCondPagto,aPedTamanhos)

Local nX,nA,nB,nC
Local nColPrint	:= 0
Local nLinhaFil	:= 0
Local nGrdTotal	:= 0
Local nPosTotal := Ascan(aProdutos[nPos,3],{|x| x[2]=="TOTAL"})

DbSelectArea("SB4")
DbSetOrder(1)
DbSeek(xFilial("SB4") + aProdutos[nPos,1] )

//????????????????????????????????????????????????????
//? Avalia se reinicializa a pagina.                  ?
//?????????????????????????????????????????????????????
Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,Len(aProdutos[nPos,4]),cQualidade,cCondPagto)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Realizaca impressao do cabecalho do produto. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
CabProd(aProdutos,nPos,@nLinhaAtual,@nLinhaFil)

//??????????????????????????????????????????????????
//? Imprime o Conteudo da Grade.					?
//???????????????????????????????????????????????????
cGrade := aProdutos[nPos,4,1,GRD_INI]

For nA := 1 To Len(aProdutos[nPos,4])

	If cGrade != aProdutos[nPos,4,nA,GRD_INI]

		//??????????????????????????????????????????????????
		//? Imprime Distribuicao da Grade.       			?
		//???????????????????????????????????????????????????
		ImpDistrib(aProdutos,nPos,@nLinhaAtual,@nLinhaFil,cGrade,nGrdTotal,nPosTotal,.T.,cUser,cComprador,cQualidade,cPedido,nNumPagina,cCondPagto)

		//??????????????????????????????????????????????????
		//? Reinicializa variaveis.                			?
		//???????????????????????????????????????????????????
		cGrade 		:= aProdutos[nPos,4,nA,GRD_INI]
		nGrdTotal 	:= 0

		// Imprime cabecalho
		If Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,Len(aProdutos[nPos,4,nA]),cQualidade,cCondPagto,@nLinhaFil)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Realizaca impressao do cabecalho do produto. ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			CabProd(aProdutos,nPos,@nLinhaAtual,@nLinhaFil)
		EndIf
	EndIf

	For nB := GRD_INI To Len(aProdutos[nPos,3])-1

		IF aProdutos[nPos,3,nB,5] == 'N'
			IF aProdutos[nPos,4,nA,nB] > 0
				oPrinter:Say( nLinhaAtual , aProdutos[nPos,3,nB,6] , Alltrim(Transform(aProdutos[nPos,4,nA,nB],aProdutos[nPos,3,nB,3])) , oFonte4 )
			EndIF
		Else
			oPrinter:Say( nLinhaAtual , aProdutos[nPos,3,nB,6] , aProdutos[nPos,4,nA,nB] , oFonte4 )
		EndIF

	Next

	//????????????????????????????????????????????????????
	//? Totaliza quantidade da grade.                     ?
	//?????????????????????????????????????????????????????
	nGrdTotal += aProdutos[nPos,4,nA,nPosTotal]

	//????????????????????????????????????????????????????
	//? Salta linha.                                      ?
	//?????????????????????????????????????????????????????
	nLinhaAtual += 38

Next

//??????????????????????????????????????????????????
//? Imprime Distribuicao da Grade.       			?
//???????????????????????????????????????????????????
ImpDistrib(aProdutos,nPos,@nLinhaAtual,@nLinhaFil,cGrade,nGrdTotal,nPosTotal,.F.,cUser,cComprador,cQualidade,cPedido,nNumPagina,cCondPagto)

Return(.T.)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ?Imp_Roda  ?Autor  ?   Julio Cesar      ? Data ?  17/01/06   ???
????????????????????????????????????????????????????????????????????????????
???Desc.     ?Impressao do rodape da pagina do relatorio                  ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function Imp_Roda(nLinhaAtual,cPiloto,nDescFin,nDesconto,nAcrescimo,nVlrTotal,nQtdTotal,cCondPagto,cMaMemo,cPedido,nNumPagina,cUser,cComprador,cQualidade)

Local nI          := 0
Local aMemo       := {}
Local aMsgForm	  := {}
Local nZ , nX

//????????????????????????????????????????????????????
//? Avalia se reinicializa a pagina.                  ?
//?????????????????????????????????????????????????????
Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,8,cQualidade,cCondPagto)

nLinhaAtual += 15

oPrinter:Box( nLinhaAtual-22, COLUNA_INICIAL, nLinhaAtual+48, LARGURA_PAGINA)

oPrinter:Say( nLinhaAtual+12	, 0025, "Peca Piloto: "			+	IF( cPiloto== 'S' , 'Sim' , 'Nao' ) 	,oFonte2)
oPrinter:Line( nLinhaAtual-22	, 0290, nLinhaAtual+48, 0290 )

oPrinter:Say( nLinhaAtual+12	, 0300, "Desconto Financeiro: "	+ 	Transform(nDescFin	, '@E 999,99') +'%'	,oFonte2)
oPrinter:Line( nLinhaAtual-22	, 0750, nLinhaAtual+48, 0750 )

oPrinter:Say( nLinhaAtual+12	, 0760, "Desconto: " 			+ 	Transform(nDesconto	, '@E 999,99') +'%'	,oFonte2)
oPrinter:Line( nLinhaAtual-22	, 1150, nLinhaAtual+48, 1150 )

oPrinter:Say( nLinhaAtual+12	, 1160, "Acrescimo: "			+	Transform(nAcrescimo, '@E 999,99') +'%'	,oFonte2)
oPrinter:Line( nLinhaAtual-22	, 1550, nLinhaAtual+48, 1550 )

oPrinter:Say( nLinhaAtual+10	, 1560, "Qtd. Total: "			+	Alltrim(Transform(nQtdTotal, '@E 9,999,999')) ,oFonte2)
oPrinter:Line( nLinhaAtual-22	, 1900, nLinhaAtual+48, 1900 )

oPrinter:Say( nLinhaAtual+10	, 1910, "Total do Pedido: "		+	Alltrim(Transform(nVlrTotal, PesqPict("SC7", "C7_TOTAL")))	,oFonte2)
oPrinter:Line( nLinhaAtual-22	, 2500, nLinhaAtual+48, 2500 )

oPrinter:Say( nLinhaAtual+12	, 2510, "Custo Final: " + Alltrim(Transform(nCustoFinal, PesqPict("SC7", "C7_PRECO"))) ,oFonte2)

nLinhaAtual += 080

//??????????????????????????????????????????????????
//? Soma a quantidade de linhas para Observacao.	?
//???????????????????????????????????????????????????
nZ := MlCount(AllTrim(cMaMemo),185)
For nX := 1 To nZ
	Aadd( aMemo , MemoLine(AllTrim(cMaMemo),185,nX) + CRLF )
Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ P.E. para Mensagens. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("VR100MSG")
	cAux 	 := ExecBlock("VR100MSG",.F.,.F.)

	While !Empty(cAux)
		aadd(aMsgForm,SubStr(cAux,1,IIf(EspacoAt(cAux, MAXMENLIN) > 1, EspacoAt(cAux, MAXMENLIN) - 1, MAXMENLIN)))
		cAux := SubStr(cAux,IIf(EspacoAt(cAux, MAXMENLIN) > 1, EspacoAt(cAux, MAXMENLIN), MAXMENLIN) + 1)
	EndDo
EndIf

oPrinter:Say( nLinhaAtual, 0025, "Observacoes:", oFonte2, 100 )
nLinhaAtual += 10

oPrinter:Box( nLinhaAtual,COLUNA_INICIAL,nLinhaAtual+170+((Len(aMemo)+Len(aMsgForm))*50),LARGURA_PAGINA)

oPrinter:Say( nLinhaAtual+190+((Len(aMemo)+Len(aMsgForm))*50)	, LARGURA_PAGINA-450	, "software de gestão: symm.com.br",oFntSy)
nLinhaAtual += 60

oPrinter:Say( nLinhaAtual, 0025, GetMV("MV_MSPEDC1",,"1. ? obrigatorio constar o No deste Pedido de Compra na Nota Fiscal, sob pena de nao ser aceita a mercadoria."), oFonte2,,CLR_HRED )
nLinhaAtual += 40

oPrinter:Say( nLinhaAtual, 0025, GetMV("MV_MSPEDC2",,"2. Nao Pagamos Frete."), oFonte2,,CLR_HRED )
nLinhaAtual += 40

For nZ := 1 To Len(aMsgForm)
	oPrinter:Say( nLinhaAtual, 0025, aMsgForm[nZ], oFonte2,,CLR_HRED )
	nLinhaAtual += 40
Next nZ

For nZ := 1 To Len(aMemo)
	oPrinter:Say( nLinhaAtual, 0025, aMemo[nZ], oFonte2,,CLR_HRED)
	nLinhaAtual += 40
Next

Return(.T.)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ? ImpDistrib ? Autor ?  Alexandro Dias   ? Data ?  15/09/11  ???
????????????????????????????????????????????????????????????????????????????
???Descricao ? Imprime a Distribuicao por Filial.                         ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function ImpDistrib(aProdutos,nPos,nLinhaAtual,nLinhaFil,cGrade,nGrdTotal,nPosTotal,lImpTraco,cUser,cComprador,cQualidade,cPedido,nNumPagina,cCondPagto)

Local aAreaSM0 	:= SM0->(GetArea())
Local nColFil 	:= aProdutos[nPos,3,Len(aProdutos[nPos,3]),6]
Local nC,nLinTraco

Default lImpTraco := .F.

//??????????????????????????????????????????????????
//? Imprime Total da grade.                         ?
//???????????????????????????????????????????????????
nLinhaAtual-=20
oPrinter:Box( nLinhaAtual , aProdutos[nPos,3,nPosTotal,6]-5 , nLinhaAtual , aProdutos[nPos,3,nPosTotal,6]+90 )
nLinhaAtual += 25
oPrinter:Say( nLinhaAtual , aProdutos[nPos,3,nPosTotal,6] , Alltrim(Transform(nGrdTotal,aProdutos[nPos,3,nPosTotal,3])) , oFonte2 )
nLinhaAtual += 38

For nC := 1 To Len(aProdutos[nPos,2])

	IF cGrade == Alltrim(aProdutos[nPos,2,nC,2]) .And. aProdutos[nPos,2,nC,3] > 0

		oPrinter:Say( nLinhaFil , nColFil 		, Posicione('SM0',1,aProdutos[nPos,2,nC,1],'Left(SM0->M0_FILIAL,09)')	, oFonte4 )
		oPrinter:Say( nLinhaFil , nColFil+180	, Alltrim(Transform(aProdutos[nPos,2,nC,3],'@E 9999'))					, oFonte4 )
		oPrinter:Say( nLinhaFil , nColFil+240	, Alltrim(Transform(aProdutos[nPos,2,nC,4],'@E 99,999'))				, oFonte4 )

		IF nC+1 <= Len(aProdutos[nPos,2])

			nC++
			IF cGrade == aProdutos[nPos,2,nC,2] .And. aProdutos[nPos,2,nC,3] > 0
				oPrinter:Say( nLinhaFil , nColFil+365 	, Posicione('SM0',1,aProdutos[nPos,2,nC,1],'Left(SM0->M0_FILIAL,09)')	, oFonte4 )
				oPrinter:Say( nLinhaFil , nColFil+540	, Alltrim(Transform(aProdutos[nPos,2,nC,3],'@E 9999'))					, oFonte4 )
				oPrinter:Say( nLinhaFil , nColFil+600	, Alltrim(Transform(aProdutos[nPos,2,nC,4],'@E 99,999'))				, oFonte4 )
			EndIF

		EndIF

		nLinhaFil += 38

		If nLinhaFil >= 2339
			Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,8,cQualidade,cCondPagto)
			nLinhaFil := 0460
		Endif

	EndIF

Next

//??????????????????????????????????????????????????
//? Imprime traco de separacao entre as grades.		?
//???????????????????????????????????????????????????
IF lImpTraco
	nLinTraco := IF( nLinhaFil > nLinhaAtual , nLinhaFil , nLinhaAtual)
	oPrinter:Box( nLinTraco, COLUNA_INICIAL+300, nLinTraco, LARGURA_PAGINA-300)
EndIF

IF nLinhaFil > nLinhaAtual
	//????????????????????????????????????????????????????????
	//? Ajusta a linha de impressao.                          ?
	//?????????????????????????????????????????????????????????
	nLinhaAtual := nLinhaFil + 40
Else
	//???????????????????????????????????????????????????????
	//? Salta linha para impressao do proximo produto/grade. ?
	//????????????????????????????????????????????????????????
	nLinhaAtual += 40
EndIF
//????????????????????????????????????????????????????????
//? Salva a linha para impressao da proxima distribuicao. ?
//?????????????????????????????????????????????????????????
nLinhaFil := nLinhaAtual

RestArea(aAreaSM0)

Return(.T.)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ?R001RetGrade? Autor ?   Julio Cesar     ? Data ?  24/10/11  ???
????????????????????????????????????????????????????????????????????????????
???Desc.     ? Retorna a grade dos produtos.                              ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function R001RetGrade(cPedido,aColsSC7,aHeaderSC7,aHeaderGrade,aColsGrade,aColsFilial,aProdutos,nVlrTotal,nQtdTotal,aCaract,aPedTamanhos)

Local nX, nAux
Local lRet	:= .F.
Local aArea := GetArea()
Local cProduto
Local aCamposSC7 := {'C7_ITEM','C7_PRODUTO','C7_DESCRI','C7_LOCAL','C7_UM','C7_QUANT','C7_PRECO','C7_TOTAL','C7_TES','C7_DATPRF','C7_01ACREP',;
'C7_01DESCP','C7_01FILDE','C7_01GRADE','C7_01GRDQT','C7_01MRG','C7_01MULTI','C7_01PACKS','C7_01PRCCP','C7_01PRCVD','C7_01REFER'}

//????????????????????????????????????????????????????????????????????
//? Inicializa os arrays.                                             ?
//?????????????????????????????????????????????????????????????????????
aColsSC7	:= {}
aHeaderSC7	:= {}
aHeaderGrade:= {}
aColsGrade	:= {}
aColsFilial	:= {}
aProdutos	:= {}
aPedTamanhos:= {}
//????????????????????????????????????????????????????????????????????
//? Monta aHeaderSC7.                                                 ?
//?????????????????????????????????????????????????????????????????????
DbSelectArea("SX3")
DbSetOrder(2)

For nX := 1 To Len(aCamposSC7)

	DbSeek(aCamposSC7[nX])

	Aadd(aHeaderSC7,{ TRIM(X3Titulo()),;
	SX3->X3_CAMPO,SX3->X3_PICTURE,SX3->X3_TAMANHO,SX3->X3_DECIMAL,	SX3->X3_VALID,;
	SX3->X3_USADO,SX3->X3_TIPO,SX3->X3_F3,SX3->X3_CONTEXT,SX3->X3_CBOX,SX3->X3_RELACAO,".T." } )

Next

//????????????????????????????????????????????????????????????????????
//? Monta aColsSC7.                                                   ?
//?????????????????????????????????????????????????????????????????????
DbSelectArea("SC7")
DbOrderNickName("SYMMSC701")
DbSeek(xFilial("SC7")+cPedido)
While !Eof() .And. SC7->C7_FILIAL+SC7->C7_NUM == xFilial("SC7")+cPedido

	nAux := Ascan( aProdutos , {|x| Left(x[1],nTamPai) == Left(SC7->C7_PRODUTO,nTamPai) } )
	IF nAux == 0
		Aadd( aProdutos , { Left(SC7->C7_PRODUTO,nTamPai) , {} , {} , {} , 0 , 0 , '' , 0 } )
		nAux := Len(aProdutos)
	EndIF
	aProdutos[nAux,5] += SC7->C7_QUANT
	aProdutos[nAux,6] += SC7->C7_QUANT * SC7->C7_01PRCCP
	aProdutos[nAux,8] += SC7->C7_VALIPI

	nVlrTotal += ( SC7->C7_QUANT * SC7->C7_01PRCCP )
	nQtdTotal += SC7->C7_QUANT

	//Tratamento para calcular o custo final do produto.
	If SC7->C7_01QUALI=="A"
		nCustoFinal	:= SC7->C7_PRECO
	Else
		nCustoFinal	:= SC7->C7_PRECO - ( SC7->C7_PRECO * (SC7->C7_01PERCE / 100) )
	Endif

	Aadd(aColsSC7,Array(Len(aHeaderSC7)+1))
	For nX := 1 To Len(aHeaderSC7)
		IF ( aHeaderSC7[nX][10] != "V" )
			aColsSC7[Len(aColsSC7)][nX] := FieldGet(FieldPos(aHeaderSC7[nX][2]))
		Else
			aColsSC7[Len(aColsSC7)][nX] := CriaVar(aHeaderSC7[nX][2])
		EndIf
	Next nX

	DbSelectArea("SC7")
	DbSkip()

EndDo

//????????????????????????????????????????????????????????????????????
//? Monta Grade.                                                      ?
//?????????????????????????????????????????????????????????????????????
IF Len(aProdutos) > 0

	For nX := 1 To Len(aProdutos)

		cProduto := Left(aProdutos[nX,1],nTamPai)

		DbSelectArea("SB4")
		DbSetOrder(1)
		DbSeek(xFilial("SB4") + cProduto )
		//???????????????????????????????????????????????????????????
		//? Cria as grades dos produtos.                             ?
		//????????????????????????????????????????????????????????????
		CriaGrade(@aHeaderGrade,@aColsGrade,@aColsFilial,@aHeaderSC7,@aColsSC7,cPedido,cProduto,@aCaract,aPedTamanhos)

		//?????????????????????????????????????????????????????????????
		//? Atualiza Arrays com as Grades e Distribuicao dos Produtos. ?
		//??????????????????????????????????????????????????????????????
		aProdutos[nX,2] := aClone(aColsFilial)
		aProdutos[nX,3] := aClone(aHeaderGrade)
		aProdutos[nX,4] := aClone(aColsGrade)

	Next

EndIF

lRet := ( Len(aProdutos) > 0 )

RestArea(aArea)

Return(lRet)

/*
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???Programa  ? CriaGrade ? Autor ?  Alexandro Dias   ? Data ?  15/09/11   ???
????????????????????????????????????????????????????????????????????????????
???Descricao ? Cria Grade de Produtos.                                    ???
????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
?????????????????????????????????????????????????????????????????????????????
*/

Static Function CriaGrade(aHeaderGrade,aColsGrade,aColsFilial,aHeaderSC7,aColsSC7,cPedido,cProduto,aCaract,aPedTamanhos)

Local nH, nY, nX, nYx
Local nPsMultiSC7	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_01MULTI"})
Local nPsFilDest   	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_01FILDE"})
Local nPsChaveGrd  	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_01GRADE"})
Local nPsQtdGrd    	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_01GRDQT"})
Local nPsQuant     	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_QUANT"})
Local nPsRefFor    	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_01REFER"})
Local nPsProd    	:= Ascan(aHeaderSC7,{|x| Alltrim (x[2]) == "C7_PRODUTO"})
Local cFilSC7		:= xFilial("SC7")
Local aChaveGrd		:= {}
Local cChaveAY5		:= ''
Local nPsGrdNome 	:= 0
Local nPsRef 		:= 0
Local nPsDRef		:= 0
Local nPsCor 		:= 0
Local nPsCorDes		:= 0
Local nPosCols		:= 0
Local nPosMult		:= 0
Local nPosCodF		:= 0
Local nAux			:= 0
Local nIncremento 	:= 0
Local nGrdIniTam	:= 0

SB4->(DbSetOrder(1))
SB4->(DbSeek(xFilial('SB4')+cProduto))

//???????????????????????????????????????????????????????
//? Retorna os Tamanhos do Produto existentes no Pedido. ?
//????????????????????????????????????????????????????????
R001RetTam(cPedido,cProduto,aPedTamanhos,SB4->B4_LINHA,SB4->B4_COLUNA)

aColsFilial 	:= {}
aHeaderGrade	:= {}
aColsGrade		:= {}

//??????????????????????????????????????????????????????
//? Monta aHeaderSC7 da Grade.                          ?
//???????????????????????????????????????????????????????
Aadd(aHeaderGrade,{"Ref" 				,"REFER"		,"@!",nTamRef	,'C',0		})
Aadd(aHeaderGrade,{"Cor."				,"COR"  		,"@!",nTamLin	,'C',0		})
Aadd(aHeaderGrade,{"Pack"				,"GRADE"		,"@!",2			,'C',20		})
Aadd(aHeaderGrade,{"Referencia"	 		,"DREFER"		,"@!",12		,'C',100	})
Aadd(aHeaderGrade,{"Cores"				,"CORDESC"  	,"@!",12		,'C',300	})
Aadd(aHeaderGrade,{"Cod.Fornec"			,"CODFORN"  	,"@!",12		,'C',590	})

nIncremento := 780

//??????????????????????????????????????????????????????
//? Pega as Caracteristicas do Produto.                 ?
//???????????????????????????????????????????????????????
AY3->(dbSetOrder(1))
AY3->(dbSeek(xFilial("AY3")))
While AY3->(!Eof())

	IF AY3->AY3_TIPO == '2'
		Aadd(aHeaderGrade,{Capital(Alltrim(AY3->AY3_DESCRI)) , 'C_'+AllTrim(AY3->AY3_CODIGO) ,"@!",12 ,'C', nIncremento	 })
		Aadd(aCaract,'C_'+AllTrim(AY3->AY3_CODIGO))
		nIncremento += 165
	EndIF

	AY3->(DbSkip())
EndDo

//??????????????????????????????????????????????????????
//? Posicao inicial dos Tamanhos.                       ?
//???????????????????????????????????????????????????????
nGrdIniTam := Len(aHeaderGrade)+1

//??????????????????????????????????????????????????????
//? Pega os Tamanhos.                                   ?
//???????????????????????????????????????????????????????
SBV->(DbOrderNickName('SYMMSBV03'))
SBV->(Dbseek(xFilial("SBV")+SB4->B4_COLUNA))

While SBV->BV_TABELA = SB4->B4_COLUNA .and. ! SBV->(Eof())

	IF Ascan( aPedTamanhos , Alltrim(SBV->BV_CHAVE) ) > 0

		Aadd(aHeaderGrade,{Alltrim(SBV->BV_DESCRI),"C_"+Alltrim(SBV->BV_CHAVE),"@E 9999",4,'N',nIncremento})

		IF Len( Alltrim(SBV->BV_DESCRI) ) > 4
			nIncremento += 100
		Else
			nIncremento += 70
		EndIF

	EndIF

	SBV->(Dbskip())

Enddo

Aadd(aHeaderGrade,{"Mult"			,"MULTI"	,PesqPict("SC7","C7_01MULTI")	,TamSx3("C7_01MULTI")[1]	,'N', nIncremento 		})
Aadd(aHeaderGrade,{"Total"			,"TOTAL"	,"@E 999,999"					,5							,'N', nIncremento+=090	})
Aadd(aHeaderGrade,{"Unitario"		,"CUSTOR"	,PesqPict("SC7","C7_01PRCCP")	,TamSx3("C7_01PRCCP")[1]	,'N', nIncremento+=095	})
Aadd(aHeaderGrade,{"Preco Venda"	,"PRCVD"	,PesqPict("SC7","C7_01PRCVD")	,TamSx3("C7_01PRCVD")[1]	,'N', nIncremento+=128	})
Aadd(aHeaderGrade,{"Distribuicao"	,"DISTRIB"	,"@!"							,100						,'C', nIncremento+=250	})

nPsGrdNome	:= Ascan(aHeaderGrade,{|x| x[2] == "GRADE" 	})
nPsRef		:= Ascan(aHeaderGrade,{|x| x[2] == "REFER" 	})
nPsDRef		:= Ascan(aHeaderGrade,{|x| x[2] == "DREFER" 	})
nPsCor		:= Ascan(aHeaderGrade,{|x| x[2] == "COR" 		})
nPsCorDes	:= Ascan(aHeaderGrade,{|x| x[2] == "CORDESC"	})
nPosMult	:= Ascan(aHeaderGrade,{|x| x[2] == "MULTI"		})
nPosCodF	:= Ascan(aHeaderGrade,{|x| x[2] == "CODFORN"	})

//?????????????????????????????????????????????????????????
//? Carrega Distribuicao x Filiais.                        ?
//??????????????????????????????????????????????????????????
DbSelectArea("AYM")
DbSetOrder(3)
DbSeek(xFilial("AYM") + cFilSC7 + cPedido + Left(cProduto,nTamPai)  )
While !Eof() .And. AYM->AYM_FILIAL+AYM->AYM_FILORI+AYM->AYM_NUM+Left(AYM->AYM_PRODP,nTamPai) == xFilial("AYM")+cFilSC7+cPedido+Left(cProduto,nTamPai)

	nAux := Ascan(aColsFilial ,{ |x| x[1] + Left(x[2],2) == AYM->AYM_FILDES + Left(AYM->AYM_GRADE,2) } )
	IF nAux == 0
		Aadd( aColsFilial , { AYM->AYM_FILDES , Left(AYM->AYM_GRADE,2) , AYM->AYM_GRDQT , AYM->AYM_QUANT } )
	Else
		aColsFilial[nAux,4] += AYM->AYM_QUANT
	EndIF

    //?????????????????????????????????????????????????????????
	//? Carrega as quantidades da grade.                       ?
	//??????????????????????????????????????????????????????????
	nPos := Ascan(aChaveGrd,{|x| x[1]+x[2] == AYM->AYM_GRADE + AYM->AYM_SKU })
	If nPos == 0
		AAdd( aChaveGrd , { "" , "" ,  0 } )
		nPos := Len(aChaveGrd)
	Endif
	aChaveGrd[nPos,1] := AYM->AYM_GRADE
	aChaveGrd[nPos,2] := AYM->AYM_SKU
	aChaveGrd[nPos,3] += AYM->AYM_GRDQT

	DbSelectArea("AYM")
	DbSkip()
End

//?????????????????????????????????????????????????????????
//? Carrega aColsSC7 da Grade.                             ?
//??????????????????????????????????????????????????????????
nPosCols := Ascan( aColsSC7 ,{|x| Left(x[nPsProd],nTamPai) == Left(cProduto,nTamPai) })

IF nPosCols > 0

	For nY := nPosCols To Len(aColsSC7)

		cChaveGrd := Alltrim(aColsSC7[nY,nPsChaveGrd])

		IF !( Left(cProduto,nTamPai) == Padr(Left(aColsSC7[nY,nPsProd],nTamPai),nTamPai) .And. !Empty(cChaveGrd) )

			Exit

		Else
			//???????????????????????????????????????????????????????????
			//? Cria aColsSC7 por Grade+Cor.                 			 ?
			//????????????????????????????????????????????????????????????
			cTamGrd   := Substr(aColsSC7[nY,nPsProd],nTamPai+nTamLin+1,nTamCol)
			nColTamGrd:= Ascan(aHeaderGrade	,{|x| Upper(Alltrim(x[2])) == "C_"+cTamGrd } )
			nLinGrd   := Ascan(aColsGrade	,{|x| x[nPsGrdNome] + x[nPsRef] + x[nPsCor] == cChaveGrd } )

			IF nLinGrd == 0

				Aadd( aColsGrade, Array( Len(aHeaderGrade) ) )

				nLinGrd := Len(aColsGrade)

				For nH := 1 To Len(aHeaderGrade)

					IF aHeaderGrade[nH,5] == "N"
						aColsGrade[nLinGrd,nH] := 0
					ElseIF aHeaderGrade[nH,5] == "D"
						aColsGrade[nLinGrd,nH] := Ctod('')
					Else
						aColsGrade[nLinGrd,nH] := Space(aHeaderGrade[nH,4])
					EndIF

					IF Substr(aHeaderGrade[nH,2],1,2) == "C_"

					    cChaveAY5 := Padr( Alltrim(Substr(aHeaderGrade[nH,2],3,TamSx3("AY5_CODIGO")[1])) , TamSx3("AY5_CODIGO")[1] )
						cChaveAY5 += Padr( cProduto , TamSx3("AY5_CODPRO")[1] )
						cChaveAY5 += Padr( Left(aColsSC7[nY,nPsRefFor],nTamRef) , TamSx3("AY5_REFGRD")[1] )
						cChaveAY5 += Padr( Right(cChaveGrd,nTamLin) , TamSx3("AY5_LINGRD")[1] )

						DbSelectArea('AY5')
						DbSetOrder(3)
						IF DbSeek( xFilial("AY5") + cChaveAY5 )
							aColsGrade[nLinGrd,nH] := Posicione('AY4',1,xFilial('AY4')+AY5->AY5_CODIGO+AY5->AY5_SEQ,'Left(AY4_VALOR,10)')
						EndIF

                    EndIF

				Next

				aColsGrade[nLinGrd,nPsGrdNome] 			:= Left(cChaveGrd,2)
				aColsGrade[nLinGrd,nPsRef]				:= Left(aColsSC7[nY,nPsRefFor],nTamRef)
				aColsGrade[nLinGrd,nPsDRef]				:= Posicione("SB1",,xFilial("SB1")+Padr(cProduto,TamSx3("B1_01PRODP")[1])+aColsSC7[nY,nPsRefFor],"Left(B1_01DREF,13)","SYMMSB102")
				aColsGrade[nLinGrd,nPsCor]				:= Right(cChaveGrd,nTamLin)
				aColsGrade[nLinGrd,nPsCorDes]			:= Posicione("SBV",1,xFilial("SBV")+SB4->B4_LINHA+Right(cChaveGrd,nTamLin),"Left(BV_DESCRI,15)")
				aColsGrade[nLinGrd,nPosMult] 			:= aColsSC7[nY,Ascan(aHeaderSC7,{|x| Upper(Alltrim(x[2])) == "C7_01MULTI"})]
				aColsGrade[nLinGrd,Ascan(aHeaderGrade,{|x|Alltrim(x[2])=="CUSTOR"})]	:= aColsSC7[nY,Ascan(aHeaderSC7,{|x| Upper(Alltrim(x[2])) == "C7_01PRCCP" 	})]
				aColsGrade[nLinGrd,Ascan(aHeaderGrade,{|x|Alltrim(x[2])=="PRCVD"})]	:= Posicione("SB1",,xFilial("SB1")+Padr(cProduto,TamSx3("B1_01PRODP")[1]),"B1_PRV1","SYMMSB102")
				aColsGrade[nLinGrd,nPosCodF]			:= Posicione("SB1",,xFilial("SB1")+Padr(cProduto,TamSx3("B1_01PRODP")[1])+Padr(aColsSC7[nY,nPsRefFor],TamSx3("B1_01RFGRD")[1])+Padr(Right(cChaveGrd,nTamLin),TamSx3("B1_01LNGRD")[1]),"B1_01CODFO","SYMMSB102")

			EndIF
			//???????????????????????????????????????????????????????????
			//? Quantidade da Grade.        		 	                 ?
			//????????????????????????????????????????????????????????????
			nPos := Ascan(aChaveGrd,{|x| Left(x[1],2)+Alltrim(x[2]) == Left(cChaveGrd,2) + Alltrim(aColsSC7[nY,2]) })
			If nPos > 0
				aColsGrade[nLinGrd,nColTamGrd] := (( aColsSC7[nY,nPsQuant] / aColsGrade[nLinGrd,nPosMult] ) / aChaveGrd[nPos,3])
			Endif

		EndIF

	Next

	//???????????????????????????????????????????????????????????
	//? Atualiza a coluna de total de pares do grade.		     ?
	//????????????????????????????????????????????????????????????
	For nY := 1 To Len(aColsGrade)
		For nYx := nGrdIniTam To Len(aHeaderGrade) - GRD_FIMTAM
			aColsGrade[nY,Ascan(aHeaderGrade,{|x| x[2]=="TOTAL"})] += ( aColsGrade[nY,nPosMult] * aColsGrade[nY,nYx] ) // Total de Tamanhos por Cor
		Next
	Next

EndIF

//??????????????????????????????????????????????????????
//? Ordena por Grade, Referencia e Cor.                 ?
//???????????????????????????????????????????????????????
aSort(aColsGrade,,,{|x,y| x[nPsGrdNome] + x[nPsRef] + x[nPsCor] < y[nPsGrdNome] + y[nPsRef] + y[nPsCor] })

//??????????????????????????????????????????????????????
//? Ordena por Grade e Filial.		                    ?
//???????????????????????????????????????????????????????
aSort(aColsFilial,,,{|x,y| x[2] + x[1] < y[2] + y[1] })

Return(.T.)

/*
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???????????????????????????????????????????????????????????????????????????
???Programa  ?  Cabec  ? Autor ?  Alexandro Dias    ? Data ?  23/11/11   ???
???????????????????????????????????????????????????????????????????????????
???Descricao ? Calcula se pode imprimir o cabecalho do pedido de compra. ???
???????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
*/

Static Function Cabec(cPedido,nNumPagina,nLinhaAtual,cUser,cComprador,nQtditens,cQualidade,cCondPagto,nLinhaFil)

//???????????????????????????????????????????????????????????????????
//? Usado para calcular se existe margem para imprimir nesta pagina. ?
//????????????????????????????????????????????????????????????????????
Local nAjusteCabec 	:= 4
Local nSalto 		:= ( nQtditens + nAjusteCabec) * 38
Local lRet			:= .F.

IF nLinhaAtual == 0 .Or. ( nLinhaAtual >= ALTURA_PAGINA )
	Imp_Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,cQualidade,cCondPagto,@nLinhaFil)
	lRet := .T.
ElseIF ( nLinhaAtual+nSalto >= ALTURA_PAGINA )
	Imp_Cabec(cPedido,@nNumPagina,@nLinhaAtual,cUser,cComprador,cQualidade,cCondPagto,@nLinhaFil)
	lRet := .T.
EndIF

Return lRet

/*
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???????????????????????????????????????????????????????????????????????????
???Programa  ?r001Email? Autor ?  Alexandro Dias    ? Data ?  23/11/11   ???
???????????????????????????????????????????????????????????????????????????
???Descricao ? Envia email com pedido de compra anexo.                   ???
???????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
*/

Static Function r001Email(cEmail,cArqPed,cDirTemp)

Local oDlg, oDir
Local cArqOut	:= cDirTemp + '\diroutlook.txt'
Local cOutLook	:= MemoRead(cArqOut)
Local nTenta 	:= 1
Local lOk		:= .T.

IF !MsgYesNo('Deseja enviar este Pedido de Compra por Email ?')
	Return(.T.)
EndIF

IF Empty(cEmail)
	Help(Nil,Nil,ProcName(),,'O e-mail do fornecedor n?o esta cadastrado.', 1, 5)
	Return(.T.)
EndIF

cOutLook := IF( !Empty(cOutLook) , Alltrim(cOutLook) , Space(255) )

While nTenta <= 3

	IF File( Alltrim(cOutLook) + 'OUTLOOK.EXE' )
		Exit
	Else

		Help(Nil,Nil,ProcName(),,'Informe corretamente o Diret?rio do Outlook.', 1, 5)

		DEFINE MSDIALOG oDlg FROM  0,0 TO 100,600  Pixel TITLE OemToAnsi("Informe o Diret?rio do Outlook. Exemplo [C:\Program Files\Microsoft Office\]")

		oDlg:lEscClose := .F.

		@ 010,005 Say "Diret?rio:" PIXEL of oDlg   FONT (TFont():New('Arial',, -11, .T., .T.) )
		@ 018,005 GET oDir VAR cOutLook SIZE 250,08 When .T. OF oDlg PIXEL FONT (TFont():New('Arial',, -11, .T., .T.) )

		TButton():New( 035, 30,"&Ok"		, oDlg, {|| lOk := .T. , oDlg:End() }					, 38, 11,,, .F., .t., .F.,, .F.,,, .F. )
		TButton():New( 035, 80,"&Cancelar"	, oDlg, {|| lOk := .F. , nTenta := 5 , oDlg:End() }	, 38, 11,,, .F., .t., .F.,, .F.,,, .F. )

		ACTIVATE MSDIALOG oDlg CENTERED

	EndIF

	nTenta++

EndDo

IF lOk

	//??????????????????????????????????
	//? Arquiva o caminho do diretorio. ?
	//???????????????????????????????????
	MemoWrit(cArqOut,cOutLook)

	//??????????????????????????????????
	//? Abre Outlook e envia por email. ?
	//???????????????????????????????????
	ShellExecute( 	'Open' ,;
					Alltrim(cOutLook) + 'OUTLOOK.EXE' ,;
					'/c ipm.note /m '+Alltrim(cEmail)+ ' /a ' +cDirTemp+ '\' +cArqPed ,;
					'c:\' ,;
					1 )
EndIF

Return(.T.)

/*
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
???????????????????????????????????????????????????????????????????????????
???Programa  ?R001RetTam? Autor ?  Alexandro Dias    ? Data ?  23/11/11  ???
???????????????????????????????????????????????????????????????????????????
???Descricao ? Retorna os Tamanhos do produto existentes no pedido.      ???
???????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
????????????????????????????????????????????????????????????????????????????
*/

Static Function R001RetTam(cPedido,cProduto,aPedTamanhos,cLinha,cColuna)

Local aArea 		:= GetArea()
Local cQuery 		:= ''

//???????????????????????????????????
//? Filtra os tamanhos do Produto.   ?
//????????????????????????????????????
cQuery := " SELECT "
cQuery += "		SUBSTRING(C7_PRODUTO," +Alltrim(Str(nTamPai+nTamLin+1))+	"," + Alltrim(Str(nTamCol)) + ") AS CODCOL "
cQuery += "	FROM " +RetSqlName("SC7")+ " SC7 (NOLOCK) , " +RetSqlName("SBV")+ " SBV (NOLOCK) "
cQuery += "	WHERE "
cQuery += " 	SC7.C7_FILIAL 	= '" +xFilial("SC7")+ 	"' AND "
cQuery += " 	SC7.C7_NUM		= '" +cPedido+			"' AND "
cQuery += " 	SC7.C7_01PRODP	= '" +cProduto+			"' AND "
cQuery += " 	SC7.D_E_L_E_T_	= ' ' 					   AND "
cQuery += " 	BV_FILIAL 		= '" +xFilial("SBV")+ 	"' AND "
cQuery += " 	BV_TABELA 		= '" +cColuna+			"' AND "
cQuery += " 	LEFT(BV_CHAVE," +Alltrim(Str(nTamCol))+") = SUBSTRING(C7_PRODUTO," +Alltrim(Str(nTamPai+nTamLin+1))+	"," + Alltrim(Str(nTamCol)) + ") AND "
cQuery += " 	SBV.D_E_L_E_T_		= ' ' "
cQuery += " 	GROUP BY BV_01SEQ , SUBSTRING(C7_PRODUTO," +Alltrim(Str(nTamPai+nTamLin+1))+	"," + Alltrim(Str(nTamCol)) + ")
cQuery += " 	ORDER BY BV_01SEQ , SUBSTRING(C7_PRODUTO," +Alltrim(Str(nTamPai+nTamLin+1))+	"," + Alltrim(Str(nTamCol)) + ")

DbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"VR001TRB",.T.,.T.)

DbGoTop()
While !Eof()
	IF Ascan( aPedTamanhos ,	Alltrim(VR001TRB->CODCOL) ) == 0
		Aadd( aPedTamanhos ,	Alltrim(VR001TRB->CODCOL) )
	EndIF
	DbSkip()
EndDo
DbCloseArea()

RestArea(aArea)

Return(.T.)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³DANFE     ºAutor  ³Marcos Taranta      º Data ³  10/01/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Pega uma posição (nTam) na string cString, e retorna o      º±±
±±º          ³caractere de espaço anterior.                               º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function EspacoAt(cString, nTam)

Local nRetorno := 0
Local nX       := 0

/**
* Caso a posição (nTam) for maior que o tamanho da string, ou for um valor
* inválido, retorna 0.
*/
If nTam > Len(cString) .Or. nTam < 1
	nRetorno := 0
	Return nRetorno
EndIf

/**
* Procura pelo caractere de espaço anterior a posição e retorna a posição
* dele.
*/
nX := nTam
While nX > 1
	If Substr(cString, nX, 1) == " "
		nRetorno := nX
		Return nRetorno
	EndIf

	nX--
EndDo

/**
* Caso não encontre nenhum caractere de espaço, é retornado 0.
*/
nRetorno := 0

Return nRetorno

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ CabProd  ºAutor  ³ SYMM Consultoria   º Data ³  27/08/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Realizacao impressao do cabecalho do produto.			  º±±
±±º          ³								                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function CabProd(aProdutos,nPos,nLinhaAtual,nLinhaFil)

Local nX
Local nColPrint	:= 0
Local nLinhaFil	:= 0

oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+0010 , "Produto: " 		+ Alltrim(SB4->B4_COD)+ " - " +Left(SB4->B4_DESC,40)									, oFonte2 )
oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+1000 , "Quantidade: " 	+ Alltrim(Transform(aProdutos[nPos,5],'@E 999,999'))									, oFonte2 )
oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+1300 , "SubTotal R$: "	+ Alltrim(Transform(aProdutos[nPos,6],PesqPict("SC7","C7_TOTAL")))						, oFonte2 )
oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+1700 , "Vlr. IPI: "		+ Alltrim(Transform(aProdutos[nPos,8],PesqPict("SC7","C7_VALIPI")))					, oFonte2 )
oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+2100 , "Total R$: "		+ Alltrim(Transform((aProdutos[nPos,6]+aProdutos[nPos,8]),PesqPict("SC7","C7_TOTAL"))), oFonte2 )
oPrinter:Say( nLinhaAtual , COLUNA_INICIAL+2500 , "Marca: "			+ Alltrim(Posicione("AY2",1,xFilial("AY2")+SB4->B4_01CODMA	,"Alltrim(AY2_DESCR)"))		, oFonte2 )

nLinhaAtual += 50

//????????????????????????????????????????????????????
//? Cria um Box para impressao do cabecalho da Grade. ?
//?????????????????????????????????????????????????????
oPrinter:Box( nLinhaAtual-22, COLUNA_INICIAL, nLinhaAtual+048, LARGURA_PAGINA)

//??????????????????????????????????????????????????
//? Impressao do Header da Grade.                   ?
//???????????????????????????????????????????????????
For nX := GRD_INI To Len(aProdutos[nPos,3])

	nColPrint := aProdutos[nPos,3,nX,6]

	IF nX == Len(aProdutos[nPos,3])

		//????????????????????????????????????????????????????????
		//? Imprime HEADER da Distribuicao.                       ?
		//?????????????????????????????????????????????????????????

		oPrinter:Say( nLinhaAtual		, nColPrint 	, aProdutos[nPos,3,nX,1] , oFonte2 )

		oPrinter:Say( nLinhaAtual+38	, nColPrint		, 'Filial' 	, oFonte3 )
		oPrinter:Say( nLinhaAtual+38	, nColPrint+140	, 'Qt.Pack'	, oFonte3 )
		oPrinter:Say( nLinhaAtual+38	, nColPrint+240	, 'Qt.Total', oFonte3 )

		oPrinter:Say( nLinhaAtual+38	, nColPrint+360	, 'Filial' 	, oFonte3 )
		oPrinter:Say( nLinhaAtual+38	, nColPrint+500	, 'Qt.Pack'	, oFonte3 )
		oPrinter:Say( nLinhaAtual+38	, nColPrint+600	, 'Qt.Total', oFonte3 )

    Else

		oPrinter:Say( nLinhaAtual+8 	, nColPrint , aProdutos[nPos,3,nX,1] , oFonte2 )

    EndIF

	//????????????????????????????????????????????????????????
	//? Imprime traco vertical entre as colunas do cabecalho. ?
	//?????????????????????????????????????????????????????????
	IF nX+1 <= Len(aProdutos[nPos,3])

		nColPrint := aProdutos[nPos,3,nX+1,6] - 8

		oPrinter:Line( nLinhaAtual-22 , nColPrint , nLinhaAtual+48 , nColPrint )

	EndIF

Next

nLinhaAtual	+= 75
nLinhaFil 	:= nLinhaAtual

Return
