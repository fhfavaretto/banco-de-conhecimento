#INCLUDE "MATA103X.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "FWMVCDEF.CH"
#INCLUDE "FWADAPTEREAI.CH"
#DEFINE VALMERC 01	// Valor total do mercadoria
#DEFINE VALDESC 02	// Valor total do desconto
#DEFINE TOTPED	 03	// Total do Pedido
#DEFINE FRETE   04	// Valor total do Frete
#DEFINE VALDESP 05	// Valor total da despesa
#DEFINE TOTF1	 06	// Total de Despesas Folder 1
#DEFINE SEGURO	 07	// Valor total do seguro
#DEFINE TOTF3	 08	// Total utilizado no Folder 3
#DEFINE VNAGREG	 09	// Valor total nao agregado ao total do documento
#DEFINE _CRLF	Chr(13) + Chr(10)

Static lIndCteCol

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ MATA103X ³ Autor ³ Eduardo Riera         ³ Data ³ 17.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcoes de validacao e controle de interface do documento de ³±±
±±³          ³ de entrada                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeCabDoc ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de tratamento do cabecalho do documento de entrada    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela que sera disponibilizado os Get      ³±±
±±³          ³ExpA2: Array com as posicoes dos gets do documento de entrada³±±
±±³          ³Expb3: Codeblock para atualizacao dos dados do documento     ³±±
±±³          ³ExpL4: Informa se o cabecalho pode ser alterado              ³±±
±±³          ³ExpL5: Indica se eh uma uma pre-nota                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo exibir/controlar o folder finan³±±
±±³          ³ceiro.                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeCabDoc(oDlg,aPosGet,bRefresh,lVisual,lFiscal,cUfOrig,lClassif,lPreNota,nCombo,oCombo,cCodRet,oCodRet,lNfMedic,aCodR,cRecIss,cNatureza,l140Altera)

Local aObjetos   := Array(10)
Local aCombo1    := {	STR0001,;	//"Normal"
						STR0002,;	//"Devolucao"
						STR0003,;	//"Beneficiamento"
						STR0004,;	//"Compl.  ICMS"
						STR0005,;	//"Compl.  IPI"
						STR0006} 	//"Compl. Preco/Frete"

Local aCombo2    := {STR0007,STR0008} //"Nao"###"Sim"
Local aCombo2Lan := {STR0007,STR0008,STR0008} // Nao retirar, abrange language=English
Local aAuxCombo1 := {"N","D","B","I","P","C"}
Local aAuxCombo2 := {"N","S","Y"}

Local c103SayForn:= IIf(cTipo$"DB",RetTitle("F2_CLIENTE"),RetTitle("F1_FORNECE"))
Local c103Tipo	 := ""
Local c103Form	 := cFormul
Local cCar       := CHR(34)+CHR(39)        // Caracteres que não serão permitidos na digitação do campo: Nota e Série
Local nAux       := aScan(aAuxCombo1,cTipo)
Local lGspInUseM := If(Type('lGspInUse')=='L', lGspInUse, .F.)
Local nTamGetFor := 45
Local nScreen    := GetScreenRes()[1]
Local nEspLoja   := 0
Local nAltNFE    := 0

Local lUfOrig    := ( ValType( cUfOrig ) == "C" )
Local lMt103CPS  := Existblock("MT103CPS")
Local oNfMedic   := .F.
Local lUsaNewKey := TamSX3("F1_SERIE")[1] == 14 // Verifica se o novo formato de gravacao do Id nos campos _SERIE esta em uso

Local lIntGfe := SuperGetMV("MV_INTGFE",.F.,.F.)
lClassif:= If( ValType( lClassif ) == "L" , lClassif, .F.)

cFormul := If( ValType( cFormul ) <> "C" .Or. Empty(cFormul) , "N", cFormul )

DEFAULT lPreNota 		:= .F.
DEFAULT l140Altera	:= .F.
Default aCodR	 		:= {}
Default cRecIss	 	:= "1"
Default cNatureza		:= ""

If lPreNota
	nEspLoja   := Iif(nScreen<1280 .And. !lVisual, 5,-3)
Else
	nEspLoja   := Iif(nScreen<1280 .And. !lVisual, 5,1)
EndIF
nAltNFE    := Iif(lPreNota .And. ALTERA  ,15 ,0)

aCombo1    := IIF(lPreNota,{STR0001,STR0002,STR0003,STR0006},{STR0001,STR0002,STR0003,STR0004,STR0005,STR0006}) //STR0001>"Normal" STR0002>"Devolucao" STR0003>"Beneficiamento" STR0004>"Compl.  ICMS" STR0005>"Compl.  IPI" STR0006>"Compl. Preco/Frete"
aAuxCombo1 := IIF(lPreNota,{"N","D","B","C"},{"N","D","B","I","P","C"})
nAux       := aScan(aAuxCombo1,cTipo)

If !Empty(cTipo) .And. nAux <> 0
	c103Tipo := aCombo1[nAux]
EndIf
nAux := aScan(aAuxCombo2,cFormul)
If !Empty(cFormul) .And. nAux <> 0
	c103Form := aCombo2Lan[nAux]
EndIf

If !lNfMedic
	If TamSX3("A2_COD")[1]< 9
		nTamGetFor:=(6*TamSX3("A2_COD")[1])
	ElseIf TamSX3("A2_COD")[1]< 15
		nTamGetFor:=(4.8*TamSX3("A2_COD")[1])
	Else
		nTamGetFor:=(4*TamSX3("A2_COD")[1])
	EndIf
EndIf
@ aPosGet[3,1],aPosGet[3,2] TO aPosGet[3,3],aPosGet[3,4] LABEL "" OF oDlg PIXEL

@ aPosGet[3,1]+(2,6),aPosGet[1,1] SAY RetTitle("F1_TIPO") OF oDlg PIXEL SIZE 35,09
@ aPosGet[3,1]+(2,5),aPosGet[1,2] MSCOMBOBOX aObjetos[1] VAR c103Tipo ITEMS aCombo1 SIZE 50,90;
	WHEN !lVisual .And. !IsInCallStack("MATA116") .And. !IsInCallStack("MATA119") .And. A103ChWhen("F1_TIPO",c103Tipo,lClassif) ;
	VALID NfeCombo(@cTipo,aCombo1,c103Tipo,aAuxCombo1).And.NfeTipo(cTipo,@cA100For,@cLoja,aObjetos[6],aObjetos[7],aObjetos[8],oDlg);
	OF oDlg PIXEL

If !lGspInUseM
	@ aPosGet[3,1]+(2,6),aPosGet[1,3] SAY RetTitle("F1_FORMUL") Of oDlg PIXEL SIZE 52,09
	@ aPosGet[3,1]+(2,5),aPosGet[1,4] MSCOMBOBOX aObjetos[2] VAR c103Form ITEMS aCombo2 SIZE 25,50 ;
		WHEN !lVisual .And. A103ChWhen("F1_FORMUL",c103Form,lClassif) ;
		VALID NfeCombo(@cFormul,aCombo2Lan,c103Form,aAuxCombo2).And.NfeFormul(cFormul,@cNFiscal,@cSerie,aObjetos[3],@aObjetos[4]) ;
		OF oDlg PIXEL
Endif

@ aPosGet[3,1]+(2,6),aPosGet[1,5] SAY RetTitle("F1_DOC") Of oDlg PIXEL SIZE 45,09
@ aPosGet[3,1]+(2,5),aPosGet[1,6] MSGET aObjetos[3] VAR cNFiscal PICTURE PesqPict("SF1","F1_DOC") ;
	WHEN !lVisual.And.VisualSX3("F1_DOC") .And.cFormul<>"S" .And. A103ChWhen("F1_DOC",cNFiscal,lClassif) ;
	VALID NfeFornece(cTipo,@cA100For,@cLoja,,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza).And.CheckSX3("F1_DOC") .And. !A103VldCpo(cNfiscal,cCar);
	OF oDlg PIXEL SIZE 46,09

@ aPosGet[3,1]+(2,6),aPosGet[1,7] SAY RetTitle("F1_SERIE") Of oDlg PIXEL SIZE 23,09
@ aPosGet[3,1]+(2,5),aPosGet[1,8] MSGET aObjetos[4] VAR cSerie  PICTURE PesqPict("SF1","F1_SERIE") ;
    F3 IIF( lMT103CPS,ExecBlock("MT103CPS",.F.,.F.),"");
    WHEN !lVisual.And.VisualSX3('F1_SERIE').And.cFormul<>"S" .And. A103ChWhen("F1_SERIE",cSerie,lClassif);
	VALID NfeFornece(cTipo,@cA100For,@cLoja,,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza).And.CheckSX3("F1_SERIE") .And. !A103VldCpo(cSerie,cCar);
	OF oDlg PIXEL SIZE 18,09

If cPaisLoc == "PTG"
	@ aPosGet[3,1]+(2,6),aPosGet[1,9] SAY RetTitle("F1_DIACTB") Of oDlg PIXEL SIZE 30,09
	@ aPosGet[3,1]+(2,5),aPosGet[1,10] MSGET aObjetos[10] VAR cCodDiario PICTURE PesqPict("SF1","F1_DIACTB") WHEN !lVisual .And. VisualSX3("F1_DIACTB") F3 CpoRetF3("F1_DIACTB") ;
	    VALID CheckSX3("F1_DIACTB") OF oDlg PIXEL SIZE 30,09 HASBUTTON
EndIf
@ aPosGet[3,1]+25,aPosGet[2,1] SAY RetTitle("F1_EMISSAO") OF oDlg PIXEL SIZE 35,09
@ aPosGet[3,1]+24,aPosGet[2,2] MSGET aObjetos[5] VAR dDEmissao PICTURE PesqPict("SF1","F1_EMISSAO") ;
	WHEN (!lVisual .or. lClassif).And.VisualSX3("F1_EMISSAO").And. A103ChWhen("F1_EMISSAO",dDEmissao,lClassif) Valid CheckSX3("F1_EMISSAO") .And. NfeEmissao(dDEmissao) ;
	OF oDlg PIXEL SIZE 45 ,9 HASBUTTON

If Valtype( lNfMedic ) == "L" .And. !lVisual .And. A103GCDisp() // Indica se exibe CheckBox de carga das medicoes de contratos
	@ aPosGet[3,1]+25,aPosGet[2,3]-15 SAY aObjetos[6] VAR c103SayForn Of oDlg PIXEL SIZE 43,09
	@ aPosGet[3,1]+24,aPosGet[2,4]-35 MSGET aObjetos[7] VAR cA100For  ;
		PICTURE PesqPict("SF1","F1_FORNECE") F3 CpoRetF3("F1_FORNECE");
		WHEN !lVisual.And.VisualSX3("F1_FORNECE").And. A103ChWhen("F1_FORNECE",cA100For,lClassif) ;
		VALID NfeFornece(cTipo,@cA100For,@cLoja,@cUfOrig,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza).And.CheckSX3("F1_FORNECE",cA100For).And.NfeVldRef("NF_CODCLIFOR",cA100For) ;
		OF oDlg PIXEL SIZE nTamGetFor,09 HASBUTTON
Else
	@ aPosGet[3,1]+25,aPosGet[2,3]-10 SAY aObjetos[6] VAR c103SayForn Of oDlg PIXEL SIZE 43,09
	@ aPosGet[3,1]+24,aPosGet[2,4]-nAltNFE MSGET aObjetos[7] VAR cA100For  ;
		PICTURE PesqPict("SF1","F1_FORNECE") F3 CpoRetF3("F1_FORNECE");
		WHEN !lVisual.And.VisualSX3("F1_FORNECE").And. A103ChWhen("F1_FORNECE",cA100For,lClassif) ;
		VALID NfeFornece(cTipo,@cA100For,@cLoja,@cUfOrig,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza).And.CheckSX3("F1_FORNECE",cA100For).And.NfeVldRef("NF_CODCLIFOR",cA100For) ;
		OF oDlg PIXEL SIZE nTamGetFor,09 HASBUTTON

		If IsInCallStack("MATA119")
			NfeFornece(cTipo,@cA100For,@cLoja,@cUfOrig,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza)
	    EndIf
EndIf
@ aPosGet[3,1]+24,aPosGet[2,5]+nEspLoja MSGET aObjetos[8] VAR cLoja ;
	PICTURE PesqPict("SF1","F1_LOJA") ;
	F3 CpoRetF3("F1_LOJA") ;
	WHEN !lVisual.And.VisualSX3("F1_LOJA") .And. A103ChWhen("F1_LOJA",cLoja,lClassif);
	VALID NfeFornece(cTipo,@cA100For,@cLoja,@cUfOrig,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza).And.CheckSX3("F1_LOJA",cLoja).And.NfeVldRef("NF_LOJA",cLoja) ;
	OF oDlg PIXEL SIZE 15,09 HASBUTTON

If !lGspInUseM

	@ aPosGet[3,1]+25,aPosGet[2,6]+nAltNFE SAY RetTitle("F1_ESPECIE") Of oDlg PIXEL SIZE 63,09
	@ aPosGet[3,1]+24,aPosGet[2,7]+nAltNFE MSGET aObjetos[9] VAR cEspecie ;
		PICTURE PesqPict("SF1","F1_ESPECIE") ;
		F3 CpoRetF3("F1_ESPECIE");
		WHEN (lClassif.Or.!lVisual).And.VisualSX3("F1_ESPECIE").And. A103ChWhen("F1_ESPECIE",cEspecie,lClassif);
		VALID CheckSX3("F1_ESPECIE",cEspecie) .And. Iif(lIntGfe,A103VldEsp(cEspecie),.T.)	.And. ;
        IIf( lUsaNewKey , NfeFornece(cTipo,@cA100For,@cLoja,@cUfOrig,@nCombo,@oCombo,@cCodRet,@oCodRet,@aCodR,@cRecIss,@cNatureza) , .T.) ;
		OF oDlg PIXEL SIZE 30,09 HASBUTTON

	If lUfOrig
		@ aPosGet[3,1]+25,aPosGet[2,8]+nAltNFE SAY OemToAnsi(STR0028) Of oDlg PIXEL SIZE 63 ,9 // UF.Origem
		@ aPosGet[3,1]+24,aPosGet[2,9]+nAltNFE MSGET cUfOrig PICTURE "@!" F3 "12" ;
			When !lVisual.And.VisualSX3('F1_EST').And. A103ChWhen("F1_EST",cUfOrig,lClassif) Valid CheckSX3('F1_EST',cUfOrig) .And. ;
			MaFisAlt( "NF_UFORIGEM", cUfOrig ) .And. Eval( bGdRefresh ) OF oDlg PIXEL SIZE 20,9 HASBUTTON
	EndIf

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Indica se exibe CheckBox de carga das medicoes de contratos         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Valtype( lNfMedic ) == "L" .And. (!lVisual .Or. l140Altera) .And. A103GCDisp()
	@ aPosGet[3,1]+25,aPosGet[2,10] SAY STR0053 Of oDlg PIXEL SIZE 63,09 // "Filtra Medicao"
	@ aPosGet[3,1]+24,aPosGet[2,10] + 44 CHECKBOX oNfMedic VAR lNfMedic PROMPT "" SIZE 008,010 ON CLICK( oNfMedic:Refresh() ) OF oDlg PIXEL
EndIf

bRefresh := {|| NfeCabOk(lVisual,aObjetos[1],aObjetos[3],aObjetos[5],aObjetos[7],aObjetos[8],lFiscal,cUfOrig,,,aObjetos[9],.T.)}

aObjetos[1]:SetFocus()

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeCabOk  ³Autor  ³ Eduardo Riera         ³ Data ³17.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao dos dados do cabecalho do documento de   ³±±
±±³          ³entrada                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1: Indica se eh uma operacao de visualizacao             ³±±
±±³          ³ExpO2: Objeto get do tipo do documento de entrada            ³±±
±±³          ³ExpO3: Objeto get do numero do documento de entrada          ³±±
±±³          ³ExpO4: Objeto get da data de emissao do documento de entrada ³±±
±±³          ³ExpO5: Objeto get do codigo do fornecedor do documento       ³±±
±±³          ³ExpO6: Objeto get da loja do fornecedor do documento         ³±±
±±³          ³ExpC7: Unidade federativa de origem                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo exibir/controlar o folder finan³±±
±±³          ³ceiro.                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function NfeCabOk(lVisual,oTipo,oNota,oEmissao,oFornece,oLoja,lFiscal,cUfOrig,cCodMunISS,cUfPresISS,oEspecie,lVldEspec)
Local lRetorno 	:= .F.
Local bIPRefresh:= {|| MaFisToCols(aHeader,aCols,,"MT100"),Eval(bRefresh),Eval(bGdRefresh)}	// Carrega os valores da Funcao fiscal e executa o Refresh
Local nDespesa	:= 0
Local lEspObg	:= SuperGetMV("MV_ESPOBG",.F.,.F.)

DEFAULT lFiscal := .T.
DEFAULT lVldEspec	:= .F.
DEFAULT cUfOrig := ""
DEFAULT cCodMunISS := ""
DEFAULT cUfPresISS := ""
DEFAULT oEspecie	:= NIL

Do Case
	Case Empty(cTipo)
		If oTipo<>Nil
			oTipo:SetFocus()
		EndIf
	Case Empty(cNFiscal) .And. cFormul <> "S"
		If oNota<>Nil
			oNota:SetFocus()
		EndIf
	Case Empty(dDEmissao)
		If oEmissao<>Nil
			oEmissao:SetFocus()
		EndIf
	Case Empty(cA100For)
		If oFornece<>Nil
			oFornece:SetFocus()
		EndIf
	Case Empty(cLoja)
		If oLoja<>Nil
			oLoja:SetFocus()
		EndIf
	Case Empty(cEspecie) .And. lEspObg .And. lVldEspec .And. (AllTrim(FunName())<>"MATA140")
		If oEspecie<>Nil
			oEspecie:SetFocus()
		EndIf
	OtherWise
		If lFiscal
			If !MaFisFound("NF")
				MaFisIni(cA100For,cLoja,IIf(cTipo$'DB',"C","F"),cTipo,Nil,MaFisRelImp("MT100",{"SF1","SD1"}),,!lVisual,NIL,NIL,NIL,,,,,,,,,,,,,,dDEmissao)
	          If !Empty(cUfOrig)
				   MaFisAlt("NF_UFORIGEM",cUfOrig)
				Endif
	          If !Empty(cCodmunISS)
				   MaFisAlt("NF_CODMUN",cCodMunISS)
				EndIf

	          If !Empty(cUfPresISS)
				   MaFisAlt("NF_UFPREISS",cUfPresISS)
				EndIf
			Else
    	       If !Empty(cUfOrig)
				   MaFisAlt("NF_UFORIGEM",cUfOrig)
				Endif
				If !Empty(MaFisScan("NF_DTEMISS",.F.))	// Verifica se a MATXFIS possui a referentcia NF_DTEMISS
					MaFisAlt("NF_DTEMISS",dDEmissao)
					Eval(bIPRefresh)
				EndIf
			EndIf
			If(Type("cEspecie")<>"U" .And. cEspecie<>Nil)
				MaFisAlt("NF_ESPECIE",cEspecie)
			EndIf
		EndIf
		lRetorno := .T.
EndCase
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeCombo  ³Autor  ³Alexandre Inacio Lemes ³ Data ³22/01/2009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de verificacao dos codigos dos combos                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Variavel que recebera conteudo do array de referencia.³±±
±±³          ³ExpA2: Array do combobox                                     ³±±
±±³          ³ExpC3: Valor selecionado do combobox                         ³±±
±±³          ³ExpA4: Objeto say para atualizar o texto                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Posicicao do combo                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo encontrar a referencia correta ³±±
±±³          ³do combobox                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfeCombo(cVariavel,aCombo,cCombo,aReferencia)

Local nPos	:= aScan(aCombo,cCombo)
Local lRet  := (nPos>0)

If Type("cFunTipo") == "U"
	Static cFunTipo := ""
EndIf

If !Empty(cVariavel) .And. cVariavel <> aReferencia[nPos] .And. (Len(aReferencia) == 6 .Or. Len(aReferencia) == 4); // Verifica se o Combo editado e o Tipo da NFE (Len()=6) em detrimento ao do Formulario Proprio (Len()=2).
	.And. (Len(aCols) > 1 .Or. !Empty(aCols[1][2])) //verifica se tem informação no aCols para excluir
	If MsgYesNo(STR0071,STR0018) //"Ao alterar o tipo da Nota os itens já digitados serão excluídos. Deseja continuar?"
	If IsInCallStack("MATA140")
			A103LimpIT(cTipo,@cA100For,@cLoja)
		EndIf
		If nPos > 0
			cVariavel := aReferencia[nPos]
		EndIf
    Else
        lRet := .F.
	EndIf
Else
	If nPos > 0
		cVariavel := aReferencia[nPos]
	EndIf
EndIf

Return (lRet)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeTipo   ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao do tipo do documento de entrada          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Tipo do documento de entrada                          ³±±
±±³          ³ExpC2: Codigo do Fornecedor                                  ³±±
±±³          ³ExpA3: Codigo da Loja                                        ³±±
±±³          ³ExpO4: Objeto say para atualizar o texto                     ³±±
±±³          ³ExpO5: Objeto Get para atualizar o codigo do fornecedor      ³±±
±±³          ³ExpO6: Objeto Get para atualizar o codigo da loja            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Tipo valido                                           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar o tipo do documento de ³±±
±±³          ³entrada                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeTipo(cTipo,cFornece,cLoja,oSay,oFornece,oLoja,oConsF3)

Local nY 		:= 0
Local cTitulo	:= ""

Local aBusca:= {}
Local nPosForR:= 0
Local nPosForE:= 0


If Type("cFunTipo") == "U"
	Static cFunTipo := ""
EndIf

cFunTipo:= "NfeTipo"

If oConsF3 <> Nil
	aBusca:=aClone(oConsF3:aControls)
	nPosForR:= Ascan(aBusca,{|x| x:cSX1HLP =="F1_FORRET"})
	nPosForE:= Ascan(aBusca,{|x| x:cSX1HLP =="F1_FORENT"})
EndIf

If cTipo$"DB"
	If oFornece<>Nil
		oFornece:cF3 := CpoRetF3("C5_CLIENTE")
	EndIf

	If (oConsF3 <> Nil) .and. (nPosForR>0) .and. (nPosForE>0)
		oConsF3:aControls[nPosForR]:cF3:=CpoRetF3("C5_CLIENTE")
		oConsF3:aControls[nPosForE]:cF3:=CpoRetF3("C5_CLIENTE")
	EndIf

	If oSay<>Nil
		cTitulo := oSay:cCaption
		oSay:SetText(RetTitle("F2_CLIENTE"))
		If oSay:cCaption<>cTitulo
			cFornece := CriaVar("F1_FORNECE",.F.)
			cLoja    := CriaVar("F1_LOJA",.F.)
		Endif
	EndIf
	If MaFisFound("NF") .And. MaFisRet(,"NF_TIPONF") <> cTipo
		cFornece := CriaVar("F1_FORNECE",.F.)
		cLoja    := CriaVar("F1_LOJA",.F.)
	EndIf
Else
	If oFornece<>Nil
		oFornece:cF3 := CpoRetF3("F1_FORNECE")
	EndIf

	If (oConsF3 <> Nil) .and. (nPosForR>0) .and. (nPosForE>0)
		oConsF3:aControls[nPosForR]:cF3:= CpoRetF3("F1_FORNECE")
		oConsF3:aControls[nPosForE]:cF3:= CpoRetF3("F1_FORNECE")
	EndIf

	If oSay<>Nil
		cTitulo := oSay:cCaption
		oSay:SetText(RetTitle("F1_FORNECE"))
		If oSay:cCaption<>cTitulo
			cFornece := CriaVar("F1_FORNECE",.F.)
			cLoja    := CriaVar("F1_LOJA",.F.)
		Endif
	EndIf
	If MaFisFound("NF") .And. MaFisRet(,"NF_TIPONF") <> cTipo
		cFornece	:= CriaVar("F1_FORNECE",.F.)
		cLoja		:= CriaVar("F1_LOJA",.F.)
	EndIf
EndIf

If MaFisFound("NF") .And. cTipo<> MafisRet(,"NF_TIPONF")
	cCondicao	:= 	CriaVar("F1_COND")
	aCols 		:= {}
	aadd(aCols,Array(Len(aHeader)+1))
	For ny := 1 to Len(aHeader)
		If Trim(aHeader[ny][2]) == "D1_ITEM"
			aCols[1][ny] 	:= StrZero(1,Len(SD1->D1_ITEM))
		Else
			If Trim(aHeader[ny][2]) <> "D1_ALI_WT".And. Trim(aHeader[nY][2]) <> "D1_REC_WT"
				aCols[1][ny] := CriaVar(aHeader[ny][2])
	    	EndIf
		EndIf
		aCols[1][Len(aHeader)+1] := .F.
	Next nY
	MaFisAlt("NF_CLIFOR",IIf(cTipo$"DB","C","F"))
	MaFisAlt("NF_TIPONF",cTipo)
	MaFisClear()
	If oSay<>Nil
		oSay:Refresh()
	EndIf
	If oFornece<>Nil
		oFornece:Refresh()
	EndIf
	If oLoja<>Nil
		oLoja:Refresh()
	EndIf
	If bGdRefresh<>Nil
		Eval(bGDRefresh)
	EndIf
	If bRefresh<>Nil
		Eval(bRefresh)
	EndIf

	If oConsF3 <> Nil
		oConsF3:Refresh()
	EndIf

EndIf
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFormul ³Autor  ³ Eduardo Riera         ³ Data ³16.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao do formulario proprio do documento de    ³±±
±±³          ³entrada                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Formulario proprio (S/N)                              ³±±
±±³          ³ExpC2: Numero do documento de entrada                        ³±±
±±³          ³ExpA3: Serie do documento de entrada                         ³±±
±±³          ³ExpO4: Objeto say para atualizar o texto                     ³±±
±±³          ³ExpO5: Objeto Get para atualizar o codigo do fornecedor      ³±±
±±³          ³ExpO6: Objeto Get para atualizar o codigo da loja            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Formulario valido                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar se o formulario eh pro-³±±
±±³          ³prio ( S/N )                                                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFormul(cFormul,cNota,cSerie,oNFiscal,oSerie)
Local cXEspecie:=""

If Type("cFunTipo") == "U"
	Static cFunTipo := ""
EndIf

If cFormul == "S"
	cNota		:= CriaVar("F1_DOC",.F.)
	cSerie  	:= SerieNfId("SF1",5,"F1_SERIE")
EndIf

//---------------------------//
//Ponto de Entrada: MT103ESP //
//---------------------------//
If ExistBlock("MT103ESP")
	cXEspecie := ExecBlock("MT103ESP",.F.,.F.,{cFormul})
	If (ValType(cXEspecie) == 'C' )
		cEspecie:=cXEspecie
	EndIf
EndIf

If oNFiscal<>Nil
	oNFiscal:Refresh()
EndIf
If oSerie<>Nil
	oSerie:Refresh()
EndIf
If oNFiscal<>Nil .And. Empty(cFunTipo)
	IF cFormul == "N"
		oNFiscal:Setfocus()
	EndIf
EndIf

cFunTipo:= ""

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFornece³Autor  ³ Eduardo Riera         ³ Data ³16.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao do codigo do fornecedor do documento de  ³±±
±±³          ³entrada                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Tipo do documento de entrada                          ³±±
±±³          ³ExpC2: Codigo do documento de entrada                        ³±±
±±³          ³ExpC3: Loja do documento de entrada                          ³±±
±±³          ³ExpC4: Unidade federativa (sera alimentado por referencia)   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Codigo Valido                                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar se o codigo do fornece-³±±
±±³          ³dor no documento de entrada                                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function NfeFornece(cTipo,cFornece,cCodLoja,cUfOrig,nCombo,oCombo,cCodRet,oCodRet,aCodR,cRecIss,cNatureza)

Local aArea      := GetArea()
Local aAreaSF1   := SF1->(GetArea())
Local cNatDup2   := ""
Local lRetorno   := .F.
Local lForAntNFE := ( Type( "cForAntNfe" ) == "C" )
Local a          := 0
Local nI		 	:= 0
Local aSerAltern	:= {}
Local cSerAltern	:= ""
Local cTamSerie 	:= SerieNfId("SF1",6,"F1_SERIE")
Local cMsg		  	:= ""
Local l103Auto  	:= If(Type('l103Auto')=='U', .F., l103Auto)
Local cQuery   := ""
Local lUsaNewKey  := TamSX3("F1_SERIE")[1] == 14 // Verifica se o novo formato de gravacao do Id nos campos _SERIE esta em uso
Local cSerieId    := IIf( lUsaNewKey , SerieNfId("SD1",4,"D1_SERIE",dDEmissao,cEspecie,cSerie) , cSerie )
Local lChkExistNF := ( "CESPECIE"$ReadVar() .And. lUsaNewKey )

Default	aCodR		:=	{}
Default cRecIss		:=	"1"
Default cNatureza	:= ""

If Empty(cNatureza) .And. MaFisFound()
	cNatureza := MaFisRet(,"NF_NATUREZA")
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o codigo do fornecedor foi alterado                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MaFisFound() .And. MaFisRet(,"NF_CODCLIFOR")==cFornece .And. MaFisRet(,"NF_LOJA")==cCodLoja;
		.And. !AtIsRotina("A103DEVOL") .And. (FunName() <> "MATA119")
	lRetorno := .T.
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o codigo do fornecedor eh valido                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cFornece)
		If cTipo$"DB"
			If cCodLoja == Nil .Or. Empty(cCodLoja)
				dbSelectArea("SA1")
				dbSetOrder(1)
				If !(xFilial("SA1") == SA1->A1_FILIAL .And. cFornece == SA1->A1_COD)
					If MsSeek(xFilial("SA1")+cFornece)
						cCodLoja := SA1->A1_LOJA
						lRetorno := .T.
					Else
						Help("  ",1,"REGNOIS")
					EndIf
				Else
					cCodLoja := SA1->A1_LOJA
					lRetorno := .T.
				EndIf
			Else
				dbSelectArea("SA1")
				dbSetOrder(1)
				If MsSeek(xFilial("SA1")+cFornece+cCodLoja)
					lRetorno := .T.
				Else
					Help("  ",1,"REGNOIS")
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se o Registro esta Bloqueado.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. !RegistroOk("SA1")
					lRetorno := .F.
				EndIf
			EndIf

			If lRetorno
				If cUfOrig <> NIL
					cUfOrig := SA1->A1_EST
				EndIf
				cRecIss  := Iif( SA1->A1_RECISS$"1S","1","2" )
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualiza os dados do documento com base no fornecedor   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno
				If cTipo <> "D"
					dbSelectArea("SE4")
					dbSetOrder(1)
					If MsSeek(xFilial("SE4")+SA1->A1_COND)
						If SE4->E4_TIPO <>"9"
							cCondicao := SA1->A1_COND
						Else
							cCondicao := CriaVar("F1_COND",.F.)
						EndIf
					Else
						cCondicao := CriaVar("F1_COND",.F.)
					EndIf
				Else
					cCondicao := CriaVar("F1_COND",.F.)
				EndIf
			EndIf

			If lRetorno
				If cTipo <> "D"
					dbSelectArea("SED")
					dbSetOrder(1)
					If MsSeek(xFilial("SED")+SA1->A1_NATUREZ)
						cNatureza := SA1->A1_NATUREZ
					Else
						cNatureza := CriaVar("E1_NATUREZ",.F.)
					EndIf
					MaFisAlt("NF_NATUREZA",cNatureza)
				Else
					cNatureza := CriaVar("E1_NATUREZ",.F.)
				EndIf
			EndIf

			If cTipo == "D" .And. lRetorno .And. ( SuperGetMv("MV_EASYFIN")=="N" ) .And. "SF1->F1_SERIE"$SuperGetMv("MV_2DUPREF") .And. !lUsaNewKey
				cQuery := "SELECT COUNT(E1_FILIAL) TITULOS "
				cQuery += "  FROM "+RetSqlName("SE1")+" SE1 "
				cQuery += " WHERE SE1.E1_FILIAL  ='"+xFilial("SE1")+"'"
				cQuery += "   AND SE1.E1_PREFIXO ='"+&(SuperGetMv("MV_2DUPREF"))+"'"
				cQuery += "   AND SE1.E1_NUM	 ='"+cNFiscal+"'"
				cQuery += "   AND SE1.E1_TIPO    ='"+MV_CRNEG+"'"
				cQuery += "   AND SE1.E1_CLIENTE ='"+cFornece+"'"
				cQuery += "   AND SE1.E1_LOJA	 ='"+cCodLoja+"'"
				cQuery += "   AND SE1.D_E_L_E_T_ =' ' "

				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"NFEFORNECE")

				If NFEFORNECE->TITULOS > 0
				    Help(" ",1,"FANUMNCC",,"NCC a ser gerada ja existe.",4,1)
					lRetorno := .F.
				EndIf
				NFEFORNECE->(dbCloseArea())
				dbSelectArea("SE1")
			EndIf
		Else
			If cCodLoja == Nil .Or. Empty(cCodLoja)
				dbSelectArea("SA2")
				dbSetOrder(1)
				If !(xFilial("SA2") == SA2->A2_FILIAL .And. cFornece == SA2->A2_COD)
					If MsSeek(xFilial("SA2")+cFornece)
						cCodLoja := SA2->A2_LOJA
						lRetorno := .T.
					Else
						Help("  ",1,"REGNOIS")
					EndIf
				Else
					cCodLoja := SA2->A2_LOJA
					lRetorno := .T.
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se o Registro esta Bloqueado.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. !RegistroOk("SA2")
					lRetorno := .F.
				EndIf
				EndIf
			Else
				dbSelectArea("SA2")
				dbSetOrder(1)
				If MsSeek(xFilial("SA2")+cFornece+cCodLoja)
					lRetorno := .T.
				Else
					Help("  ",1,"REGNOIS")
				EndIf

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se o Registro esta Bloqueado.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. !RegistroOk("SA2")
					lRetorno := .F.
				EndIf

			EndIf

			If lRetorno
				If cUfOrig <> NIL
					cUfOrig := SA2->A2_EST
				EndIf
				cRecIss  := Iif( SA2->A2_RECISS$"1S","1","2" )
			EndIf

			If lRetorno
				dbSelectArea("SE4")
				dbSetOrder(1)
				If MsSeek(xFilial("SE4")+SA2->A2_COND)
					If SE4->E4_TIPO <>"9"
						cCondicao  := SA2->A2_COND
					EndIf
				EndIf
			EndIf

			If lRetorno
				dbSelectArea("SED")
				dbSetOrder(1)
				If MsSeek(xFilial("SED")+SA2->A2_NATUREZ)
					cNatureza := SA2->A2_NATUREZ
				Else
					cNatureza := CriaVar("E2_NATUREZ",.F.)
					cNatDup2:= SuperGetMV("MV_2DUPNAT",.F.,"")
					If !Empty(cNatDup2)
						cNatureza:= &(cNatDup2)
					EndIf
				EndIf
				MaFisAlt("NF_NATUREZA",cNatureza)
			EndIf

			If lRetorno .And. !IsInCallStack("MATA140")
				If ExistBlock("MT103DRF")
					aDirfRt := ExecBlock("MT103DRF",.F.,.F.,{nCombo,cCodRet,@oCombo,@oCodRet})
					If ValType(aDirfRt) == "A" .And. Len(aDirfRt) > 0
						For a := 1 To Len(aDirfRt)
							nCombo  := Iif(aDirfRt[a][2] > 2, 2, aDirfRt[a][2])
							cCodRet := ""
							If nCombo = 1
								cCodRet := aDirfRt[a][3]
							EndIf
							If !Empty(cCodRet)
								If aScan(aCodR,{|aX| aX[4]==aDirfRt[a][1]})==0
									aAdd( aCodR,{99, cCodRet,1,aDirfRt[a][1]})
								Else
									aCodR[aScan(aCodR, {|aX| aX[4]==aDirfRt[a][1]})][2] := cCodRet
								EndIf
							EndIf
				      Next a
					EndIf
					If ValType( oCombo ) == "O"
						oCombo:Refresh()
					EndIf
					If ValType( oCodRet ) == "O"
						oCodRet:Refresh()
					EndIf
				EndIf
			EndIf

		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se a NF esta sendo digitada em outra estacao.              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !Empty(cNFiscal) .And. !Empty(cFornece) .And. !Empty(cCodLoja) .And. (cFormul<>"S" .And. IIF(IsInCallStack("MATA119"),INCLUI .Or. ALTERA,.T.) ) ;
		    .And. (!lForAntNFE .Or. "CLOJA"$ReadVar() .Or. lChkExistNF .Or. (cFornece <> cForantNfe .And. !Empty(CForAntNfe)) )

			FreeUsedCode()
			dbSelectArea("SF1")
			dbSetOrder(1)
			If MsSeek(xFilial("SF1")+cNFiscal+cSerieId+cFornece+cCodLoja,.F.)
				If ExistBlock("M103ALTS") .And. !lUsaNewKey
					aSerAltern := ExecBlock("M103ALTS",.F.,.F.,{cNFiscal,cSerie,cA100For,cLoja})
					If Valtype(aSerAltern) == 'A' .And. Len(aSerAltern) > 0
						For nI:=1 To Len(aSerAltern)
							If Len(Alltrim(cSerie)) = cTamSerie // Serie atual com o mesmo tamanho do campo
								If aSerAltern[nI,2] = 1 // Prefixo (a frente da serie) Ex. '.1'
									cSerAltern := Substr(aSerAltern[nI,1],1,1)+Substr(cSerie,2,cTamSerie-1)
								Else // Sufixo (apos a serie) Ex. '1.'
									cSerAltern := Substr(cSerie,1,cTamSerie-1)+Substr(aSerAltern[nI,1],1,1)
								Endif
							Else // Serie atual com tamanho menor que o tamanho do campo
								If aSerAltern[nI,2] = 1 // Prefixo (a frente da serie) Ex. '.1'
									cSerAltern := Substr(aSerAltern[nI,1],1,1)+Alltrim(cSerie)
								Else // Sufixo (apos a serie) Ex. '1.'
									cSerAltern := Alltrim(cSerie)+Substr(aSerAltern[nI,1],1,1)
								Endif
   							Endif
							If SF1->(MsSeek(xFilial("SF1")+cNFiscal+Padr(cSerAltern,cTamSerie)+cA100For+cLoja,.F.))
								If !l103Auto
									cMsg := 'Os documentos de entrada: '+_CRLF+cNFiscal+' '+cSerie+_CRLF+cNFiscal+' '+cSerAltern+_CRLF+'Já existem cadastrados'
									MsgAlert(cMsg)
								Endif
								If Len(aSerAltern) > nI // Ainda possui alternativas
									Loop
								Endif
								Help(" ",1,"EXISTNF")
								lRetorno := .F.
								Exit
							Else // Quando não existir ainda, sugerir a alteração da série
								cMsg := 'Deseja alterar a série para continuar ?'+_CRLF+"Novo valor: "+cSerAltern
								If l103Auto .Or. MsgYesNo(cMsg)
									cSerie := cSerAltern
									Exit
								Else
									Help(" ",1,"EXISTNF")
									lRetorno := .F.
									Exit
								Endif
							Endif
						Next nI
					Else
						Help(" ",1,"EXISTNF")
						lRetorno := .F.
					Endif
				Else
					Help(" ",1,"EXISTNF")
					lRetorno := .F.
				Endif
			Else
				If !FreeForUse("NFE",xFilial("SF1")+cNFiscal+cSerieId+cFornece+cCodLoja)
					lRetorno := .F.
				EndIf
			EndIf
			If lRetorno .And. ( SuperGetMv("MV_EASYFIN")=="N" ) .And. "SF1->F1_SERIE"$SuperGetMv("MV_2DUPREF") .And. !lUsaNewKey
				cQuery := "SELECT COUNT(E2_FILIAL) TITULOS "
				cQuery += "  FROM "+RetSqlName("SE2")+" SE2 "
				cQuery += " WHERE SE2.E2_FILIAL  ='"+xFilial("SE2")+"'"
				cQuery += "   AND SE2.E2_PREFIXO ='"+cSerie+"'"
				cQuery += "   AND SE2.E2_NUM	 ='"+cNFiscal+"'"
				cQuery += "   AND SE2.E2_TIPO	 ='"+MVNOTAFIS+"'"
				cQuery += "   AND SE2.E2_FORNECE ='"+cFornece+"'"
				cQuery += "   AND SE2.E2_LOJA	 ='"+cCodLoja+"'"
				cQuery += "   AND SE2.D_E_L_E_T_ =' ' "

				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"NFEFORNECE")

				If NFEFORNECE->TITULOS > 0
					Help(" ",1,"FA050NUM")
					lRetorno := .F.
				EndIf
				NFEFORNECE->(dbCloseArea())
				dbSelectArea("SE2")
			EndIf
		EndIf
	Else
		lRetorno := .T.
	EndIf
EndIf

If lRetorno .And. lForAntNFE
		cForAntNFE := cFornece
EndIf

RestArea(aAreaSF1)
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldFin ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de tratamento do folder financeiro                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela principal                            ³±±
±±³          ³ExpL2: Indica se o folder eh "somente visualizacao"          ³±±
±±³          ³ExpA3: Array com registros do SE2 quando for visualizacao    ³±±
±±³          ³ExpN4: Indica a posicao X de referencia p/ criacao da Janela ³±±
±±³          ³ExpA5: Array com registros do SE1 quando for visualizacao    ³±±
±±³          ³ExpA6: AHeader dos Titulos a Pagar                           ³±±
±±³          ³ExpA7: ACols   dos Titulos a Pagar                           ³±±
±±³          ³ExpA6: AHeader do SEV                                        ³±±
±±³          ³ExpA7: ACols   do SEV                                        ³±±
±±³          ³ExpL9: Identifica multiplas NF de Desp.Imp. par. MV_NUMITEN  ³±±
±±³          ³       e/ou se passado .T. faz Refresh no folder Duplicatas  ³±±
±±³          ³       mesmo sem acessar a pasta                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo exibir/controlar o folder finan³±±
±±³          ³ceiro.                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldFin(oDlg,lVisual,aRecSE2,nPosX,aRecSE1,aHeadSE2,aColsSE2,aHeadSEV,aColsSEV,bRefresh,lCalcula,cModRetPIS,lPccBaixa,lTxNeg,cNatureza,nTaxaMoeda)

Local aArea     := GetArea()
Local aStruSEV  := {}
Local aIdSEV	:= {}
Local aItensSEV	:= {}
Local aCpoHead  := {"E2_VENCTO","E2_VALOR","E2_IRRF","E2_INSS","E2_ISS"}
Local aCposPE	:= {}
Local cDescricao:= ""
Local cQuery    := ""
Local cAliasSEV := "SEV"
Local nX        := 0
Local nY        := 0
Local nBaseDup  := 0
Local nUsadoSEV := 0
Local nPosItSEV := 0
Local nMultDec  := GetNewPar( "MV_MULTDEC", 2 )
Local nTxDia	:= 0
Local nPosRecno := 0
Local dDatCont	:= dDataBase
Local lQuery    := .F.
Local lAltera	:= !lVisual
Local l103BDP   := .F.
Local aAltNewGd := Nil
Local aNFEGDSEV := {}
Local oCtaPag
Local oMoeda
Local oNatureza
Local oDescri
Local oCondicao
Local oTaxa
Local oTxNeg
Local oMultNat
Local oDscMoeda
Local oRetPis
Local oRetCof
Local oRetCsll
Local lMT103NAT  := Existblock("MT103NAT")
Local lMT103GET  := Existblock("MT103GET")
Local lShowRet  := .F.
Local nPosH     := 0
Local lMult     := .T.

DEFAULT aRecSE1		:=	{}
DEFAULT aRecSE2		:=	{}
DEFAULT lCalcula  	:= .F.
DEFAULT lPccBaixa 	:= .F.
DEFAULT lTxNeg		:= .F.
DEFAULT cNatureza	:= ""
DEFAULT nTaxaMoeda	:= 0

If Type("nTaxa")=="N"
	nTaxaMoeda:= nTaxa
EndIf

bRefresh    := {|| NfeRFldFin(@cCondicao,@cDescricao,@cNatureza,nMoedaCor,@nTaxaMoeda,oCondicao,oNatureza,oMoeda,oTaxa,oDscMoeda,oCtaPag,oMultNat,!lVisual,@aColsSE2,aHeadSE2,@aColsSEV,aHeadSEV,oDescri,oTxNeg)}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aHeader da Getdados do contas a pagar            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(aHeadSE2)
	dbSelectArea("SX3")
	dbSetOrder(2)
	MsSeek("E2_PARCELA")
	AADD(aHeadSE2,{ TRIM(x3titulo()),;
		SX3->X3_CAMPO,;
		SX3->X3_PICTURE,;
		SX3->X3_TAMANHO,;
		SX3->X3_DECIMAL,;
		".F.",;
		SX3->X3_USADO,;
		SX3->X3_TIPO,;
		SX3->X3_F3,;
		SX3->X3_CONTEXT,;
		SX3->X3_CBOX,;
		SX3->X3_RELACAO,;
		".T."})
	MsSeek("E2_VENCTO")
	AADD(aHeadSE2,{ TRIM(X3Titulo()),;
		SX3->X3_CAMPO,;
		SX3->X3_PICTURE,;
		SX3->X3_TAMANHO,;
		SX3->X3_DECIMAL,;
		"M->E2_VENCTO>=M->dDEmissao",;
		SX3->X3_USADO,;
		SX3->X3_TIPO,;
		SX3->X3_F3,;
		SX3->X3_CONTEXT,;
		SX3->X3_CBOX,;
		SX3->X3_RELACAO,;
		".T."})
	MsSeek("E2_VALOR")
	AADD(aHeadSE2,{ TRIM(X3Titulo()),;
		SX3->X3_CAMPO,;
		SX3->X3_PICTURE,;
		SX3->X3_TAMANHO,;
		SX3->X3_DECIMAL,;
		"Positivo()",;
		SX3->X3_USADO,;
		SX3->X3_TIPO,;
		SX3->X3_F3,;
		SX3->X3_CONTEXT,;
		SX3->X3_CBOX,;
		SX3->X3_RELACAO,;
		".T."})
	If cPaisLoc == "BRA"
		MsSeek("E2_IRRF")
		AADD(aHeadSE2,{ TRIM(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			"Positivo()",;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_F3,;
			SX3->X3_CONTEXT,;
			SX3->X3_CBOX,;
			SX3->X3_RELACAO,;
			".T."})
		MsSeek("E2_ISS")
		AADD(aHeadSE2,{ TRIM(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			"Positivo()",;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_F3,;
			SX3->X3_CONTEXT,;
			SX3->X3_CBOX,;
			SX3->X3_RELACAO,;
			".T."})
		MsSeek("E2_INSS")
		AADD(aHeadSE2,{ TRIM(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			"Positivo()",;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_F3,;
			SX3->X3_CONTEXT,;
			SX3->X3_CBOX,;
			SX3->X3_RELACAO,;
			"A103VldInss()"})
		If MsSeek("E2_PIS")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			aadd(aCpoHead,"E2_PIS")
		EndIf
		If MsSeek("E2_COFINS")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			aadd(aCpoHead,"E2_COFINS")
		EndIf
		If MsSeek("E2_CSLL")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			aadd(aCpoHead,"E2_CSLL")
		EndIf
		If MsSeek("E2_SEST")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			AADD(aCpoHead,"E2_SEST")
		Endif
		If MsSeek("E2_FETHAB")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			AADD(aCpoHead,"E2_FETHAB")
		Endif
		If MsSeek("E2_FABOV")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			AADD(aCpoHead,"E2_FABOV")
		Endif
		If MsSeek("E2_FACS")
			AADD(aHeadSE2,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				"Positivo()",;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			AADD(aCpoHead,"E2_FACS")
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ PE para adicionar campos no aCols da SE2 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock ("MT103SE2")
		aCposPE:= ExecBlock("MT103SE2",.F.,.F.,{aHeadSE2,lVisual})
		If ValType (aCposPE) == "A" .And. Len(aCposPE) > 0
			For nX:= 1 to Len(aCposPE)
				AADD(aHeadSE2, aCposPE[nX])
				AADD(aCpoHead, aCposPE[nX][2])
			Next nX
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ADHeadRec("SE2",aHeadSE2)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aHeader da Getdados de multipla natureza         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Empty(aHeadSEV)
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SEV")
	While !Eof() .And. (SX3->X3_ARQUIVO == "SEV")
		IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL
			nUsadoSEV++
			AADD(aHeadSEV,{ TRIM(x3titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT,;
				SX3->X3_CBOX,;
				SX3->X3_RELACAO,;
				".T."})
			If AllTrim(SX3->X3_CAMPO)=="EV_PERC"
				aHeadSEV[nUsadoSEV][3] := "@E 999." + Replicate("9",nMultDec)
			EndIf
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ADHeadRec("SEV",aHeadSEV)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aCols da Getdados das multiplas naturezas        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lVisual
	If !Empty(aRecSE2)
		dbSelectArea("SE2")
		MsGoto(aRecSE2[1])
		dbSelectArea("SEV")
		dbSetOrder(1)

		aStruSEV  := SEV->(dbStruct())
		cAliasSEV := "NFEFLDFIN"
		lQuery    := .T.
		cQuery    := "SELECT SEV.*,SEV.R_E_C_N_O_ SEVRECNO "
		cQuery    += "  FROM "+RetSqlName("SEV")+" SEV "
		cQuery    += " WHERE SEV.EV_FILIAL  = '"+xFilial("SEV")+"'"
		cQuery    += "   AND SEV.EV_PREFIXO = '"+SE2->E2_PREFIXO+"'"
		cQuery    += "   AND SEV.EV_NUM	    = '"+SE2->E2_NUM+"'"
		cQuery    += "   AND SEV.EV_PARCELA = '"+SE2->E2_PARCELA+"'"
		cQuery    += "   AND SEV.EV_TIPO    = '"+SE2->E2_TIPO+"'"
		cQuery    += "   AND SEV.EV_CLIFOR  = '"+SE2->E2_FORNECE+"'"
		cQuery    += "   AND SEV.EV_LOJA    = '"+SE2->E2_LOJA+"'"
		cQuery    += "   AND SEV.EV_RECPAG  = 'P' "
		cQuery    += "   AND SEV.D_E_L_E_T_ = ' ' "
		cQuery    += "ORDER BY "+SqlOrder(SEV->(IndexKey()))

		cQuery := ChangeQuery(cQuery)
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSEV)

		For nX := 1 To Len(aStruSEV)
			If aStruSEV[nX][2]<>"C"
				TcSetField(cAliasSEV,aStruSEV[nX][1],aStruSEV[nX][2],aStruSEV[nX][3],aStruSEV[nX][4])
			EndIf
		Next nX

		While !Eof() .And. (cAliasSEV)->EV_FILIAL == xFilial("SEV") .And.;
				(cAliasSEV)->EV_PREFIXO == SE2->E2_PREFIXO .And.;
				(cAliasSEV)->EV_NUM     == SE2->E2_NUM 	.And.;
				(cAliasSEV)->EV_PARCELA == SE2->E2_PARCELA .And.;
				(cAliasSEV)->EV_TIPO    == SE2->E2_TIPO 	.And.;
				(cAliasSEV)->EV_CLIFOR  == SE2->E2_FORNECE .And.;
				(cAliasSEV)->EV_LOJA    == SE2->E2_LOJA

			If (cAliasSEV)->EV_RECPAG == "P"
				aadd(aColsSEV,Array(Len(aHeadSEV)+1))
				For nX := 1 To Len(aHeadSEV)
					If IsHeadRec(aHeadSEV[nX][2])
						aColsSEV[Len(aColsSEV)][nX] := IIf(lQuery , (cAliasSEV)->SEVRECNO , SEV->(Recno())  )
						If (cAliasSEV)->EV_IDENT = "2"
							aadd(aIdSEV,IIf(lQuery,(cAliasSEV)->SEVRECNO,SEV->(Recno())))
							nPosRecno := nX
						EndIf
					ElseIf IsHeadAlias(aHeadSEV[nX][2])
						aColsSEV[Len(aColsSEV)][nX] := "SEV"
					ElseIf aHeadSEV[nX,10] == "V"
						aCOLSSEV[Len(aColsSEV)][nX] := CriaVar(aHeadSEV[nX,2],.F.)
					Else
						aCOLSSEV[Len(aColsSEV)][nX] := FieldGet(FieldPos(aHeadSEV[nX,2]))
					EndIf
					If AllTrim(aHeadSEV[nX,2]) == "EV_PERC"
						aCOLSSEV[Len(aColsSEV)][nX] *= 100
					EndIf
				Next nX
				aCOLSSEV[Len(aColsSEV)][Len(aHeadSEV)+1] := .F.
			EndIf
			dbSelectArea(cAliasSEV)
			dbSkip()
		EndDo
		If Len(aIdSEV) > 0 .And. nPosRecno > 0
			For nX := 1 To Len(aIdSEV)
				If (nPosItSEV := aScan(aColsSEV, {|x| x[nPosRecno]==aIdSEV[nX]})) > 0
					aadd(aItensSEV,aColsSEV[nPosItSEV])
				EndIf
			Next nX
			If Len(aItensSEV) > 0
				aColsSEV := aItensSEV
			EndIf
		EndIf
		If lQuery
			dbSelectArea(cAliasSEV)
			dbCloseArea()
			dbSelectArea("SEV")
		EndIf
	EndIf
EndIf

If Empty(aColsSEV)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aCols da Getdados dos titulos a pagar            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aColsSEV,Array(Len(aHeadSEV)+1))
	For nX := 1 To Len(aHeadSEV)
		If IsHeadRec(aHeadSEV[nX][2])
			aColsSEV[Len(aColsSEV)][nX] := 0
		ElseIf IsHeadAlias(aHeadSEV[nX][2])
			aColsSEV[Len(aColsSEV)][nX] := "SEV"
		Else
			aColsSEV[Len(aColsSEV)][nX] := CriaVar(aHeadSEV[nX,2],.F.)
		EndIf
	Next nX
	aColsSEV[Len(aColsSEV)][Len(aHeadSEV)+1] := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aCols da Getdados dos titulos financeiros        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lVisual
	Do Case
	Case !Empty(aRecSE2)
		For nX := 1 To Len(aRecSE2)
			dbSelectArea("SE2")
			MsGoto(aRecSE2[nX])
			cNatureza	:= SE2->E2_NATUREZ
			nMoedaCor	:= SE2->E2_MOEDA
			nTaxaMoeda  := SF1->F1_TXMOEDA
			nTxDia		:= RecMoeda(SE2->E2_EMISSAO,nMoedaCor)
			lTxNeg		:= !Empty(SE2->E2_TXMOEDA) .And. nTxDia <> 0 .And. nTxDia <> SE2->E2_TXMOEDA
			If SE2->E2_TIPO == MVNOTAFIS .Or. cPaisLoc <> "BRA"

				aadd(aColsSE2,Array(Len(aHeadSE2)+1))
				For nY := 1 To Len(aHeadSE2)
					If IsHeadRec(aHeadSE2[nY][2])
						aColsSE2[Len(aColsSE2)][nY] := SE2->(RecNo())
					ElseIf IsHeadAlias(aHeadSE2[nY][2])
						aColsSE2[Len(aColsSE2)][nY] := "SE2"
					Else
						aColsSE2[Len(aColsSE2)][nY] := FieldGet(FieldPos(aHeadSE2[nY,2]))
					EndIf
				Next nY
				aColsSE2[Len(aColsSE2)][Len(aHeadSE2)+1] := .F.
				//
				If (GetNewPar ("MV_DUPBRUT", .F.))
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_IRRF"}))<>0
						//Conversao do valor do imposto para Moeda 2
					    If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_ISS"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_INSS"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_PIS"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_COFINS"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_CSLL"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_FETHAB"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_SEST"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_FABOV"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
					If (nPosH := aScan (aHeadSE2, {|x| AllTrim (x[2])=="E2_FACS"}))<>0
						If nMoedaCor <> 1
							aCOLSSE2[Len(aColsSE2)][3]	+=	NoRound((aCOLSSE2[Len(aColsSE2)][nPosH]/nTaxaMoeda),2)
						Else
							aCOLSSE2[Len(aColsSE2)][3]	+=	aCOLSSE2[Len(aColsSE2)][nPosH]
						Endif
					EndIf
				EndIf
			EndIf
		Next nX
	Case !Empty(aRecSE1)
		For nX	:= 1 To Len(aRecSE1)
			dbSelectArea("SE1")
			MsGoto(aRecSE1[nX])
			cNatureza	:= SE1->E1_NATUREZ
			nMoedaCor	:= SE1->E1_MOEDA
			nTaxaMoeda  := SF1->F1_TXMOEDA
			If Alltrim(SE1->E1_TIPO)$"NF/"+MV_CRNEG .Or. cPaisLoc!="BRA"
				aadd(aColsSE2,Array(Len(aHeadSE2)+1))
				For nY := 1 To Len(aHeadSE2)
					If IsHeadRec(aHeadSE2[nY][2])
						aColsSE2[Len(aColsSE2)][nY] := SE1->(RecNo())
					ElseIf IsHeadAlias(aHeadSE2[nY][2])
						aColsSE2[Len(aColsSE2)][nY] := "SE1"
					Else
						If FieldPos("E1"+SubStr(aHeadSE2[nY,2],3)) > 0
							aColsSE2[Len(aColsSE2)][nY] := FieldGet(FieldPos("E1"+SubStr(aHeadSE2[nY,2],3)))
        	            EndIf
                    EndIf
				Next nY
				aColsSE2[Len(aColsSE2)][Len(aHeadSE2)+1] := .F.
			EndIf
		Next nX
	EndCase
EndIf
If Empty(aColsSE2)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aCols da Getdados dos titulos a pagar            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aadd(aColsSE2,Array(Len(aHeadSE2)+1))
	For nX := 1 To Len(aHeadSE2)
		If IsHeadRec(aHeadSE2[nX][2])
			aColsSE2[Len(aColsSE2)][nX] := 0
		ElseIf IsHeadAlias(aHeadSE2[nX][2])
			aColsSE2[Len(aColsSE2)][nX] := "SE2"
		Else
			aColsSE2[Len(aColsSE2)][nX] := CriaVar(aHeadSE2[nX,2],.F.)
		EndIf
	Next nX
	aColsSE2[Len(aColsSE2)][Len(aHeadSE2)+1] := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa as variaveis dados dos titulos financeiros        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lVisual
	dbSelectArea("SE4")
	dbSetOrder(1)
	If MsSeek(xFilial("SE4")+cCondicao)
		cDescricao := SE4->E4_DESCRI
	EndIf
Else
	If MaFisFound("NF") .And. !IsInCallStack("A103DEVOL")
		cNatureza := MaFisRet(,"NF_NATUREZA")
		lAltera := IIF(MaFisRet(,"NF_BASEDUP")>0,.T.,.F.)
		dbSelectArea("SE4")
		dbSetOrder(1)
		If MsSeek(xFilial("SE4")+cCondicao)
			cDescricao := SE4->E4_DESCRI
		Else
			cDescricao := CriaVar("E4_DESCRI",.F.)
		EndIf
	EndIf
EndIf
If ( oDlg<>Nil )
	@ 03,04 SAY RetTitle("F1_COND") Of oDlg PIXEL SIZE 30,09
	@ 02,45 MSGET oCondicao VAR cCondicao  ;
		PICTURE PesqPict('SF1','F1_COND')  ;
		OF oDlg PIXEL SIZE 22,09 ;
		F3 CpoRetF3('F1_COND') ;
		WHEN VisualSX3('F1_COND');
		VALID Vazio().Or.(cTipo<>'D' .And. NfeCond(cCondicao,@oDescri,@cDescricao) .And. CheckSX3('F1_COND') .And. Eval(bRefresh)) HASBUTTON
	oCondicao:lReadOnly := (IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.),!lAltera) .And. MaFisFound("NF") .And. cTipo <> "D") .Or. cTipo == 'D'  // O Retorno .T. Do ponto MT103GET impede a edicao do Get
	oCondicao:bLostFocus := { || IIf(!Vazio(cCondicao) .And. cTipo<>'D' .And. !NfeCond2(cCondicao),{oFolder:nOption := 6},"")}

	@ 16,04 SAY RetTitle("E4_DESCRI") Of oDlg PIXEL SIZE 30,09
	@ 15,31 MSGET oDescri VAR cDescricao  PICTURE PesqPict('SE4','E4_DESCRI') OF oDlg PIXEL SIZE 55,09
	oDescri:lReadOnly := .T.

	@ 29,04 SAY RetTitle("A2_NATUREZ") Of oDlg PIXEL SIZE 41,09
	@ 28,31 MSGET oNatureza VAR cNatureza  ;
		PICTURE PesqPict('SE2','E2_NATUREZ') ;
		OF oDlg PIXEL SIZE 55,09 ;
		F3 CpoRetF3("E2_NATUREZ") ;
		VALID if(lMt103Nat, if(ExecBlock("MT103NAT",.F.,.F.,cNatureza),NfeVldRef("NF_NATUREZA",cNatureza),.F.),;
  		                     Vazio(cNatureza) .Or. (ExistCpo('SED',cNatureza) .And. A103ValNat(cNatureza) .And. NfeVldRef("NF_NATUREZA",cNatureza))) HASBUTTON

	    oNatureza:lReadOnly := IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.),!lAltera) // O Retorno .T. Do ponto MT103GET impede a edicao do Get

	    // Somente Executa o bLostFocus se o PE existir. Caso retornar F ou Perder o Foco da Aba e estiver falso //
	    If lMt103Nat
     		oNatureza:bLostFocus:= {|| if(ExecBlock("MT103NAT",.F.,.F.,cNatureza) .and. NfeVldRef("NF_NATUREZA",cNatureza),"",{oFolder:nOption := 6,oNatureza:SetFocus()})}
        EndIf

	@ 42,04 SAY oDscMoeda PROMPT RetTitle("F1_MOEDA") Of oDlg PIXEL SIZE 30,09
	@ 41,31 MSGET oMoeda VAR nMoedaCor SIZE 12,09 PIXEL OF oDlg ;
		VALID nMoedaCor<=MoedFin().And. nMoedaCor <> 0 .And. Eval(bRefresh) PICTURE X3Picture("F1_MOEDA") HASBUTTON
	oMoeda:lReadOnly := IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.),!lAltera) // O Retorno .T. Do ponto MT103GET impede a edicao do Get

	@ 41,45 MSGET oTaxa VAR nTaxaMoeda SIZE 41,09 PIXEL OF oDlg PICTURE X3Picture("F1_TXMOEDA");
		VALID Eval(bRefresh)
	oTaxa:lReadOnly := IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.),!lAltera .And. nMoedaCor <> 1) // O Retorno .T. Do ponto MT103GET impede a edicao do Get

	@ 52,04 CHECKBOX oTxNeg  VAR lTxNeg PROMPT STR0050 SIZE 100,010 ON CLICK( oTxNeg:Refresh() ) OF oDlg PIXEL
	oTxNeg:lReadOnly := !(INCLUI .Or. ALTERA)

	lShowRet := ValType( cModRetPIS ) == "C" .And. !lVisual

	If SuperGetMv("MV_MULNATP") .And. !__lPyme
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada permite quais os campos podem ser editados ou nao³
		//³ na getdados do Rateio das Multiplas Naturezas                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("NFEGDSEV")
			aNFEGDSEV := ExecBlock("NFEGDSEV", .F., .F.)
			If valtype(aNFEGDSEV) == "A"
				aAltNewGd := aNFEGDSEV
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada para Bloquear a edicao do aColsSe2 de Duplicatas |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("MT103BDP")
			l103BDP:=ExecBlock("MT103BDP",.F.,.F.,{})
			If ValType(l103BDP)<>'L'
				l103BDP:=.F.
			EndIf
		EndIf

		oCtaPag  := MsNewGetDados():New(004,090,058,(nPosX/2)+060,IIF(lAltera,GD_UPDATE,0),"NfeLOkSE2","NfeTOkSE2",/*inicpos*/,aCpoHead,/*freeze*/,120,"A103VencSE2()",/*superdel*/,/*delok*/,oDlg,aHeadSE2,aColsSE2)
		If l103BDP
			oCtaPag:oBrowse:lReadOnly:= .T.
		EndIf

		oMultNat := MsNewGetDados():New(004,(nPosX/2)+064,058,nPosX+066,IIf(lAltera,GD_INSERT+GD_UPDATE+GD_DELETE,0),"NfeLOkSEV",/*TudoOK*/,/*inicpos*/,aAltNewGd,/*freeze*/,999,/*fieldok*/,/*superdel*/,/*delok*/,oDlg,aHeadSEV,aColsSEV)
		oMultNat:oBrowse:bLostFocus	:= {|| aColsSEV:=aClone(oMultNat:aCols),;
											NfeMultNat(oMultNat,aColsSE2,aHeadSE2,aColsSEV,aHeadSEV),;
		  							       oFolder:nOption := IIf(lMult, Eval( { || oFoco103:Cargo[2] := .T., oFolder:nOption } ), Eval( { || oFoco103:Cargo[2] := .F.,6 } ) )}

		oMultNat:oBrowse:bValid	:= { || NfeTOkSEV(oMultNat:aHeader,oMultNat:aCols,@lMult) }
	Else
		oCtaPag  := MsNewGetDados():New(004,090,058,nPosX+065,IIF(lAltera,GD_UPDATE,0),"NfeLOkSE2","NfeTOkSE2",/*inicpos*/,aCpoHead,/*freeze*/,120,"A103VencSE2()",/*superdel*/,/*delok*/,oDlg,aHeadSE2,aColsSE2)
	EndIf

	If lShowRet
		@ 004,nPosX+068 BUTTON STR0054 SIZE 30,11 FONT oDlg:oFont ; // "Retencao"
			ACTION A103CalcRt(aColsSE2,aHeadSE2,@cModRetPIS,lPccBaixa) OF oDlg PIXEL
	EndIf

	@ IIF(lShowRet,015,004),nPosX+068 BUTTON STR0055 MESSAGE STR0056 SIZE 30,11 FONT oDlg:oFont ;
	ACTION NfeRatImp(oCtaPag,nMoedaCor,aColsSE2,aHeadSE2) OF oDlg PIXEL // "Rat.Imp.", "Rateio de Impostos Financeiros"

	If Type( "oFoco103" ) == "O" .And. GetNewPar( "MV_CONFDUP", "2" ) == "1"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Esta secao verifica para qual objeto a getdados do financeiro perdeu o foco.         ³
		//³ Se perder o foco para o objeto oFoco103 ( dummy ) localizado na confirmacao da dialog³
		//³ marca a variavel de controle da Dialog como .F. impedindo o fechamento da janela caso³
		//³ a TudoOk da getdados retorne .F.                                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oCtaPag:oBrowse:bLostFocus	:= {|nHand| NfeMultNat(oMultNat,aColsSE2,aHeadSE2,aColsSEV,aHeadSEV),oFolder:nOption := IIf(NfeTotFin(oCtaPag:aHeader,oCtaPag:aCols),oFolder:nOption, Eval( { |nHand| oFoco103:Cargo[1] := !( nHand == oFoco103:hWnd ),6 }, nHand ) ),aColsSE2:=oCtaPag:aCols }
	Else
		oCtaPag:oBrowse:bLostFocus	:= {|| NfeMultNat(oMultNat,aColsSE2,aHeadSE2,aColsSEV,aHeadSEV),oFolder:nOption := IIf(NfeTotFin(oCtaPag:aHeader,oCtaPag:aCols),oFolder:nOption,6),aColsSE2:=oCtaPag:aCols }
	EndIf

EndIf
If lCalcula
	Eval(bRefresh)
EndIf
nTaxa:= nTaxaMoeda
RestArea(aArea)
Return oCtaPag

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRatImp ³Autor  ³Alexandre Inacio Lemes ³ Data ³13/10/2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Faz o rateio dos impostos do folder de duplicatas pelo valor ³±±
±±³          ³das parcelas do titulo.                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA103                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfeRatImp(oCtaPag,nMoedaCor,aColsSE2,aHeadSE2)

Local aRateio   := {0,0,0,0,0,0,0}
Local aCols     := {}
Local nPValor   := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_VALOR"})
Local nPIRRF    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_IRRF"})
Local nPISS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_ISS"})
Local nPINSS    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_INSS"})
Local nPPIS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS  := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_CSLL"})
Local nPSEST    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_SEST"})
Local nX        := 0
Local nValor    := 0
Local nIrrf		:= 0
Local nIss	    := 0
Local nInss	    := 0
Local nPis      := 0
Local nCofins   := 0
Local nCsll     := 0
Local nSEST		:= 0
Local lISSNat	:= .T.
Local cNatNF	:= ""
Local lISSTes	:= SuperGetMv("MV_ISSRETD",.F.,.F.)
Local cINSSAd	:= "0"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Rateio do Impostos Financeiros                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MaFisFound("NF") .And. MaFisRet(,"NF_BASEDUP")<>0

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se deve existir o calculo do ISS pela natureza do titulo³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cNatNF := MaFisRet(,"NF_NATUREZA")
	dbSelectArea("SED")
	If SED->(dbSeek(xFilial("SED")+cNatNF))
		lISSNat := SED->ED_CALCISS <> "N" .Or. lISSTes
	Endif

	If Type("aBaseDup")=="U" .Or. aBaseDup==Nil
		aBaseDup := {MaFisRet(,"NF_BASEDUP"),0}
	EndIf

	cINSSAd	:=	MaFisScan("NF_VALINA",.F.)

	nValor  := NoRound(xMoeda(MaFisRet(,"NF_BASEDUP"),MaFisRet(,"NF_MOEDA"),nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")),2)
	nIrrf	:= MaFisRet(,"NF_VALIRR")
	nIss	:= IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0)
	nInss   := MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0)
	nPis    := MaFisRet(,"NF_VALPIS")
	nCofins := MaFisRet(,"NF_VALCOF")
	nCsll   := MaFisRet(,"NF_VALCSL")
	nSEST	:= MaFisRet(,"NF_VALSES")

	aCols := IIf(oCtaPag<>Nil,oCtaPag:aCols,aCols)

	For nX := 1 To Len(aCols)
		If nPIRRF <> 0
			aCols[nX][nPIRRF] := IIf(nX==Len(aCols),nIRRF-aRateio[1],NoRound(nIRRF*aCols[nX][nPValor]/nValor,2))
			aRateio[1] += aCols[nX][nPIRRF]
		EndIf
		If nPISS <> 0
			aCols[nX][nPISS] := IIf(nX==Len(aCols),nISS -aRateio[2],NoRound(nISS*aCols[nX][nPValor]/nValor,2))
			aRateio[2] += aCols[nX][nPISS]
		EndIf
		If nPINSS <> 0
			aCols[nX][nPINSS] := IIf(nX==Len(aCols),nINSS-aRateio[3],NoRound(nINSS*aCols[nX][nPValor]/nValor,2))
			aRateio[3] += aCols[nX][nPINSS]
		EndIf
		If nPPIS <> 0
			aCols[nX][nPPIS] := IIf(nX==Len(aCols),nPIS-aRateio[4],NoRound(nPIS*aCols[nX][nPValor]/nValor,2))
			aRateio[4] += aCols[nX][nPPIS]
		EndIf
		If nPCOFINS <> 0
			aCols[nX][nPCOFINS] := IIf(nX==Len(aCols),nCOFINS-aRateio[5],NoRound(nCOFINS*aCols[nX][nPValor]/nValor,2))
			aRateio[5] += aCols[nX][nPCOFINS]
		EndIf
		If nPCSLL <> 0
			aCols[nX][nPCSLL] := IIf(nX==Len(aCols),nCSLL-aRateio[6],NoRound(nCSLL*aCols[nX][nPValor]/nValor,2))
			aRateio[6] += aCols[nX][nPCSLL]
		EndIf
		If nPSEST <> 0
			aCols[nX][nPSEST] := IIf(nX==Len(aCols),nSEST-aRateio[7],NoRound(nSEST*aCols[nX][nPValor]/nValor,2))
			aRateio[7] += aCols[nX][nPSEST]
		EndIf
	Next nX

	If oCtaPag<>Nil
		If !Empty(aCols)
			oCtaPag:aCols := aCols
		EndIf
		oCtaPag:nAt   := 1
		oCtaPag:Refresh()
	EndIf

EndIf

Return( .T. )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeMultNat³Autor  ³Alexandre Inacio Lemes ³ Data ³05/07/2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Rotina de recalculo do valor rateado em multiplas Naturezas. ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA103                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfeMultNat(oMultNat,aColsSE2,aHeadSE2,aColsSEV,aHeadSEV)

Local nUsadoSEV := Len(aHeadSEV)
Local nPValSEV  := aScan(aHeadSEV,{|x| AllTrim(x[2])=="EV_VALPERC"})
Local nPercSEV  := aScan(aHeadSEV,{|x| AllTrim(x[2])=="EV_PERC"})
Local nPValor   := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_VALOR"})
Local nPIRRF    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_IRRF"})
Local nPISS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_ISS"})
Local nPINSS    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_INSS"})
Local nPPIS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS  := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_CSLL"})
Local nValor    := 0
Local nValISS   := 0
Local nValIRRF  := 0
Local nValINSS  := 0
Local nValPIS   := 0
Local nValCOF   := 0
Local nValCSLL  := 0
Local nX        := 0
Local nY        := 0
Local nSoma     := 0
Local lRetorno  := .T.
Local nValFun   := 0
Local nMultDec  := GetNewPar( "MV_MULTDEC", 2 )
Local nValFet   := Iif( MaFisFound("NF") , MaFisRet(,"NF_VALFET") , 0 )

If MaFisFound("NF")
	nValFun := MaFisRet(,"NF_FUNRURAL")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Utilizado para manipular naturezas ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If oMultNat<>Nil
	If ExistBlock("MT103SEV")
		aColsSEV := ExecBlock("MT103SEV",.F.,.F.,{aHeadSEV,aColsSEV})
		If !Empty(aColsSEV)
			oMultNat:aCols := aClone(aColsSEV)
		EndIf
		oMultNat:Refresh()
	Endif
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ha necessidade da gravacao das multiplas naturezas    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nPValSEV > 0

	If oMultNat<>Nil
	   aColsSEV := aClone(oMultNat:aCols)
	EndIf

	aEval(aColsSE2,{|x| nValor   += x[nPValor] })
	aEval(aColsSE2,{|x| nValISS  += x[nPISS]   })
	aEval(aColsSE2,{|x| nValIRRF += x[nPIRRF]  })
	aEval(aColsSE2,{|x| nValINSS += x[nPINSS]  })
	aEval(aColsSE2,{|x| nValPIS  += x[nPPIS]   })
	aEval(aColsSE2,{|x| nValCOF  += x[nPCOFINS]})
	aEval(aColsSE2,{|x| nValCSLL += x[nPCSLL]  })

    nValor := nValor-nValISS-nValIRRF-nValINSS-nValPIS-nValCOF-nValCSLL

	nRateio := 0
	For nY := 1 To Len(aColsSEV)
		If !aColsSEV[nY][Len(aColsSEV[1])] .And. !Empty(aColsSEV[nY][1])
			aColsSEV[nY][nPValSEV] := IIf(nY==Len(aColsSEV),nValor-nValFun-nValFet-nRateio,NoRound(nValor*aColsSEV[nY][nPercSEV]/100,nMultDec))
			nRateio += aColsSEV[nY][nPValSEV]
		EndIf
	Next nY

	If oMultNat<>Nil
		If !Empty(aColsSEV)
			oMultNat:aCols := aClone(aColsSEV)
		EndIf
		oMultNat:Refresh()
	EndIf
EndIf

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRFldFin³Autor  ³ Eduardo Riera         ³ Data ³12.12.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao dos dados do folder financeiro do      ³±±
±±³          ³documento de entrada                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Condicao de Pagamento                                 ³±±
±±³          ³ExpC2: Descricao da condicao de pagamento                    ³±±
±±³          ³ExpC3: Natureza                                              ³±±
±±³          ³ExpN4: Codigo da Moeda                                       ³±±
±±³          ³ExpN5: Taxa da moeda                                         ³±±
±±³          ³ExpO6: Objeto da condicao de pagamento                       ³±±
±±³          ³ExpO7: Objeto da natureza                                    ³±±
±±³          ³ExpO8: Objeto da Moeda                                       ³±±
±±³          ³ExpO9: Objeto da taxa da moeda                               ³±±
±±³          ³ExpOA: Objeto da descricao da moeda                          ³±±
±±³          ³ExpOB: Objeto da getdados do titulos financeiros             ³±±
±±³          ³ExpLC: Indica se a rotina esta em modo de inclusao           ³±±
±±³          ³ExpAD: ACols com as parcelas dos titulos financeiros         ³±±
±±³          ³ExpAE: AHeader das parcelas dos titulos financeiros          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar os dados do folder   ³±±
±±³          ³financeiro do documento de entrada                           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfeRFldFin(cCondicao,cDescricao,cNatureza,nMoeda,nTaxa,oCondicao,oNatureza,oMoeda,oTaxa,oDscMoeda,oCtaPag,oMultNat,lInclui,aColsSE2,aHeadSE2,aColsSEV,aHeadSEV,oDescri,oTxNeg)

Local nValor    := 0
Local nValIpi	:= 0
Local nValSol	:= 0
Local nTotDup   := 0
Local nTotIRF   := 0
Local nTotINSS  := 0
Local nTotISS   := 0
Local nTotPIS   := 0
Local nTotCOF   := 0
Local nTotCSLL  := 0
Local nTotSEST	:= 0
Local nTotFet	:= 0
Local nTotFab	:= 0
Local nTotFac   := 0
Local nX        := 0
Local nY        := 0
Local nPParcela := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_PARCELA"})
Local nPVencto  := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_VENCTO"})
Local nPValor   := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_VALOR"})
Local nPIRRF    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_IRRF"})
Local nPISS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_ISS"})
Local nPINSS    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_INSS"})
Local nPPIS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS  := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_CSLL"})
Local nPValSEV  := aScan(aHeadSEV,{|x| AllTrim(x[2])=="EV_VALPERC"})
Local nPercSEV  := aScan(aHeadSEV,{|x| AllTrim(x[2])=="EV_PERC"})
Local nPSEST    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_SEST"})
Local nPFETHAB  := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_FETHAB"})
Local nPFABOV 	:= aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_FABOV"})
Local nPFACS  	:= aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_FACS"})
Local nValSEV   := 0
Local nValFun   := 0
Local nValFet   := 0
Local nValFab   := 0
Local nValFac	:= 0
Local nIrrf		:= 0
Local nInss	    := 0
Local nIss	    := 0
Local nPis      := 0
Local nCofins   := 0
Local nCsll     := 0
Local nSEST		:= 0
Local nUsadoSE2 := Len(aHeadSE2)
Local nMultDec  := GetNewPar( "MV_MULTDEC", 2 )
Local nTamParc  := TamSx3("E2_PARCELA")[1]
Local nPosNfOri := 0
Local nPosSerOri:= 0
Local nPosVec    := aScan(aHeadSE2, { |x| AllTrim(x[01]) == AllTrim(Posicione('SX3',2,'E2_VENCTO','SX3->X3_TITULO'))})
Local cNfOri	:= ""
Local cSerOri	:= ""
Local aColsTit	:= IIF(Type('lMoedTit')=='L' .And. lMoedTit,Iif(ValType(aCols)=="A",aClone(aCols),{}),{})
Local dDataTit	:= dDEmissao
Local aCols     := {}
Local aColsDup  := {}
Local aColsPE   := {}
Local aVencto   := {}
Local a103Cnd2  := {}
Local aRateio   := {0,0,0,0,0,0,0}
Local cParcela  := SuperGetMV("MV_1DUP")
Local cMT103NTZ
Local lVencto   := .F.
Local cCampo    := ReadVar()
Local cMoeda    := ""
Local lPCCBaixa := SuperGetMv("MV_BX10925",.F.,"1") == "1"
Local lIRPFBaixa:= SA2->A2_CALCIRF == "2"
Local lMT103GET  := Existblock("MT103GET")
Local lMT103TXPC:= ExistBlock("MT103TXPC")
Local lRatIRRF	:= SuperGetMV("MV_RATIRRF",.F.,.T.) .Or. lIRPFBaixa
Local lRatISS	:= SuperGetMV("MV_RATISS",.F.,.T.)
Local lRatINSS	:= SuperGetMV("MV_RATINSS",.F.,.T.)
Local lRatSEST	:= SuperGetMV("MV_RATSEST",.F.,.T.)
Local lRatPIS	:= SuperGetMV("MV_RATPIS",.F.,.T.)
Local lRatCOFINS:= SuperGetMV("MV_RATCOF",.F.,.T.)
Local lRatCSLL	:= SuperGetMV("MV_RATCSLL",.F.,.T.)
Local lISSNat	:= .T.
Local lISSTes	:= SuperGetMv("MV_ISSRETD",.F.,.F.)
Local l103Auto  := If(Type('l103Auto')=='U', .F., l103Auto)
Local lChkDup	:= .F.
Local lDupNew   := .F.
Local cINSSAd	:= "0"
Local cLimRec	:= SuperGetMv("MV_LIMREC",.F.,'1')
Local bCondLim  := { || .T. }
Local aDadosPC := {}

DEFAULT cNatureza := CriaVar("E2_NATUREZ",.F.)
DEFAULT lInclui := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obtem a natureza do cadastro de fornecedores                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lInclui
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para alterar valor da Duplicata     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (ExistBlock("A103VLR")) .And. MaFisFound("NF")
		nValor := ExecBlock("A103VLR",.F.,.F.)
		If nValor <> MaFisRet(,"NF_BASEDUP")
			MaFisAlt("NF_BASEDUP",nValor)
		EndIf
	EndIf
	If MaFisFound("NF")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se deve existir o calculo do ISS pela natureza do titulo³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SED")
		If SED->(dbSeek(xFilial("SED")+cNatureza))
			lISSNat := SED->ED_CALCISS <> "N" .Or. lISSTes
		Endif

		If Empty(cNatureza)
			If cTipo$'DB'
				cNatureza := &(SuperGetMV("MV_1DUPNAT",.F.,""))
				MaFisAlt("NF_NATUREZA",cNatureza)
			Else
				cNatureza := &(SuperGetMV("MV_2DUPNAT",.F.,""))
				MaFisAlt("NF_NATUREZA",cNatureza)
			EndIf
		Else
			cNatureza := MaFisRet(,"NF_NATUREZA")
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para selecionar a natureza no Documento de Entrada   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If (ExistBlock("MT103NTZ"))
			cMT103NTZ  := ExecBlock("MT103NTZ",.F.,.F.,{cNatureza})
			If ( ValType(cMT103NTZ ) == 'C' )
			  	dbSelectArea("SED")
				If SED->(dbSeek(xFilial("SED")+cMT103NTZ))
					cNatureza := cMT103NTZ
					MaFisAlt("NF_NATUREZA",cNatureza)
				EndIf
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a descricao da condicao de pagamento                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cCondicao)
		dbSelectArea("SE4")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SE4")+cCondicao) )
			cDescricao	:= SE4->E4_DESCRI
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica parâmetro MV_MOEDTIT para gerar devolução NCC na mesma moeda e taxa do título original
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type('lMoedTit')=='L' .And. lMoedTit .And. cTipo == "D" .And. SuperGetMv("MV_TXMOENC",.F.,"1") == "1"

		nPosNfOri := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_NFORI"} )
		nPosSerOri:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_SERIORI"} )
		If len(aColsTit)>=1 .And. nPosNfOri > 0
			If len(aColsTit[1]) >= nPosNfOri
				cNfOri := aColsTit[1][nPosNfOri]
			EndIf
		EndIf

		If len(aColsTit)>=1 .And. nPosSerOri > 0
			If len(aColsTit[1]) >= nPosSerOri
				cSerOri := aColsTit[1][nPosSerOri]
			EndIf
		EndIf

		IF !Empty(cNfOri)

			DbSelectArea("SF2")
			DbSetOrder(1)
			If MsSeek(xFilial("SF2") + cNfOri + cSerOri)
				cSerOri := IIf(Empty(SF2->F2_PREFIXO),&(SuperGetMV("MV_1DUPREF")),SF2->F2_PREFIXO)
				cSerOri := PadR( cSerOri, Len( SE1->E1_PREFIXO ) )
		    EndIf
			DbSelectArea("SE1")
			DbSetOrder(2)
            cSerOri := Substr(cSerOri,1,3)
			MsSeek(xFilial("SE1")+cA100For+cLoja+cSerOri+cNfOri)
			While !Eof() .And. xFilial("SE1") == SE1->E1_FILIAL .And.;
					cA100For == SE1->E1_CLIENTE .And.;
					cLoja	 == SE1->E1_LOJA    .And.;
					cSerOri	 == SE1->E1_PREFIXO .And.;
					cNfOri	 == SE1->E1_NUM
				If SE1->E1_TIPO == "NF " .And. SE1->E1_MOEDA > 0 .And. SE1->E1_EMISSAO <> CTOD('  /  /  ')
					nMoedaCor := SE1->E1_MOEDA
					nMoeda	  := nMoedaCor
					dDataTit  := SE1->E1_EMISSAO
					nTaxa	  := 0
					Exit
				Endif
				DbSelectArea("SE1")
				dbSkip()
			EndDo
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a taxa da Moeda                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cMoeda := SuperGetMv("MV_MOEDA"+AllTrim(Str(nMoeda,2)))
	If nMoeda <> 1
		If !"NTAXA"$Upper(cCampo)
		    If ( l103Auto .Or. lMT103TXPC ) .And. nTaxa <> 0
		        MaFisAlt("NF_TXMOEDA",nTaxa)
			EndIf
		    If (nTaxa == 0 .And. L103Auto) .Or. (!L103Auto)
				nTaxa := MaFisRet(,"NF_TXMOEDA")
			EndIf
			If nTaxa == 0
				nTaxa := xMoeda(1,nMoeda,MaFisRet(,"NF_MOEDA"),IIF(Type('lMoedTit')=='L' .And. lMoedTit,dDataTit,dDEmissao),TamSx3("F1_TXMOEDA")[2])
				MaFisAlt("NF_TXMOEDA",nTaxa)
			EndIf
		Else
			MaFisAlt("NF_TXMOEDA",nTaxa)
		EndIf
	Else
		nTaxa := 0
		MaFisAlt("NF_TXMOEDA",nTaxa)
	EndIf

	cINSSAd	:=	MaFisScan("NF_VALINA",.F.)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a getdados dos titulos financeiros                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(cCondicao) .And. MaFisFound("NF") .And. MaFisRet(,"NF_BASEDUP")<>0
		nValor  := NoRound(xMoeda(MaFisRet(,"NF_BASEDUP"),MaFisRet(,"NF_MOEDA"),nMoeda,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")),2)
		If Type("aBaseDup")=="U" .Or. aBaseDup==Nil
			aBaseDup := {MaFisRet(,"NF_BASEDUP"),0}
		EndIf
		nValFun := MaFisRet(,"NF_FUNRURAL")
		nValFet := IIf(MaFisRet(,"NF_RECFET")=="2",MaFisRet(,"NF_VALFET"),0)
		nValFab := IIf(MaFisRet(,"NF_RECFAB")=="2",MaFisRet(,"NF_VALFAB"),0)
		nValFac := IIf(MaFisRet(,"NF_RECFAC")=="2",MaFisRet(,"NF_VALFAC"),0)
		nIrrf	:= MaFisRet(,"NF_VALIRR")
		nInss   := MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0)
		nIss	:= IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0)
		nPis    := MaFisRet(,"NF_VALPIS")
		nCOFINS := MaFisRet(,"NF_VALCOF")
		nCSLL   := MaFisRet(,"NF_VALCSL")
		nSEST	:= MaFisRet(,"NF_VALSES")
		nValIpi := Iif( nValor > 0, NoRound(xMoeda(MaFisRet(,"NF_VALIPI") ,MaFisRet(,"NF_MOEDA"),nMoeda,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")),2), 0 )
		nValSol	:= Iif( nValor > 0, NoRound(xMoeda(MaFisRet(,"NF_VALSOL") ,MaFisRet(,"NF_MOEDA"),nMoeda,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")),2), 0 )
		aVencto	:= Condicao(nValor,cCondicao,nValIpi,dDEmissao,nValSol)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//|Quando altero a data de vencimento do titulo, atualiza o array de duplicatas         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cCampo == "M->E2_VENCTO" .And. ValType(aVencto) == "A"
		  // Caso algumas das parcelas esta com a data diferente permanece a data Digitada.
			If Len(aVencto) == Len(aColsSe2)
				For nX := 1 To Len (aVencto)
					If aVencto[nX][1] <> aColsSe2[nX][nPosVec] .And. CTOD('  /  /  ') <> aColsSe2[nX][nPosVec]
						aVencto[1][1] := aColsSe2[nX][nPosVec]
					EndIf
				Next nX
			Else
				aVencto[1][1] := M->E2_VENCTO
			EndIf

		ElseIf cCampo!="CCONDICAO" .And. Type('dNewVenc')=='D' .And. dNewVenc != CTOD('  /  /  ') .And. len(aVencto) > 0 .And. cCampo!="DDEMISSAO"
			aVencto[1][1] := dNewVenc
		ElseIf cCampo=="CCONDICAO" .And. Type('dNewVenc')=='D' .And. dNewVenc != CTOD('  /  /  ')
			dNewVenc := aVencto[1][1]
		EndIf

		If ExistBlock("A103VCTO")
        	aDadosPC:=ExecBlock("A103VCTO",.F.,.F.,{ aClone(aColsSE2),nValor,cCondicao,nValIpi,dDEmissao,nValSol})
        	If ValType(aDadosPC) == "A"
        		If Len(aDadosPC) >= 1
        			If Len(aDadosPc[1])>= 2
        				aVencto := aClone(aDadosPC)
        			EndIf
        		EndIf
        	EndIf
  		EndIf

		nTotDup := 0
		aCols := IIf(oCtaPag<>Nil,oCtaPag:aCols,aCols)
		If Len(aCols)>0
			If aCols[nPParcela][nPValor]<>nValor .And. Len(aVencto) == 1
				If cLimRec == "1"
					If Abs(aCols[nPParcela][nPValor]-nValor)>=SuperGetMV("MV_LIMPAG")
					    aCols[nPParcela][nPValor]:= nValor
					EndIf
				ElseIf cLimRec == "2"
					If Abs(aCols[nPParcela][nPValor]-nValor)>SuperGetMV("MV_LIMPAG")
						aCols[nPParcela][nPValor]:= nValor
					EndIF
				EndIF
			    aCols[nPParcela][nPVencto]:=aVencto[1][1]
			EndIf
        EndIf
		aEval(aCols,{|x| nTotDup+= x[nPValor] })
		If nPIRRF <> 0
			aEval(aCols,{|x| nTotIRF+= x[nPIRRF] })
		EndIf
		If nPINSS <> 0
			aEval(aCols,{|x| nTotINSS+= x[nPINSS] })
		EndIf
		If nPISS <> 0
			aEval(aCols,{|x| nTotISS+= x[nPISS] })
		EndIf
		If nPPIS <> 0
			aEval(aCols,{|x| nTotPis+= x[nPPIS] })
		EndIf
		If nPCOFINS <> 0
			aEval(aCols,{|x| nTotCof+= x[nPCOFINS] })
		EndIf
		If nPCSLL <> 0
			aEval(aCols,{|x| nTotCsll+= x[nPCSLL] })
		EndIf
		If nPSEST <> 0
			aEval(aCols,{|x| nTotSEST+= x[nPSEST] })
		EndIf
		If nPFETHAB <> 0
			aEval(aCols,{|x| nTotFET+= x[nPFETHAB] })
		EndIf
		If nPFABOV <> 0
			aEval(aCols,{|x| nTotFAB+= x[nPFABOV] })
		EndIf
		If nPFACS <> 0
			aEval(aCols,{|x| nTotFAC+= x[nPFACS] })
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//|Quando altero a condicao de pagamento ou data de vencimento recalculo o Valor do IRR ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nIrrf > 0
			If cCampo=="CCONDICAO" .And. (Empty(cCondicaoOld) .Or. cCondicao<>cCondicaoOld)
	       		dVencReal:= aVencto[1][1]
				MaRecIR(dVencReal)
				nIrrf	:= MaFisRet(,"NF_VALIRR")
			ElseIf (cCampo == "M->E2_VENCTO" .And. aVencto[1][1] <> &(cCampo) )
				dVencReal:= aVencto[1][1]
				MaRecIR(dVencReal)
				nIrrf	:= MaFisRet(,"NF_VALIRR")
			EndIf
		EndIf

		lVencto := .T.
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Checa os Vencimentos aCols X Vencimentos Calculados quando ocorrer alteração nos |
		//| campos Data de Emissão, Condição de Pagamento e Cod.Fornecedor.                  |
		//| Quando algum destes campos mudar de conteúdo e o valor anterior for diferente do |
		//| valor atual, a rotina será executada e a variável que armazena o valor anterior  |
		//| será atualizada.  																 |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If ((cCampo == "DDEMISSAO" .And. iif(Empty(dEmisOld),.T.,dMudaEmi<>dEmisOld)) .OR. (cCampo == "CCONDICAO" .And. (Empty(cCondicaoOld) .Or. cCondicao<>cCondicaoOld)) .Or. (cCampo == "CA100FOR" .And. (Empty(cCa100ForOLD) .Or. Ca100For<>cCa100ForOLD)) ) .Or. ExistBlock("A103VCTO")
			For nX := 1 To Len(aVencto)
				If aScan(aCols,{|x| x[nPVencto]==aVencto[nX][1]})==0
					lVencto := .F.
				EndIf
			Next nX
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//| Atualiza a variável xOld com o conteúdo atual do Cabeçalho da NFE   	   |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (cCampo == "DDEMISSAO" .And. iif(Empty(dEmisOld),.T.,dMudaEmi<>dEmisOld))
			    dEmisOld := dMudaEmi
			ElseIf (cCampo == "CA100FOR" .And. (Empty(cCa100ForOLD) .Or. cCa100ForOLD<>cA100For))
			    cCa100ForOLD := cA100For
			ElseIf (cCampo == "CCONDICAO" .And. (Empty(cCondicaoOld) .Or. cCondicaoOLD<>cCondicao))
			    cCondicaoOLD := cCondicao
			EndIF
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se o recalculo deve ser efetuado mesmo se o valor total for igual ao permitido ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If cLimRec == "1"
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Esta e a situacao "default", ou seja, mesmo que o valor principal esteja igual, recalcula  ³
			//³ Eh mantida assim em respeito ao legado do sistema                                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			bCondLim := { || Abs(nValor-nTotDup)>=SuperGetMV("MV_LIMPAG") }
		ElseIf cLimRec == "2"
			bCondLim := { || Abs(nValor-nTotDup)>SuperGetMV("MV_LIMPAG") }
		ElseIf cLimRec == "3"
			bCondLim := {|| .F.}
		EndIf

		If Eval( bCondLim ) .Or. nValor == 0 .Or. nTotDup == 0 .Or.;
			MaFisRet(,"NF_VALIRR")<>nTotIRF  .Or.;
			(MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0))<>nTotINSS .Or.;
			IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0)<>nTotISS .Or.;
			MaFisRet(,"NF_VALPIS")<>nTotPIS .Or.;
			MaFisRet(,"NF_VALCOF")<>nTotCOF .Or.;
			MaFisRet(,"NF_VALCSL")<>nTotCSLL .Or.;
			MaFisRet(,"NF_VALSES")<>nTotSEST .Or.;
			IIf(MaFisRet(,"NF_RECFET")=="2",MaFisRet(,"NF_VALFET"),0)<>nTotFet .Or.;
			IIf(MaFisRet(,"NF_RECFAB")=="2",MaFisRet(,"NF_VALFAB"),0)<>nTotFab .Or.;
			IIf(MaFisRet(,"NF_RECFAC")=="2",MaFisRet(,"NF_VALFAC"),0)<>nTotFac .Or.;
				Len(aVencto) <> Len(aCols) .Or.;
				!lVencto
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de entrada para alterar condicao de pagamento          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (ExistBlock("A103CND2"))
				a103Cnd2 := Aclone(aVencto)
				nTotDup := 0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ajusta a quebra das parcelas para passar ao ponto de entrada ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				For nX := 1 To Len(a103Cnd2)
					a103Cnd2[nX][2] := NoRound(a103Cnd2[nX][2],2)
					If nX <> Len(a103Cnd2)
						nTotDup += a103Cnd2[nx][2]
					Else
						a103Cnd2[nX][2]   := nValor-nTotDup
					EndIf
				Next nX

				a103Cnd2 := ExecBlock("A103CND2",.F.,.F.,a103Cnd2)
				If Valtype(a103Cnd2)=="A"
					aVencto := Aclone(a103Cnd2)
				EndIf
				nValor := 0
				For nX := 1 To Len(aVencto)
					nValor += aVencto[nX][2]
				Next nX
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Montagem do acols das parcelas do titulo financeiro          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotDup := 0
			aColsDup:=aclone(aCols)
			aCols := {}
	        cParcela:= IIF(Len(aVencto)>1,SuperGetMV("MV_1DUP   ")," ")

			If !l103Auto .And. ExistBlock("A1031DUP")
				lChkDup:= ExecBlock("A1031DUP",.F.,.F.)
				If ValType(lChkDup) <> "L"
					lChkDup:= .F.
				EndIf
			EndIf

        	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Consiste tamanho do campo de parcelas e parametro MV_1DUP³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !l103Auto .And. lChkDup
				If ( Len(aVencto) > 1 ) .And. ( nTamParc <> Len(cParcela) )
					Help('',1,'A1031DUP')
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Consiste numero de parcelas da condicao e o maximo suportado pelo tamanho do campo ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If  Len(aVencto) > ( IIF ( STRZERO(0,nTamParc) == cParcela .Or. Val(cParcela) > 0,35,25) ** nTamParc )
					Help('',1,'A103PARC',,STR0108+Alltrim(STR(( IIF ( STRZERO(0,nTamParc) == cParcela .Or.; //##Numero maximo de parcelas:
					Val(cParcela) > 0,35,25) ** nTamParc )) )+Chr(10)+Chr(13)+STR0109+Alltrim(STR(Len(aVencto))),5,1)//##Parcelas da condicao de pagamento
				EndIf
			EndIf
			For nX := 1 To Len(aVencto)
				aVencto[nX][2] := NoRound(aVencto[nX][2],2)
				aadd(aCols,Array(nUsadoSE2+1))
				For nY := 1 To nUsadoSE2
					If IsHeadRec(aHeadSE2[nY][2])
					    aCols[Len(aCols)][nY] := 0
					ElseIf IsHeadAlias(aHeadSE2[nY][2])
					    aCols[Len(aCols)][nY] := "SE2"
				    Else
						aCols[Len(aCols)][nY] := CriaVar(aHeadSE2[nY,2],.F.)
			        EndIf
				Next nX
				aCOLS[Len(aCols)][nUsadoSE2+1] := .F.
				If nX <> Len(aVencto)
					aCols[nX][nPParcela] := cParcela
					// Se a Data for alterada manualmente mantem a data modificada.
					aCols[nX][nPVencto]  := If(Len(aColsSe2) == Len(aVencto) .And. aVencto[nX][1] <> aColsSe2[nX][nPosVec] .And. CTOD('  /  /  ') <> aColsSe2[nX][nPosVec] .AND. READVAR() <> "CCONDICAO" ,aColsSe2[nX][nPosVec] ,aVencto[nX][1])
					aCols[nX][nPValor]   := aVencto[nX][2]
					nTotDup += aVencto[nx][2]
					cParcela := MaParcela(cParcela)
				Else

		          If cCampo = "DDEMISSAO"
				    	aCols[nX][nPParcela] := cParcela
				    	// se parcela e data estiver vazio, pode ser estar executando a classficacao de NFE
				    	// Se a Data for alterada manualmente mantem a data modificada.

				    	If (Nx >= Len(aColsSe2))  .OR. (Len(aColsSe2) == Len(aVencto) .And. aVencto[nX][1] <> aColsSe2[nX][nPosVec] .And. READVAR() <> "CCONDICAO")
				    		aCols[nX][nPVencto]  := aVencto[nX][1]
				    	Else
				    		aCols[nX][nPVencto]  := aColsSe2[Len(aColsSe2)][nPosVec]
				    	EndIf
							aCols[nX][nPValor]   := nValor-nTotDup
					Else
					    aCols[nX][nPParcela] := cParcela
				    	// Se a Data for alterada manualmente mantem a data modificada.
						aCols[nX][nPVencto]  := If(Len(aColsSe2) == Len(aVencto) .And. aVencto[nX][1] <> aColsSe2[nX][nPosVec] .And. CTOD('  /  /  ') <> aColsSe2[nX][nPosVec] .AND. READVAR() <> "CCONDICAO"   ,aColsSe2[Len(aColsSe2)][nPosVec],aVencto[nX][1])
						aCols[nX][nPValor]   := nValor-nTotDup
					Endif

				EndIf

			Next nX

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de Entrada: A103DUP     |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("MT103DUP") .And. Len(aColsDup)>0
			    lDupNew:= ExecBlock("MT103DUP",.F.,.F.,{aColsDup,aVencto,nValor})
				If Valtype(lDupNew)<>"L"
					lDupNew:=.F.
				EndIf
			EndIf

			If lDupNew
				aCols:=aClone(aColsDup)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se ha necessidade da gravacao das multiplas naturezas    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPValSEV > 0
                nValSEV := nValor-nValFun-nValFet-nIrrf-nInss-nIss-nPis-nCOFINS-nCSLL-nValFab-nValFac
				nRateio := 0
				For nY := 1 To Len(aColsSEV)
					If !aColsSEV[nY][Len(aColsSEV[1])] .And. !Empty(aColsSEV[nY][1])
						aColsSEV[nY][nPValSEV] := IIf(nY==Len(aColsSEV),nValSEV-nRateio,NoRound(nValSEV*aColsSEV[nY][nPercSEV]/100,nMultDec))
						nRateio += aColsSEV[nY][nPValSEV]
					EndIf
				Next nY
            EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Rateio do Impostos Financeiros                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Len(aCols)>0
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Gera o valor da Fethab apenas na primeira parcela.                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nPFETHAB <> 0
					aCols[1][nPFETHAB] := nValFet
				EndIf
				If nPFABOV <> 0
					aCols[1][nPFABOV] := nValFab
				EndIf

				If nPFACS <> 0
					aCols[1][nPFACS] := nValFac
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Se o parametro nao permitir o rateio do IRRF/ISS/INSS, o valor sera descontado apenas na primeira parcela.³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !lRatIRRF
					If nPIRRF <> 0
						aCols[1][nPIRRF] := nIRRF- aRateio[1]
						aRateio[1] += aCols[1][nPIRRF]
					EndIf
				Endif
				If !lRatISS
					If nPISS <> 0
						aCols[1][nPISS] := nISS - aRateio[2]
						aRateio[2] += aCols[1][nPISS]
					EndIf
				Endif
				If !lRatINSS
					If nPINSS <> 0
						aCols[1][nPINSS] := nINSS - aRateio[3]
						aRateio[3] += aCols[1][nPINSS]
					EndIf
				Endif

				If !lRatPIS
					If nPPIS <> 0
						aCols[1][nPPIS] := nPIS - aRateio[4]
						aRateio[4] += aCols[1][nPPIS]
					EndIf
				EndIf

				If !lRatCOFINS
					If nPCOFINS <> 0
						aCols[1][nPCOFINS] := nCOFINS - aRateio[5]
						aRateio[5] += aCols[1][nPCOFINS]
					EndIf
				EndIf

				If !lRatCSLL
					If nPCSLL <> 0
						aCols[1][nPCSLL] := nCSLL - aRateio[6]
						aRateio[6] += aCols[1][nPCSLL]
					EndIf
				EndIf

				If !lRatSEST
					If nPSEST <> 0
						aCols[1][nPSEST] := nSEST - aRateio[7]
						aRateio[7] += aCols[1][nPSEST]
					EndIf
				EndIf

			EndIf
			For nX := 1 To Len(aCols)
				If nPIRRF <> 0
					If lRatIRRF
						aCols[nX][nPIRRF] := IIf(nX==Len(aCols),nIRRF-aRateio[1],NoRound(nIRRF*aCols[nX][nPValor]/nValor,2))
						aRateio[1] += aCols[nX][nPIRRF]
					Endif
				EndIf
				If nPISS <> 0
					If lRatISS
						aCols[nX][nPISS] := IIf(nX==Len(aCols),nISS -aRateio[2],NoRound(nISS*aCols[nX][nPValor]/nValor,2))
						aRateio[2] += aCols[nX][nPISS]
					Endif
				EndIf
				If nPINSS <> 0
					If lRatINSS
						aCols[nX][nPINSS] := IIf(nX==Len(aCols),nINSS-aRateio[3],NoRound(nINSS*aCols[nX][nPValor]/nValor,2))
						aRateio[3] += aCols[nX][nPINSS]
					Endif
				EndIf
				If nPPIS <> 0
					If lRatPIS
						aCols[nX][nPPIS] := IIf(nX==Len(aCols),nPIS-aRateio[4],NoRound(nPIS*aCols[nX][nPValor]/nValor,2))
						aRateio[4] += aCols[nX][nPPIS]
                    EndIf
				EndIf
				If nPCOFINS <> 0
					If lRatCOFINS
						aCols[nX][nPCOFINS] := IIf(nX==Len(aCols),nCOFINS-aRateio[5],NoRound(nCOFINS*aCols[nX][nPValor]/nValor,2))
						aRateio[5] += aCols[nX][nPCOFINS]
                    EndIf
				EndIf
				If nPCSLL <> 0
					If lRatCSLL
						aCols[nX][nPCSLL] := IIf(nX==Len(aCols),nCSLL-aRateio[6],NoRound(nCSLL*aCols[nX][nPValor]/nValor,2))
						aRateio[6] += aCols[nX][nPCSLL]
                    EndIf
				EndIf
				If nPSEST <> 0
					If lRatSEST
						aCols[nX][nPSEST] := IIf(nX==Len(aCols),nSEST-aRateio[7],NoRound(nSEST*aCols[nX][nPValor]/nValor,2))
						aRateio[7] += aCols[nX][nPSEST]
					Endif
				EndIf
			Next nX
		EndIf
		If cCampo == "M->E2_VENCTO" .And. ValType(aIrrfNew)=="A"
			aIrrfNew := aCols
		EndIf
	Else
		If MaFisFound("NF")
			aCols   := IIf(oCtaPag<>Nil,oCtaPag:aCols,aCols)
			nValor := NoRound(xMoeda(MaFisRet(,"NF_BASEDUP"),MaFisRet(,"NF_MOEDA"),nMoeda,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")),2)
			If nValor == 0
				aCols := {}
			EndIf
			nValFun := MaFisRet(,"NF_FUNRURAL")
			nValFet := IIf(MaFisRet(,"NF_RECFET")=="2",MaFisRet(,"NF_VALFET"),0)
			nValFab := IIf(MaFisRet(,"NF_RECFAB")=="2",MaFisRet(,"NF_VALFAB"),0)
			nValFac := IIf(MaFisRet(,"NF_RECFAC")=="2",MaFisRet(,"NF_VALFAC"),0)
			nIrrf	:= MaFisRet(,"NF_VALIRR")
			nInss   := MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0)
			nIss	:= IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0)
			nPis    := MaFisRet(,"NF_VALPIS")
			nCOFINS := MaFisRet(,"NF_VALCOF")
			nCSLL   := MaFisRet(,"NF_VALCSL")
			nSEST   := MaFisRet(,"NF_VALSES")
			If Empty(aCols)
				aadd(aCols,Array(nUsadoSE2+1))
			EndIf
			For nY := 1 To nUsadoSE2
				If IsHeadRec(aHeadSE2[nY][2])
					aCols[Len(aCols)][nY] := 0
				ElseIf IsHeadAlias(aHeadSE2[nY][2])
					aCols[Len(aCols)][nY] := "SE2"
				ElseIf nY <> nPVencto
					aCOLS[Len(aCols)][nY] := CriaVar(aHeadSE2[nY,2],.F.)
				Else
					aCols[Len(aCols)][nPVencto]  := IIf(Empty(aCols[Len(aCols)][nPVencto]),dDataBase,aCols[Len(aCols)][nPVencto])
				Endif
			Next nY

			aCOLS[Len(aCols)][nUsadoSE2+1] := .F.
			aCols[Len(aCols)][nPParcela] := Space(Len(SE2->E2_PARCELA))
			aCols[Len(aCols)][nPVencto]  := Iif(Empty(aCols[Len(aCols)][nPVencto]),dDataBase,aCols[Len(aCols)][nPVencto])
			aCols[Len(aCols)][nPValor]   := nValor

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se ha necessidade da gravacao das multiplas naturezas    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPValSEV > 0
                nValSEV := nValor-nValFun-nValFet-nIrrf-nInss-nIss-nPis-nCOFINS-nCSLL-nValFac-nValFab
				nRateio := 0
				For nY := 1 To Len(aColsSEV)
					If !aColsSEV[nY][Len(aColsSEV[1])] .And. !Empty(aColsSEV[nY][1])
						aColsSEV[nY][nPValSEV] := IIf(nY==Len(aColsSEV),nValSEV-nRateio,NoRound(nValSEV*aColsSEV[nY][nPercSEV]/100,nMultDec))
						nRateio += aColsSEV[nY][nPValSEV]
					EndIf
				Next nY
            EndIf
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza os objetos                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If oCondicao<>Nil
	oCondicao:lReadOnly  := (IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.), nValor == 0) .And. MaFisFound("NF") .And. cTipo <> "D") .Or. cTipo == 'D' // O Retorno .T. Do ponto MT103GET impede a edicao do Get
    oCondicao:Refresh()
EndIf
If oNatureza<>Nil
	oNatureza:lReadOnly  := IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.), nValor == 0) // O Retorno .T. Do ponto MT103GET impede a edicao do Get
EndIf
If oMoeda<>Nil
	oMoeda:lReadOnly := IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.), nValor == 0) // O Retorno .T. Do ponto MT103GET impede a edicao do Get
EndIf
If oNatureza<>Nil
	oNatureza:Refresh()
EndIf
If oMoeda<>Nil
	oMoeda:Refresh()
EndIf
If oTaxa<>Nil
	oTaxa:lReadOnly := IIF((INCLUI .Or. ALTERA) .And. lMt103Get,ExecBlock("MT103GET",.F.,.F.),nMoedaCor == 1 .Or. (cTipo=="D".And.GetNewPar("MV_TXMOENC","1")=="1"))
	oTaxa:Refresh()
EndIf
If oDscMoeda<>Nil
	If nMoeda == 1
		cMoeda := RetTitle("F1_MOEDA")
	EndIf
	oDscMoeda:SetText(cMoeda)
EndIf
If oCtaPag<>Nil
	oCtaPag:lUpdate := nValor <> 0
	If !Empty(aCols)
		oCtaPag:aCols := aCols
		aColsSE2      := aCols
		If ExistBlock("MTCOLSE2")
			aColsPE:= ExecBlock("MTCOLSE2",.F.,.F.,{aColsSE2})
			If ValType(aColsPE) == "A"
				oCtaPag:aCols:= aColsPE
				aColsSE2	 := aColsPE
			EndIf
		EndIf
	EndIf
	oCtaPag:nAt   := 1
	oCtaPag:Refresh()
Else
	If !Empty(aCols)
		aColsSE2      := aCols
		If ExistBlock("MTCOLSE2")
			aColsPE:= ExecBlock("MTCOLSE2",.F.,.F.,{aColsSE2})
			If ValType(aColsPE) == "A"
				aColsSE2	 := aColsPE
			EndIf
		EndIf
	EndIf
EndIf

If oMultNat<>Nil
	oMultNat:lUpdate := nValor <> 0
	If !Empty(aColsSEV)
		oMultNat:aCols := aColsSEV
	EndIf
	oMultNat:Refresh()
EndIf
If oDescri <> Nil
	oDescri:Refresh()
EndIf
If oTxNeg <> Nil
	oTxNeg:Refresh()
EndIf

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeLOkSE2 ³Autor  ³ Eduardo Riera         ³ Data ³06.12.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da LinhaOk para a getdados dos titulos   ³±±
±±³          ³financeiros                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL: Indica se a linha da getdados eh valida                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina valida a getdados dos titulos financeiros        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeLOkSE2()

Local lRetorno  := .T.
Local nPValor   := aScan(aHeader,{|x| AllTrim(x[2])=="E2_VALOR"})
Local nPIRRF    := aScan(aHeader,{|x| AllTrim(x[2])=="E2_IRRF"})
Local nPISS     := aScan(aHeader,{|x| AllTrim(x[2])=="E2_ISS"})
Local nPINSS    := aScan(aHeader,{|x| AllTrim(x[2])=="E2_INSS"})
Local nPPIS     := aScan(aHeader,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS  := aScan(aHeader,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL    := aScan(aHeader,{|x| AllTrim(x[2])=="E2_CSLL"})
Local nPFETHAB  := aScan(aHeader,{|x| AllTrim(x[2])=="E2_FETHAB"})
Local nPFABOV  := aScan(aHeader,{|x| AllTrim(x[2])=="E2_FABOV"})
Local nPFACS	:= aScan(aHeader,{|x| AllTrim(x[2])=="E2_FACS"})

If Existblock("M103LSE2")
	lRetorno := Execblock("M103LSE2",.F.,.F.)
Endif

If nPIRRF*nPISS*nPINSS*nPPIS*nPCOFINS*nPCSLL*IIf(Empty(nPFETHAB),1,nPFETHAB)*IIf(Empty(nPFABOV),1,nPFABOV)*IIf(Empty(nPFACS),1,nPFACS) > 0
	If aCols[n][nPValor]<=aCols[n][nPIRRF]+aCols[n][nPISS]+aCols[n][nPINSS]+aCols[n][nPPIS]+aCols[n][nPCOFINS]+aCols[n][nPCSLL]+IIf(nPFETHAB>0,aCols[n][nPFETHAB],0) .And.;
		aCols[n][nPValor]+aCols[n][nPIRRF]+aCols[n][nPISS]+aCols[n][nPINSS]+aCols[n][nPPIS]+aCols[n][nPCOFINS]+aCols[n][nPCSLL]+IIf(nPFABOV>0,aCols[n][nPFABOV],0)+ ;
		IIf(nPFACS>0,aCols[n][nPFACS],0)!=0
		Help(" ",1,"A100VALDUP",,"IRRF/ISS/INSS/PIS/COFINS/CSLL"+IIf(nPFETHAB>0,"/FETHAB","")+IIf(nPFABOV>0,"/FABOV","")+IIf(nPFACS>0,"/FACS",""),3,0)
	    lRetorno := .F.
	EndIf
Else
If nPIRRF*nPISS*nPINSS > 0
	If aCols[n][nPValor]<=aCols[n][nPIRRF]+aCols[n][nPISS]+aCols[n][nPINSS] .And.;
	    aCols[n][nPValor]+aCols[n][nPIRRF]+aCols[n][nPISS]+aCols[n][nPINSS]!=0
		Help(" ",1,"A100VALDUP",,"IRRF/ISS/INSS",3,0)
		lRetorno := .F.
	EndIf
EndIf
EndIf
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeTOkSE2 ³Autor  ³ Eduardo Riera         ³ Data ³09.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da TudoOk para a getdados do contas a    ³±±
±±³          ³pagar                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1:Indica se a getdados eh valida                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina valida a getdados do contas a pagar              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeTOkSE2()

Local lRetorno := NfeTotFin(aHeader,aCols)

Return(lRetorno)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeLOkSEV ³Autor  ³ Eduardo Riera         ³ Data ³09.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da LinhaOk para a getdados das Multiplas ³±±
±±³          ³naturezas                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL: Indica se a linha da getdados eh valida                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina valida a getdados das multiplas naturezas        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeLOkSEV()

Local lRetorno   := .T.
Local nPosNat    := aScan(aHeader,{|x| AllTrim(x[2]) == "EV_NATUREZ"})
Local nPosVlr    := aScan(aHeader,{|x| AllTrim(x[2]) == "EV_PERC"})

If MaFisFound("NF") .And. MaFisRet(,"NF_BASEDUP")>0 .And. nPosNat > 0 .And. nPosVlr > 0 .And. ((len(aCols) > 1) .Or. (!Empty(aCols[1,nPosNat]) .Or. !Empty(aCols[1,nPosVlr])))
	lRetorno := MaCheckCols(aHeader,aCols,N)
EndIf

If nPosNat>0 .And. lRetorno
	lRetorno:=A103ValNat(aCols[N,nPosNat])
EndIf

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeTOkSEV ³Autor  ³ Eduardo Riera         ³ Data ³09.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da TudoOk para a getdados das Multiplas  ³±±
±±³          ³naturezas                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL: Indica se a getdados eh valida                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina valida a getdados das multiplas naturezas        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeTOkSEV(aHeadSev, aColsSev,lvalor)
Local nX       := 0
Local nUsadoSEV:= Len(aHeadSev)
Local nPPerc   := aScan(aHeadSev,{|x| AllTrim(x[2])=="EV_PERC"})
Local nPNat    := aScan(aHeadSev,{|x| AllTrim(x[2])=="EV_NATUREZ"})
Local nSoma    := 0
Local lRetorno := .T.

If (INCLUI .Or. ALTERA)
	If MaFisFound("NF") .And. MaFisRet(,"NF_BASEDUP")>0 .And. nPNat > 0 .And.;
	nPPerc > 0 .And. ((len(aColsSev) > 1) .Or. (!Empty(aColsSev[1,nPNat]) .Or. !Empty(aColsSev[1,nPPerc])))
		For nX:= 1 To len(aColsSev)
			lRetorno := MaCheckCols(aHeadSev,aColsSev,nX)
			If !lRetorno
				Exit
			EndIf
		Next nX
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se existem naturezas com lançamento sintético       |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nPNat>0 .And. lRetorno
		For nX:= 1 To len(aColsSev)
			lRetorno := A103ValNat(aColsSev[nX][nPNat])
			If !lRetorno
				Exit
			EndIf
		Next nX
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a soma dos percentuais eh 100%                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(cTipo$"DB") .And. lRetorno .And. ;
	    MaFisFound("NF") .And. MaFisRet(,"NF_BASEDUP")>0 .And. SuperGetMV("MV_MULNATP",.F.,.F.)
		For nX := 1 To Len(aColsSev)
			If !aColsSev[nX][nUsadoSEV+1]
				If aColsSev[nX][nPPerc]<>0
					nSoma += aColsSev[nX][nPPerc]
				Else
					If nPNat == 0 .Or. !Empty(aColsSev[nX][nPNat])
						aColsSev[nX][nUsadoSEV+1] := .T.
					EndIf
				EndIf
			EndIf
		Next nX
	 	If Empty( MaFisRet(,"NF_NATUREZA") ) .And. nSoma == 0 .And. SuperGetMV("MV_NFENAT",.F.,.F.)
			Help(" ",1,"A103NATURE")
			lRetorno := .F.
		EndIf
		If lRetorno .And. nSoma <> 0 .And. nSoma <> 100
			Help(" ",1,"A103TOKSEV",,STR0040+TransForm(nSoma,"@E 999.99%"),4,0)
			lRetorno := .F.
		EndIf
	EndIf
EndIf

lValor := lRetorno

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NFEVLDSEV³ Autor ³Alexandre Inacio Lemes ³ Data ³28/09/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Exibe o Help de rateio percentual de Multiplas Naturezas   ³±±
±±³          ³apos a funcao NfeTOkSEV tornar .F. a propriedade Cargo[2]  ³±±
±±³          ³do Objeto oFoco103 para impedir a finalizacao da Nfe quando³±±
±±³          ³a soma do percentual do SEV nao for = a 100%.              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeVldSEV(lRetorno,aHeader,aCols,aHeadSEV,aColsSEV)
Local aRetSEV := {}

If !lRetorno
	Help(" ",1,"A103TOKSEV")
EndIf

If ExistBlock("NFECTSEV")
	aRetSEV := ExecBlock('NFECTSEV', .F., .F., {aHeadSEV,aColsSEV})

	If valtype(aRetSEV) == "A"
		if len(aRetSEV) >= 1 .And. valtype(aRetSEV[1]) == "A"
			aHeaderSEV := aClone(aRetSEV[1])
		EndIf
		if len(aRetSEV) >= 2 .And. valtype(aRetSEV[2]) == "A"
			aColsSEV   := aClone(aRetSEV[2])
		EndIf
	EndIf
EndIf

If lRetorno .And. ExistBlock("NFEVLSEV")
	lRetorno := ExecBlock("NFEVLSEV",.F.,.F.,{aHeader,aCols,aHeadSEV,aColsSEV})
EndIf

Return lRetorno

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NFERATSEV³ Autor ³Alexandre Inacio Lemes ³ Data ³01/07/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeRatSEV(nPercSEV,nValSEV)

Local nPPerc   := aScan(aHeader,{|x| AllTrim(x[2])=="EV_PERC"})
Local nPVLperc := aScan(aHeader,{|x| AllTrim(x[2])=="EV_VALPERC"})
Local nValor   := 0
Local nValFun  := 0
Local nValFet  := 0
Local nIrrf	   := 0
Local nInss	   := 0
Local nIss	   := 0
Local nPis     := 0
Local nCofins  := 0
Local nCsll    := 0
Local nValRet  := 0
Local nX       := 0
Local nTotPerc := 0
Local nMultDec := GetNewPar( "MV_MULTDEC", 2 )
Local lISSNat  := .T.
Local cNatNF   := ""
Local lISSTes  := SuperGetMv("MV_ISSRETD",.F.,.F.)
Local cINSSAd  := "0"

If nPVlPerc > 0

	If MaFisFound("NF")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se deve existir o calculo do ISS pela natureza do titulo³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cNatNF := MaFisRet(,"NF_NATUREZA")
		dbSelectArea("SED")
		If SED->(dbSeek(xFilial("SED")+cNatNF))
			lISSNat := SED->ED_CALCISS <> "N" .Or. lISSTes
		Endif

		cINSSAd	:=	MaFisScan("NF_VALINA",.F.)

		nValor  := MaFisRet(,"NF_BASEDUP")
		nValFun := MaFisRet(,"NF_FUNRURAL")
		nValFet := IIf(MaFisRet(,"NF_RECFET")=="2",MaFisRet(,"NF_VALFET"),0)
		nValFab := IIf(MaFisRet(,"NF_RECFAB")=="2",MaFisRet(,"NF_VALFAB"),0)
		nValFac := IIf(MaFisRet(,"NF_RECFAC")=="2",MaFisRet(,"NF_VALFAC"),0)
		nIrrf	:= MaFisRet(,"NF_VALIRR")
		nInss   := MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0)
		nIss	:= IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0)
		nPis    := MaFisRet(,"NF_VALPIS")
		nCOFINS := MaFisRet(,"NF_VALCOF")
		nCSLL   := MaFisRet(,"NF_VALCSL")
	EndIf

    nValor := nValor-nValFun-nValFet-nIrrf-nInss-nIss-nPis-nCOFINS-nCSLL-nValFab-nValFac

	If nPercSEV > 0
		aCols[n][nPVlPerc] := ( nValor * nPercSEV ) / 100
		aCols[n][nPPerc]   := ( aCols[n][nPVlPerc] / nValor ) * 100
		nValRet := aCols[n][nPPerc]
	Else
		aCols[n][nPVlPerc] := 0
	EndIf

	If nValSEV > 0
		aCols[n][nPPerc]   := Round(( nValSEV / nValor ) * 100, nMultDec )
		aCols[n][nPVlPerc] := ( nValor * aCols[n][nPPerc] ) / 100
		nValRet := aCols[n][nPVlPerc]
	Else
		aCols[n][nPPerc] := 0
		nTotPerc := nPercSEV
	EndIf
EndIf

Return nValRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeCond2  ³ Rev   ³ Julio C.Guerato       ³ Data ³06.05.2009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Condicao de Pagamento                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina Validar se a Condição de Pagamento é valida      ³±±
±±³	         ³porém somente retorna .T. ou .F..							   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfeCond2(cCondicao)

Local aArea    := GetArea()
Local lRetorno := Empty(cCondicao)

dbSelectArea("SE4")
dbSetOrder(1)
If !Empty(cCondicao)
	MsSeek(xFilial("SE4")+cCondicao)
	if Eof()
		lRetorno := .F.
	Else
	    lRetorno := IIF(SE4->E4_TIPO == "9",.F.,.T.)
	EndIf
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeCond   ³ Rev   ³ Edson Maricate        ³ Data ³07.08.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de tratamento do folder de totais                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Condicao de Pagamento                                 ³±±
±±³          ³ExpO2: Objeto da descricao de pagamento                      ³±±
±±³          ³ExpC3: Descricao da condicao de pagamento                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo exibir/controlar o folder finan³±±
±±³          ³ceiro.                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfeCond(cCondicao,oDescri,cDescricao)

Local aArea    := GetArea()
Local lRetorno := Empty(cCondicao)

DEFAULT cDescricao := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida a condicao de pagamento                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SE4")
dbSetOrder(1)
If ( !Empty(cCondicao) .And. ExistCpo("SE4",cCondicao) )
	MsSeek(xFilial("SE4")+cCondicao)
	If SE4->E4_TIPO == "9"
		Help("  ",1,"A100COND")
		lRetorno := .F.
	Else
		cDescricao	:= SE4->E4_DESCRI
		lRetorno := .T.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Efetua o refresh no objeto da descricao da condicao de pagto ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If oDescri <> Nil
	oDescri:Refresh()
EndIf
RestArea(aArea)
Return(lRetorno)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldTot ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao do folder de totais                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela que sera disponibilizado os Get      ³±±
±±³          ³ExpA2: Array com os gets de totais                           ³±±
±±³          ³ExpA3: Array com as posicoes dos gets de totais              ³±±
±±³          ³Expb4: Codeblock para atualizaco dos dados do Folder         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder de totais   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldTot(oDlg,aGets,aPosGet,bRefresh)

Local aObjetos := Array(Len(aGets))

@ 06,aPosGet[1] SAY RetTitle("F1_VALMERC") Of oDlg PIXEL SIZE 55 ,9 //"Valor da Mercadoria"
@ 05,aPosGet[2] MSGET aObjetos[VALMERC] VAR aGets[VALMERC] PICTURE PesqPict('SD1','D1_TOTAL') OF oDlg PIXEL When .F. SIZE 80,09
@ 06,aPosGet[3] SAY RetTitle("F1_DESCONT") Of oDlg PIXEL SIZE 49 ,9 //"Descontos"
@ 05,aPosGet[4] MSGET aObjetos[VALDESC] VAR aGets[VALDESC]  PICTURE PesqPict('SD1','D1_VALDESC') OF oDlg PIXEL When .F. SIZE 80,09
If Len(aGets)>3
	@ 20,aPosGet[1] SAY RetTitle("F1_FRETE") Of oDlg PIXEL SIZE 45 ,9 //"Valor do Frete"
	@ 19,aPosGet[2] MSGET aObjetos[FRETE] VAR aGets[FRETE]  PICTURE PesqPict('SD1','D1_TOTAL') OF oDlg PIXEL When .F. SIZE 80,09
	@ 20,aPosGet[3] SAY RetTitle("F1_SEGURO") Of oDlg PIXEL SIZE 50 ,9 //"Vlr. do Seguro"
	@ 19,aPosGet[4] MSGET aObjetos[SEGURO] VAR aGets[SEGURO]  PICTURE PesqPict('SD1','D1_TOTAL') OF oDlg PIXEL When .F. SIZE 80,09
	@ 34,aPosGet[3] SAY RetTitle("F1_DESPESA") Of oDlg PIXEL SIZE 50 ,9 //"Despesas"
	@ 33,aPosGet[4] MSGET aObjetos[VALDESP] VAR aGets[VALDESP]  PICTURE PesqPict('SD1','D1_TOTAL') OF oDlg PIXEL When .F.  SIZE 80,09
	If GetNewPar("MV_VNAGREG",.F.)
		If Len(aGets) < 9
			Aadd(aGets,0)
			Aadd(aObjetos,0)
		Endif
		@ 51,aPosGet[1] SAY STR0062 Of oDlg PIXEL SIZE 58 ,9 //"Valor não Agregado"
		@ 49,aPosGet[2] MSGET aObjetos[VNAGREG] VAR aGets[VNAGREG]  PICTURE PesqPict('SF1','F1_VNAGREG') OF oDlg PIXEL When .F. SIZE 80,09
	Endif
EndIf
@ 51,aPosGet[3] SAY RetTitle("F1_VALBRUT") Of oDlg PIXEL SIZE 58 ,9 //"Total do Doc."
@ 49,aPosGet[4] MSGET aObjetos[TOTPED] VAR aGets[TOTPED]  PICTURE PesqPict('SF1','F1_VALBRUT') OF oDlg PIXEL When .F. SIZE 80,09

@ 43,3 TO 46,aPosGet[5] LABEL '' OF oDlg PIXEL

bRefresh := {|| NfeRFldTot(aGets,aObjetos)}

Return(.T.)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRFldTot³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao do folder de totais                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: Array com as variaveis dos get de totais              ³±±
±±³          ³ExpA2: Array com os objetos dos get de totais                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder de totais   ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeRFldTot(aGets,aObjetos)

Local nVlrAnterior := 0

nVlrAnterior := aGets[VALMERC]
aGets[VALMERC] := IIf(MaFisFound(),MaFisRet(,"NF_VALMERC"),aGets[VALMERC])
If nVlrAnterior <> aGets[VALMERC] .Or. !MaFisFound()
	aObjetos[VALMERC]:Refresh()
EndIf
nVlrAnterior := aGets[VALDESC]
aGets[VALDESC] := IIf(MaFisFound(),MaFisRet(,"NF_DESCONTO"),aGets[VALDESC])
If nVlrAnterior <> aGets[VALDESC] .Or. !MaFisFound()
	aObjetos[VALDESC]:Refresh()
EndIf
nVlrAnterior := aGets[TOTPED ]
aGets[TOTPED ] := IIF(MaFisFound(),MaFisRet(,"NF_TOTAL"),aGets[TOTPED ])
If nVlrAnterior <> aGets[TOTPED ] .Or. !MaFisFound()
	aObjetos[TOTPED ]:Refresh()
EndIf
If Len(aGets)>3
	nVlrAnterior := aGets[FRETE  ]
	aGets[FRETE  ] := IIF(MaFisFound(),MaFisRet(,"NF_FRETE"),aGets[FRETE  ])
	If nVlrAnterior <> aGets[FRETE  ] .Or. !MaFisFound()
		aObjetos[FRETE  ]:Refresh()
	EndIf
	nVlrAnterior := aGets[SEGURO ]
	aGets[SEGURO ] := IIF(MaFisFound(),MaFisRet(,"NF_SEGURO"),aGets[SEGURO ])
	If nVlrAnterior <> aGets[SEGURO ] .Or. !MaFisFound()
		aObjetos[SEGURO ]:Refresh()
	EndIf
	nVlrAnterior := aGets[VALDESP]
	aGets[VALDESP] := IIF(MaFisFound(),MaFisRet(,"NF_DESPESA"),aGets[VALDESP])
	If nVlrAnterior <> aGets[VALDESP] .Or. !MaFisFound()
		aObjetos[VALDESP]:Refresh()
	EndIf
	If GetNewPar("MV_VNAGREG",.F.)
		nVlrAnterior := aGets[VNAGREG ]
		aGets[VNAGREG ] := IIF(MaFisFound(),MaFisRet(,"NF_VNAGREG"),aGets[VNAGREG ])
		If nVlrAnterior <> aGets[VNAGREG ] .Or. !MaFisFound()
			aObjetos[VNAGREG ]:Refresh()
		EndIf
	Endif
EndIf
Return .T.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldFor ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao do folder do fornecedor                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela que sera disponibilizado os Get      ³±±
±±³          ³ExpA2: Array com os gets de totais                           ³±±
±±³          ³ExpA3: Array com as posicoes dos gets de totais              ³±±
±±³          ³Expb4: Codeblock para atualizaco dos dados do Folder         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder de fornece- ³±±
±±³          ³res                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldFor(oDlg,aGets,aPosGet,bRefresh)

Local aObjetos := Array(Len(aGets))
Local nObj := 1

@ 06,aPosGet[1,1] SAY RetTitle("A2_NOME") Of oDlg PIXEL SIZE 37,09
@ 05,aPosGet[1,2] MSGET aObjetos[nObj] VAR aGets[1] ;
	PICTURE PesqPict('SA2','A2_NOME');
	When .F. ;
	OF oDlg PIXEL SIZE 159,09
nObj++
@ 06,aPosGet[1,3] SAY RetTitle("A2_TEL") Of oDlg PIXEL SIZE 23,09
@ 05,aPosGet[1,4]+5 MSGET aObjetos[nObj] VAR aGets[2] ;
	When .F. ;
	OF oDlg PIXEL SIZE 74,09
nObj++
@ 43,aPosGet[2,1] SAY RetTitle("A2_PRICOM") Of oDlg PIXEL SIZE 32,09
@ 42,aPosGet[2,2] MSGET aObjetos[3] VAR aGets[3] ;
	PICTURE PesqPict('SA2','A2_PRICOM') ;
	When .F. ;
	OF oDlg PIXEL SIZE 40,09
nObj++
@ 43,aPosGet[2,3] SAY RetTitle("A2_ULTCOM") Of oDlg PIXEL SIZE 36,09
@ 42,aPosGet[2,4] MSGET aObjetos[nObj] VAR aGets[4] ;
	PICTURE PesqPict('SA2','A2_ULTCOM');
	WHEN .F. OF oDlg PIXEL SIZE 40,09
nObj++
@ 43,aPosGet[2,5]-5 SAY RetTitle("A2_CGC") Of oDlg PIXEL SIZE 21,09
@ 42,aPosGet[2,6]+5 MSGET aObjetos[nObj] VAR aGets[7] ;
	PICTURE PesqPict('SA2','A2_CGC');
	WHEN .F. OF oDlg PIXEL SIZE 76,09
nObj++
If Len(aGets)>=8
	@ 43,aPosGet[2,7] SAY RetTitle("A2_INSCR") Of oDlg PIXEL SIZE 30,09
	@ 42,aPosGet[2,8] MSGET aObjetos[6] VAR aGets[8] ;
		PICTURE PesqPict('SA2','A2_INSCR');
		WHEN .F. OF oDlg PIXEL SIZE 60,09
	nObj++
Endif
@ 24,aPosGet[3,1] SAY RetTitle("A2_END") Of oDlg PIXEL SIZE 49,09
@ 23,aPosGet[3,2] MSGET aObjetos[nObj] VAR aGets[5];
	PICTURE PesqPict('SA2','A2_END');
	WHEN .F. OF oDlg PIXEL SIZE 205,9
nObj++
@ 24,aPosGet[3,3] SAY RetTitle("A2_EST") Of oDlg PIXEL SIZE 32,09
@ 23,aPosGet[3,4] MSGET aObjetos[nObj] VAR aGets[6] ;
	PICTURE PesqPict('SA2','A2_EST');
	WHEN .F. OF oDlg PIXEL SIZE 21,09
@ If(Len(aGets)>=8,5,42),aPosGet[3,5] BUTTON STR0009 SIZE 30 ,11 FONT oDlg:oFont ; //"Mais Inf."
	ACTION A103ToFC030()  OF oDlg PIXEL
bRefresh := {|| NfeRFldFor(aGets,aObjetos)}

Return(.T.)
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRFldFor³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao do folder do fornecedor                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: Array com as variaveis dos get de totais              ³±±
±±³          ³ExpA2: Array com os objetos dos get de totais                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder de fornece- ³±±
±±³          ³dor                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeRFldFor(aGets,aObjetos)

Local aArea := GetArea()
Local nX    := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o array que contem os dados do Fornecedor      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cTipo $ "DB"
	If aGets <> Nil
		dbSelectArea("SA1")
		dbSetOrder(1)
		If MsSeek(xFilial("SA1")+cA100For+cLoja)
			aGets[1] := SA1->A1_NOME					// Nome
			aGets[2] := IIF(!Empty(SA1->A1_DDI),"( "+TransForm(SA1->A1_DDI,PesqPict("SA1","A1_DDI"))+") ","");
			+TransForm(alltrim(SA1->A1_DDD),PesqPict("SA1","A1_DDD"))+" "+TransForm(SA1->A1_TEL,PesqPict("SA1","A1_TEL")) // Telefone
			aGets[3] := SA1->A1_PRICOM	    			//Primeira Compra
			aGets[4] := SA1->A1_ULTCOM      			//Ultima Compra
			aGets[5] := SA1->A1_END+" - "+SA1->A1_MUN	//Endereco
			aGets[6] := SA1->A1_EST         			//Estado
			aGets[7] := SA1->A1_CGC         			//Cgc
			If Len(aGets)>=8
				aGets[8] := SA1->A1_INSCR         			//Inscricao estadual
			Endif
			For nX := 1 To Len(aObjetos)
				If aObjetos[nX]<>Nil
					aObjetos[nX]:Refresh()
				EndIf
			Next nX
		EndIf
	EndIf
Else
	If aGets <> Nil
		dbSelectArea("SA2")
		dbSetOrder(1)
		If MsSeek(xFilial("SA2")+cA100For+cLoja)

			aGets[1] := SA2->A2_NOME					// Nome
			aGets[2] := IIF(!Empty(SA2->A2_DDI),"( "+TransForm(SA2->A2_DDI,PesqPict("SA2","A2_DDI"))+") ","");
			+TransForm(alltrim(SA2->A2_DDD),PesqPict("SA2","A2_DDD"))+" "+TransForm(SA2->A2_TEL,PesqPict("SA2","A2_TEL")) // Telefone
			aGets[3] := SA2->A2_PRICOM					//Primeira Compra
			aGets[4] := SA2->A2_ULTCOM      			//Ultima Compra
			aGets[5] := SA2->A2_END+" - "+SA2->A2_MUN	//Endereco
			aGets[6] := SA2->A2_EST         			//Estado
			aGets[7] := SA2->A2_CGC         			//Cgc
			If Len(aGets)>=8
				aGets[8] := SA2->A2_INSCR         			//Inscricao estadual
			Endif
			For nX := 1 To Len(aObjetos)
				If aObjetos[nX]<>Nil
					aObjetos[nX]:Refresh()
				EndIf
			Next nX
		EndIf
	EndIf
EndIf
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldDsp ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao do folder de Despesas acessorias       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela que sera disponibilizado os Get      ³±±
±±³          ³ExpA2: Array com os gets das despesas acessorias             ³±±
±±³          ³ExpA3: Array com as posicoes dos gets das despesas acessorias³±±
±±³          ³Expb4: Codeblock para atualizaco dos dados do Folder         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder das despesas³±±
±±³          ³acessorias                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldDsp(oDlg,aGets,aPosGet,bRefresh)

Local aObjetos := Array(Len(aGets))

@ 09,aPosGet[1,1] SAY RetTitle("F1_DESCONT") Of oDlg PIXEL SIZE 48,09
@ 08,aPosGet[1,2] MSGET aObjetos[VALDESC] VAR aGets[VALDESC] ;
	PICTURE PesqPict("SD1","D1_VALDESC") ;
	OF oDlg PIXEL ;
	WHEN !l103Visual .And. A103LCF("F1_DESCONT") .And. !cTipo$"PI" ;
	VALID CheckSX3("F1_DESCONT",aGets[VALDESC]) .And. aGets[VALDESC]>=0 .And. NfeVldRef("NF_DESCONTO",aGets[VALDESC]) SIZE 80,09 HASBUTTON
@ 09,aPosGet[1,3] SAY RetTitle("F1_FRETE") Of oDlg PIXEL SIZE 35,09
@ 08,aPosGet[1,4] MSGET aObjetos[FRETE] VAR aGets[FRETE] ;
	PICTURE PesqPict("SF1","F1_FRETE") ;
	OF oDlg PIXEL ;
	WHEN !l103Visual .and. A103LCF("F1_FRETE");
	VALID CheckSX3("F1_FRETE",aGets[FRETE]) .And. aGets[FRETE]>=0 .And. NfeVldRef("NF_FRETE",aGets[FRETE]) SIZE 80,09 HASBUTTON
@ 26,aPosGet[1,1] SAY RetTitle("F1_DESPESA") Of oDlg PIXEL SIZE 42,09
@ 25,aPosGet[1,2] MSGET aObjetos[VALDESP] VAR aGets[VALDESP] ;
	PICTURE PesqPict("SF1","F1_DESPESA") ;
	OF oDlg PIXEL ;
	WHEN !l103Visual .And. A103LCF("F1_DESPESA");
	VALID CheckSX3("F1_DESPESA",aGets[VALDESP]) .And. aGets[VALDESP]>=0 .And. NfeVldRef("NF_DESPESA",aGets[VALDESP]) SIZE 80,09 HASBUTTON
@ 26,aPosGet[1,3] SAY RetTitle("F1_SEGURO") Of oDlg PIXEL SIZE 35,09
@ 25,aPosGet[1,4] MSGET aObjetos[SEGURO] VAR aGets[SEGURO] ;
	PICTURE PesqPict("SF1","F1_SEGURO") ;
	OF oDlg PIXEL ;
	WHEN !l103Visual .And. A103LCF("F1_SEGURO");
	VALID CheckSX3("F1_SEGURO",aGets[SEGURO]) .And. aGets[SEGURO]>=0 .And. NfeVldRef("NF_SEGURO",aGets[SEGURO]) SIZE 80,9	HASBUTTON
@ 38,11 TO 40 ,aPosGet[2,1] LABEL "" OF oDlg PIXEL
@ 48,aPosGet[2,2] SAY STR0010 Of oDlg PIXEL SIZE 60,09 //"Total ( Frete+Despesas)"
@ 47,aPosGet[2,3] MSGET aObjetos[TOTF3] VAR aGets[TOTF3] ;
	PICTURE PesqPict("SF1","F1_VALBRUT") ;
	OF oDlg PIXEL ;
	WHEN .F. SIZE 80,09 HASBUTTON

bRefresh := {|| NfeRFldDsp(aGets,aObjetos)}

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeVldRef ³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao das referencias fiscais dos Gets fixos ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Referencias fiscais dos impostos de cabecalho         ³±±
±±³          ³ExpA2: Valor da referencia                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder das despesas³±±
±±³          ³acessorias                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeVldRef(cReferencia,xValor)

Local aArea	   := GetArea()
Local nPosPc   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_PEDIDO"})
Local nPosItPc := aScan(aHeader,{|x| AllTrim(x[2])=="D1_ITEMPC"})
Local nPosTes  := aScan(aHeader,{|x| AllTrim(x[2])=="D1_TES"})
Local nCnt     := 0
Local lPedidos := .F.
Local lRetorno := .T.
Local lRetPE   := .T.
Local lPedPre  := .F.
Local cUfOri   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o Fornecedor da Pre-Nota foi alterado quando tiver vinculo com Pedidos |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cReferencia $ "NF_LOJA/NF_CODCLIFOR"
   	If nPosTes=0 .And. nPosPc>0 .And. nPosItPc>0 .And. Len(aCols)>0
        DbSelectArea("SC7")
   	    DbSetOrder(1)
		For nCnt := 1 to Len(aCols)
		    If Len(Trim(aCols[nCnt][nPosPc]))>0 .And. Len(Trim(aCols[nCnt][nPosItPc]))>0
	 	  	    MsSeek(xFilial("SC7")+aCols[nCnt][nPosPc]+aCols[nCnt][nPosItPc])
		   	    If C7_NUM==aCols[nCnt][nPosPc] .And. C7_ITEM==aCols[nCnt][nPosItPc]
		    	    If C7_FORNECE<>CA100FOR .Or. C7_LOJA<>CLOJA
		    	       	lPedPre:=.T.
		    	       	exit
		    	     EndIf
		    	EndIf
		    EndIf
		Next nCnt
	EndIf
EndIf

If (MaFisFound("NF") .And. !(MaFisRet(,cReferencia)==xValor)) .Or. lPedPre
	If cReferencia $ "NF_LOJA/NF_CODCLIFOR" .And. nPosPc > 0 .And. nPosItPC > 0;
			.And. Len(aCols) > 0 .And. ( lConsLoja .Or. cReferencia == "NF_CODCLIFOR")
		For nCnt := 1 to Len(aCols)
			If !ExistBlock("MT103VCN")
				If !lPedidos .And. !Empty(aCols[nCnt][nPosPc])
					If Aviso(OemToAnsi(STR0018),OemToAnsi(STR0027),{OemToAnsi(STR0016),OemToAnsi(STR0017)}) == 2  //"Existem pedidos relacionados a este fornecedor! Estas informações serão apagadas. Deseja Continuar?""###"Continua"###"Abandona"
						lRetorno := .F.
						Exit
					Else
						lPedidos := .T.
					EndIf
				EndIf
				If lPedidos
					aCols[nCnt][nPosPc]   := Space(Len(aCols[nCnt][nPosPc]))
					aCols[nCnt][nPosItPc] := Space(Len(aCols[nCnt][nPosItPc]))
				EndIf
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de Entrada MT103VCN - Valida se ira manter o acols com  |
				//| os pedidos preenchidos se o Fornecedor / Loja forem alterados |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				lPedidos := If(ValType(lRetPE:=ExecBlock("MT103VCN",.F.,.F.,{aHeader,aCols,cReferencia,xValor}))=='L',lRetPE,.T.)
			EndIf
		Next
	EndIf

	If lRetorno .And. !lPedPre
		If cReferencia == "NF_NATUREZA"
			cUfOri   := MaFisRet(,"NF_UFORIGEM")
		Endif

		MaFisAlt(cReferencia,xValor)

		If cReferencia == "NF_NATUREZA"
			MaFisAlt("NF_UFORIGEM",cUfOri)
		Endif

		MaFisToCols(aHeader,aCols,,"MT100")
	EndIf
	Eval(bGDRefresh)
	Eval(bRefresh)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada MT103DSP                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. ExistBlock('MT103DSP')
	lRetorno := If(ValType(lRetPE:=ExecBlock('MT103DSP',.F.,.F.,{aHeader,aCols,cReferencia,xValor}))=='L',lRetPE,.T.)
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRFldDsp³Autor  ³ Eduardo Riera         ³ Data ³13.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao do folder das despesas acessorias      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: Array com as variaveis dos get de totais              ³±±
±±³          ³ExpA2: Array com os objetos dos get de totais                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o folder das despesas³±±
±±³          ³acessorias                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeRFldDsp(aGets,aObjetos)

Local nVlrAnterior := 0
Local nX := 1

nVlrAnterior := aGets[VALDESC]
If MaFisFound("NF")
	aGets[VALDESC] := MaFisRet(,"NF_DESCONTO")
EndIf
If nVlrAnterior <> aGets[VALDESC]
	aObjetos[VALDESC]:Refresh()
EndIf
nVlrAnterior := aGets[FRETE]
If MaFisFound("NF")
	aGets[FRETE] := MaFisRet(,"NF_FRETE")
EndIf
If nVlrAnterior <> aGets[FRETE]
	aObjetos[FRETE]:Refresh()
EndIf
nVlrAnterior := aGets[VALDESP]
If MaFisFound("NF")
	aGets[VALDESP] := MaFisRet(,"NF_DESPESA")
EndIf
If nVlrAnterior <> aGets[VALDESP]
	aObjetos[VALDESP]:Refresh()
EndIf
nVlrAnterior := aGets[SEGURO]
If MaFisFound("NF")
	aGets[SEGURO] := MaFisRet(,"NF_SEGURO")
EndIf
If nVlrAnterior <> aGets[SEGURO]
	aObjetos[SEGURO]:Refresh()
EndIf
nVlrAnterior := aGets[TOTF3  ]
aGets[TOTF3  ] := aGets[FRETE]+aGets[SEGURO]+aGets[VALDESP]
If nVlrAnterior <> aGets[TOTF3  ]
	aObjetos[TOTF3  ]:Refresh()
EndIf
For nX := 1 To Len(aObjetos)
	If aObjetos[nX]<>Nil
		aObjetos[nX]:Refresh()
	EndIf
Next nX

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldChg ³Autor  ³ Eduardo Riera         ³ Data ³11.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de controle da troca de folder                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Folder de destino                                     ³±±
±±³          ³ExpN2: Folder atual                                          ³±±
±±³          ³ExpO3: Objeto do Folder                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo exibir/controlar os folders do ³±±
±±³          ³rodape do documento de entrada                               ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldChg(nFldDst,nFldAtu,oFolder,aCodeBlock)

DEFAULT nFldDst := IIf(oFolder<>Nil,oFolder:nOption,1)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza os objetos do folder de destino                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(aCodeBlock) .And. nFldDst<=Len(aCodeBlock) .And. !Empty(aCodeBlock[nFldDst])
	Eval(aCodeBlock[nFldDst])
EndIf
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeDelItem³ Autor ³ Edson Maricate        ³ Data ³04.03.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina valida a delecao de um item do documento de entra³±±
±±³          ³da                                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a delecao do item do   ³±±
±±³          ³documento de entrada informado a funcao fiscal               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeDelItem()

STATIC __lExeDel := .F.

Local cIdentB6  := ""
Local nPIdentB6 := GDFieldPos( "D1_IDENTB6")
Local nI        := 0
Local nPosCalc  := 0
Local nPosIt	:= 0
Local nPosItD1	:= aScan(aHeader,{|aX| aX[2]==PadR("D1_ITEM",Len(SX3->X3_CAMPO))})

__lExeDel := !__lExeDel

If !MaFisFound("IT",n)
	MaFisAdd("","",0,0,0,CriaVar("D1_NFORI"),CriaVar("D1_SERIORI"),,0,0,0,0,0)
EndIf
MaFisDel(n,aCols[n][Len(aCols[n])])

If __lExeDel .And. !GDDeleted()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Libera a reserva do identificador de poder de terceiros  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If !Empty( nPIdentB6 )
		If !Empty( cIdentB6 := aCols[ n, nPIdentB6 ] )
			Leave1Code( "SD1_D1_IDENTB6" + cIdentB6 )
		EndIf
    EndIf
EndIf

Eval(bRefresh)

If Type("oLancApICMS")<>"U" .And. oLancApICMS<>Nil .And. nPosItD1>0
	nPosCalc:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_CALPRO"})
	nPosIt	:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_NUMITE"})
	For nI := 1 To Len(oLancApICMS:aCols)
		If aCols[n,nPosItD1]==oLancApICMS:aCols[nI,nPosIt]
			oLancApICMS:aCols[nI,Len(oLancApICMS:aCols[nI])]	:=	aCols[n,Len(aCols[n])]
		EndIf
	Next nI
	oLancApICMS:Refresh()
EndIf

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeEmissao³ Autor ³ Edson Maricate        ³ Data ³04.03.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina valida a data de emissao do documento de entrada ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpD1: Data de Emissao                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a data eh valida                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a data de emissao do   ³±±
±±³          ³documento de entrada.                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeEmissao(dEmissao)
Local lRet	:= .T.

Static dMudaEmi
Default dMudaEmi := cToD("")

If !Empty(dEmissao) .And. dEmissao > dDataBase
	lRet := .F.
	Help("  ",1,"A103DATAM")
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza folder financeiro quando alterar a data de emissao do documento fiscal³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(dEmissao) .And. dEmissao <> dMudaEmi
		dMudaEmi := dEmissao
		Eval(bRefresh,6)
	Endif
Endif
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³SetVar113 ³ Autor ³ TOTVS                 ³ Data ³07.07.2011 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina seta um novo valor a variavel dMudaEmi           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: conteudo para a variavel                              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
function SetVar113(cCont)
  dMudaEmi:=cCont
Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeNextDoc³ Autor ³ Edson Maricate        ³ Data ³04.03.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina controla a numeracao do documento de entrada qdo ³±±
±±³          ³o formulario for proprio                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpD1: Data de Emissao                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a data eh valida                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo controlar/atualizar a numeracao³±±
±±³          ³do documento de entrada quando o formulario for proprio.     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeNextDoc(cNFiscal,cNfSerie,lAtiva,cNumNfGFE)

Local aArea	   := GetArea()
Local aAreaSF1 := SF1->(GetArea())
Local lRetorno := .T.
Local nItensNf := 0
Local cTipoNf  := SuperGetMv("MV_TPNRNFS")
Local cNum103  := ""
Local cMT103SRI:= ""
Local lUsaNewKey  := TamSX3("F1_SERIE")[1] == 14 // Verifica se o novo formato de gravacao do Id nos campos _SERIE esta em uso
Local cSerieId    := IIf( lUsaNewKey , SerieNfId("SF1",4,"F1_SERIE",dDEmissao,cEspecie,cNfSerie) , cNfSerie )

If cFormul == "S" .And. lAtiva
	Private cNumero:= ""
	Private cSerie := ""
	lRetorno:= Sx5NumNota(@cSerie,cTipoNf,,,,@cSerieId,dDEmissao ) // O parametro cSerieId deve ser passado para funcao Sx5NumNota afim de tratar a existencia ou nao do mesmo numero na funcao VldSx5Num do MATXFUNA.PRX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Validacao da NF informada pelo usuario                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. cTipoNF <> "3"
		SF1->(dbSetOrder(1))
		If SF1->(MsSeek(xFilial("SF1")+PADR(cNumero,TamSx3("F1_DOC")[1])+SerieNfId("SF1",4,"F1_SERIE",dDEmissao,cEspecie,cSerie)+cA100For+cLoja,.F.))
			Help(" ",1,"EXISTNF")
			lRetorno := .F.
			cNumero:= ""
			cSerie := ""
		EndIf
	EndIf
	If lRetorno
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o numero de maximo de itens da serie.               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aEval(aCols,{|x| nItensNf += IIF(x[Len(x)],0,1)})
		If nItensNf > 0 	.And. nItensNf > a460NumIt(cSerie,.T.)
			Help(" ",1,"A100NITENS")
			lRetorno := .F.
		Else
			If cTipoNf <> "3"

				cSerieId := IIf( lUsaNewKey , SerieNfId("SF1",4,"F1_SERIE",dDEmissao,cEspecie,cSerie) , cSerie )

				// Se numeracao for SXE/SXF e usuario alterou numero, respeita numero do usuarop
				If cTipoNf <> "2" .OR. !lMudouNum
					cNumero := NxtSX5Nota(cSerie, NIL, cTipoNf,,,, cSerieId)// O parametro cSerieId deve ser passado para funcao NxtSx5Nota afim de tratar a existencia ou nao do mesmo numero na funcao VldSx5Num do MATXFUNA.PRX
				EndIf
			Else
				If !lMudouNum	// Verifica se usuario alterou numero da nota fiscal
					cNumNfGFE := cNumero
					cNumero := Space(TamSx3("F1_DOC")[1])
				EndIf
			EndIf
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada para permitir alterar o numero da nota      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("M103NUM",.F.,.F.)
			cNum103 := ExecBlock("M103NUM",.F.,.F.,{cNumero})
			If Valtype( cNum103 ) == "C"
				cNumero := cNum103
			EndIf
		EndIf
	EndIf

	If lRetorno
	   cNFiscal:=cNumero
	   cNFSerie:=cSerie
    Else
	   cNFiscal:= CriaVar("F1_DOC",.F.)
	   cNFSerie:= SerieNfId("SF1",5,"F1_SERIE")
    EndIf
ElseIf cFormul == "N" .And. lAtiva
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o preenchimento dos campos.        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(ca100For) .Or. Empty(dDEmissao) .Or. Empty(cTipo) .Or. (Empty(cNFiscal).And.cFormul<>"S") .Or.(Empty(cSerie).And.X3Obrigat("F1_SERIE"))
		Help(" ",1,"A100FALTA")
		lRetorno := .F.
	EndIf

	SF1->(dbSetOrder(1))
	If SF1->(MsSeek(xFilial("SF1")+cNFiscal+SerieNfId("SF1",4,"F1_SERIE",dDEmissao,cEspecie,cSerie)+cA100For+cLoja,.F.))
		Help(" ",1,"EXISTNF")
		lRetorno := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para manipular o cNFSerie     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MT103SRI")
	cMT103SRI := ExecBlock("MT103SRI",.F.,.F.,{cNFiscal,cNFSerie})
  	If ValType(cMT103SRI) == "C"
		cNFSerie := cMT103SRI
	EndIf
EndIf

RestArea(aAreaSF1)
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103IniCpo³Autor  ³ Eduardo Riera         ³ Data ³12.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de atualizacao dos dados referentes ao codigo de produ³±±
±±³          ³to.                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre verdadeiro                                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar as informacoes do    ³±±
±±³          ³item do documento de entrada referente ao produto            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103IniCpo()

Local aArea			:= GetArea()
Local aTriggerCpo	:= {}
Local nPosCod 		:= aScan(aHeader,{|x| Trim(x[2])=="D1_COD"} )
Local nPosUM		:= aScan(aHeader,{|x| Trim(x[2])=="D1_UM"} )
Local nPosSegUM		:= aScan(aHeader,{|x| Trim(x[2])=="D1_SEGUM"} )
Local nPosCC		:= aScan(aHeader,{|x| Trim(x[2])=="D1_CC"} )
Local nPosConta 	:= aScan(aHeader,{|x| Trim(x[2])=="D1_CONTA"} )
Local nPosItCt  	:= aScan(aHeader,{|x| Trim(x[2])=="D1_ITEMCTA"} )
Local nPosClVl  	:= aScan(aHeader,{|x| Trim(x[2])=="D1_CLVL"} )
Local nPosDtValid	:= aScan(aHeader,{|x| Trim(x[2])=="D1_DTVALID"} )
Local nPosPrc		:= aScan(aHeader,{|x| Trim(x[2])=="D1_VUNIT"} )
Local nPosTotal		:= aScan(aHeader,{|x| Trim(x[2])=="D1_TOTAL"} )
Local nPosLocal		:= aScan(aHeader,{|x| Trim(x[2])=="D1_LOCAL"} )
Local nPosQuant		:= aScan(aHeader,{|x| Trim(x[2])=="D1_QUANT"} )
Local nPosQtSegum	:= aScan(aHeader,{|x| Trim(x[2])=="D1_QTSEGUM"} )
Local nPosTes		:= aScan(aHeader,{|x| Trim(x[2])=="D1_TES"} )
Local nPosPedido	:= aScan(aHeader,{|x| Trim(x[2])=="D1_PEDIDO"} )
Local nPosItemPC	:= aScan(aHeader,{|x| Trim(x[2])=="D1_ITEMPC"} )
Local nPosLoteCtl	:= aScan(aHeader,{|x| Trim(x[2])=="D1_LOTECTL"})
Local nPosChassi 	:= aScan(aHeader,{|x| Trim(x[2])=="D1_CHASSI"})
Local nPosTesAut	:= Nil
Local cReadVar   	:= ReadVar()
Local cProduto   	:= ""
Local uRet       	:= Nil
Local lDtValid   	:= .T.
Local lMT103CPO	:= ExistBlock("MT103CPO")
Local lTesAuto	:= .F.

If (Type("l103Auto") <> "U" .And. l103Auto)
	nPosTesAut := IIf(Type("aAutoItens")=="U",0,If(Empty(aAutoItens),0,aScan(aAutoItens[n],{|x|Trim(x[1])== "D1_TES" })))
EndIf

If lMT103CPO
	If nPosConta > 0
		AADD(aTriggerCpo,"D1_CONTA")
	EndIf
	aTriggerCpo:= ExecBlock("MT103CPO",.F.,.F.,{aTriggerCpo})
	If ValType(aTriggerCpo) <> "A"
		aTriggerCpo:= {}
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza os dados com base no cadastro de produto       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
If !"D1_COD"$cReadVar
	MsSeek(xFilial("SB1")+aCols[n][nPosCod])
	cProduto := aCols[n][nPosCod]
Else
	MsSeek(xFilial("SB1")+M->D1_COD)
	cProduto := M->D1_COD
EndIf
If nPosUm<>0
	aCols[n][nPosUM] := SB1->B1_UM
EndIf
If nPosSegUM<>0
	aCols[n][nPosSegUM] := SB1->B1_SEGUM
EndIf
If nPosCC > 0
	If lMT103CPO
		If Len(aTriggerCpo) > 0 .And. Ascan(aTriggerCpo,{|x| x== "D1_CC"})  > 0
			aCols[n][nPosCC] := SB1->B1_CC
		Else
			aCols[n][nPosCC] := IIF(Empty(aCols[n][nPosCC]),SB1->B1_CC,aCols[n][nPosCC])
		EndIf
	Else
		aCols[n][nPosCC] := IIF(Empty(aCols[n][nPosCC]),SB1->B1_CC,aCols[n][nPosCC])
	EndIf
EndIf
If nPosConta > 0
	If lMT103CPO
		If Len(aTriggerCpo) > 0 .And. Ascan(aTriggerCpo,{|x| x== "D1_CONTA"})  > 0
			aCols[n][nPosConta] := IIF(Empty(aCols[n][nPosConta]),SB1->B1_CONTA,aCols[n][nPosConta])
		Else
			aCols[n][nPosConta] := SB1->B1_CONTA
		EndIf
	Else
		aCols[n][nPosConta] := SB1->B1_CONTA
	EndIf
EndIf
If nPosItCt > 0
	If lMT103CPO
		If Len(aTriggerCpo) > 0 .And. Ascan(aTriggerCpo,{|x| x== "D1_ITEMCTA"})  > 0
			aCols[n][nPosItCt] := SB1->B1_ITEMCC
		Else
			aCols[n][nPosItCt] := IIF(Empty(aCols[n][nPosItCt]),SB1->B1_ITEMCC,aCols[n][nPosItCt])
		EndIf
	Else
		aCols[n][nPosItCt] := IIF(Empty(aCols[n][nPosItCt]),SB1->B1_ITEMCC,aCols[n][nPosItCt])
	EndIf
EndIf
If nPosClVl > 0
	If lMT103CPO
		If Len(aTriggerCpo) > 0 .And. Ascan(aTriggerCpo,{|x| x== "D1_CLVL"})  > 0
			aCols[n][nPosClVl] := SB1->B1_CLVL
		Else
			aCols[n][nPosClVl] := IIF(Empty(aCols[n][nPosClVl]),SB1->B1_CLVL,aCols[n][nPosClVl])
		EndIf
	Else
		aCols[n][nPosClVl] := IIF(Empty(aCols[n][nPosClVl]),SB1->B1_CLVL,aCols[n][nPosClVl])
	EndIf
EndIf
aCols[n][nPosLocal]	:= RetFldProd(SB1->B1_COD,"B1_LOCPAD")
If nPosQtSegum<>0
	aCols[n][nPosQtSegum] := 0
	a100SegUM()
EndIf
If nPosChassi > 0 .And. cPaisLoc == "BRA"
	aCols[n][nPosChassi] := SB1->B1_CHASSI
EndIf

If nPosTes > 0
    //Obtem a TES da aAutoItens quando for passado por Rotina Automatica
    If (Type("l103Auto") <> "U" .And. l103Auto)
	    If Empty(aCols[n][nPosTes]) .And. nPosTesAut>0 .And. !IsInCallStack("TSFGrvNF") //Se foi chamado pelo TSF (Totvs Sped Fiscal), nao atualiza TES no Array
	    	aCols[n][nPosTes]:= aAutoItens[n][nPosTesAut][2]
	    EndIf

	    //Se informou TES via rotina automatica funções fiscais só devem ser executadas
    	//no preenchimento da TES pela funcao MsGetDAuto

    	If !Empty(aAutoItens[n][nPosTesAut][2])
		lTesAuto := .T.
		EndIf
	EndIf

    If (Empty(aCols[n][nPosTes]) .And. !Empty(RetFldProd(SB1->B1_COD,"B1_TE"))) .Or.;
    	 (lMT103CPO .And. Len(aTriggerCpo) > 0 .And. Ascan(aTriggerCpo,{|x| x == "D1_TES"})  > 0  .And. !Empty(RetFldProd(SB1->B1_COD,"B1_TE")))
 		SF4->(dbSetOrder(1))
		If SF4->(dbSeek(xFilial("SF4")+RetFldProd(SB1->B1_COD,"B1_TE")))
			If !RegistroOk("SF4",.F.)
				Aviso("A103NTES",STR0072+CHR(10)+STR0073+RetFldProd(SB1->B1_COD,"B1_TE"),{STR0038})
			Else
				aCols[n][nPosTes] := RetFldProd(SB1->B1_COD,"B1_TE")
			EndIf
		EndIf
    EndIf

	If !lTesAuto .And. MaFisFound("IT",n)
		If !Empty(aCols[n][nPosTes])
			MaFisAlt("IT_TES",aCols[n][nPosTes],n)
		EndIf
		If aCOLS[n][nPosTotal]<>0
			MaFisToCols(aHeader,aCols,N,"MT100")
		EndIf
	EndIf
EndIf
If Rastro(cProduto) .And. nPosDtValid > 0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ P.E para manipular a data de validade do lote (D1_DTVALID) ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock('MT103DTLT')
		uRet := ExecBlock( 'MT103DTLT', .F., .F., {aCols[n][nPosCod], ;
												   aCols[n][nPosLocal], ;
								 				   aCols[n][nPosLoteCtl], ;
								 				   aCols[n][nPosDtValid]})

		If ValType( uRet ) == 'D'
			aCols[n][nPosDtValid] := uRet
			lDtValid := .F.
		EndIf
	EndIf
	If lDtValid
		aCols[n][nPosDtValid]:= IIF(Empty(aCols[n][nPosDtValid]),dDataBase + SB1->B1_PRVALID,aCols[n][nPosDtValid]) // Proteje a sobreposicao da data caso o usuario de get no produto ao classificar o produto.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o pedido de compra eh valido                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nPosPedido > 0
	If !Empty(aCols[n][nPosPedido])
		dbSelectArea("SC7")
		dbSetOrder(14)
		If MsSeek(xFilial("SC7")+aCols[n][nPosPedido]+aCols[n][nPosItemPC])
			If SC7->C7_PRODUTO <> cProduto
				aCols[n][nPosPedido]	:= Space(Len(aCols[n][nPosPedido]))
				aCols[n][nPosItemPC]	:= Space(Len(aCols[n][nPosItemPC]))
			EndIf
		EndIf
	EndIf
EndIf

//-- Preenche entidades contabeis com cadastro do prod. ou PC
FillCTBEnt(If(Empty(nPosPedido) .Or. Empty(aCols[n,nPosPedido]),"SB1","SC7"),n)

RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103Trigge³ Autor ³ Edson Maricate        ³ Data ³07.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta funcao indica ao sistema que uma referencia de imposto  ³±±
±±³          ³foi alterado em um gatilho                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome do campo alterado                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: .T. Se o campo esta no aHeader                        ³±±
±±³          ³       .F. Se o campo nao esta no aHeader                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar as referencias que   ³±±
±±³          ³foram alteradas atraves de um gatilho do dicionario de dados ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103Trigger(cCampo)

Local aArea 	:= GetArea()
Local aRefer    := {}
Local lRetorno	:= .T.
Local nPosCpo	:= aScan(aHeader,{|x| AllTrim(x[2])==AllTrim(cCampo)})
If nPosCpo > 0
	aRefer := MaFisGetRF(aHeader[nPosCpo][6])
	If !Empty(aRefer[1])
		MaFisRef(aRefer[1],aRefer[2],aCols[N,nPosCpo])
		If cPaisLoc <>"BRA"
			ModxAtuObj()
		EndIf
	EndIf
Else
	lRetorno := .F.
EndIf
RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103Total ³ Autor ³ Edson Maricate        ³ Data ³07.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina valida a digitacao do valor total do item do docu³±±
±±³          ³mento de entrada                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Valor do total digitado                               ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se o valor eh valido                           ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo verifica se o valor informado  ³±±
±±³          ³como total do item do documento de entrada eh valido         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103Total(nTotal)

Local aArea	   := GetArea()
Local nPQuant  := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_QUANT"})
Local nPPreco  := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_VUNIT"})
Local nPTes    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_TES"  })
Local nPQSegUm := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_QTSEGUM"})
Local nQtSegUm := 0
Local nDif	   := 0
Local cTes     := ""
Local lRetorno := .T.
If cPaisLoc  == "PAR"
	If nPQuant > 0 .And. nPPreco > 0 .And. aCols[n][nPQuant] > 0
		nDif := Abs(NoRound(aCols[n][nPQuant]*aCols[n][nPPreco],MsDecimais(Mafisret(,"NF_MOEDA")))-nTotal)
	EndIf
Else
	If nPQuant > 0 .And. nPPreco > 0 .And. aCols[n][nPQuant] > 0 .And. aCols[n][nPPreco] > 0
		nDif := Abs(NoRound(aCols[n][nPQuant]*aCols[n][nPPreco],2)-nTotal)
	EndIf
EndIf

If nPQSegUm > 0
	nQtSegUm := aCols[n][nPQSegUm]
EndIf

If nPTES > 0
	cTes := aCols[n][nPTES]
EndIf

// Total pela segunda unidade de medida
If GetMv("MV_CALC2UM")		// indica se irá recalcular o valor unitario pelo total caso exista 2 unidade de medida
	If nQtSegUm > 0 .And. nDif > 0.49
		aCols[n][nPPreco] := nTotal / aCols[n][nPQuant]
		If	MaFisFound("IT",n)
			MaFisAlt("IT_PRCUNI",aCols[n][nPPreco],n)
		EndIf

		If cPaisLoc  == "PAR"
			If nPQuant > 0 .And. nPPreco > 0 .And. aCols[n][nPQuant] > 0
				nDif := Abs(NoRound(aCols[n][nPQuant]*aCols[n][nPPreco],MsDecimais(Mafisret(,"NF_MOEDA")))-nTotal)
			EndIf
		Else
			If nPQuant > 0 .And. nPPreco > 0 .And. aCols[n][nPQuant] > 0
		nDif := Abs(NoRound(aCols[n][nPQuant]*aCols[n][nPPreco],2) - nTotal)
	EndIf
		EndIf
	EndIf
Endif

If cPaisLoc=="PAR"
	If cTipo$"NDB" .And. !MaTesSel(cTES) .And. (IIf(MsDecimais(Mafisret(,"NF_MOEDA"))==0,nDif > 1.00,nDif > 0.49) )
		Help(" ",1,"TOTAL")
		lRetorno := .F.
	EndIf
Else
	If cTipo$"NDB" .And. !MaTesSel(cTES) .And. nDif > 0.49
	Help(" ",1,"TOTAL")
	lRetorno := .F.
	EndIf
EndIF
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Este IF tem como finalidade atualizar o valor total do item no rodapeh da NF³
//³    quando digitamos o valor total do item. Apenas na PRE-NOTE (MATA140)    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Upper (AllTrim (FunName ()))=="MATA140"
	Eval (bRefresh,,,nTotal)
EndIf

RestArea(aArea)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeNfS2Acols³ Autor ³ Edson Maricate      ³ Data ³07.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina atualiza o acols com base no item do documento de³±±
±±³          ³saida                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Numero do registro do item do documento de saida      ³±±
±±³          ³ExpN2: Item do acols no documento de entrada                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar a funcao fiscal com  ³±±
±±³          ³base no item do documento de saida e atualizar o acols tb.   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeNfs2Acols(nRecSD2,nItem)

Local aArea		 := GetArea()
Local aAreaSD2	 := SD2->(GetArea())
Local cMvNFEAval :=	GetNewPar( "MV_NFEAFSD", "000" )
Local nPQuant    := 0
Local nValor     := 0
Local nPValAcRS  := 0

MaColsToFis(aHeader,aCols,nItem,"MT100",.T.)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona na item da Nota Original          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPQuant   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_QUANT"})
nPValAcRS := aScan(aHeader,{|x| AllTrim(x[2])=="D1_VALACRS"})
dbSelectArea("SD2")
MsGoto(nRecSD2)
dbSelectArea("SF2")
dbSetOrder(1)
MsSeek(xFilial("SF2")+SD2->D2_DOC+SD2->D2_SERIE+SD2->D2_CLIENTE+SD2->D2_LOJA)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Dispara o ponto para cada item da NF        ³
//³ Executa somente se nao for uma chamada da   ³
//³ A103VLDNFO - Preservando comportamento		³
//³ original - Executa somente 1 vez por linha  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock( "MT103INF" ) .And. !IsInCallStack("A103VldNFO")
	ExecBlock( "MT103INF", .F., .F., { nItem } )
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza a Funcao Fiscal                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MaFisRet(nItem,"IT_RECORI")<>nRecSD2
	MaFisAlt("IT_RECORI",nRecSD2,nItem)
EndIf
// Manter o estado da Nota de Saida mesmo para venda com Cupom Fiscal (LOJA).
If MaFisRet(,"NF_UFORIGEM")<>SF2->F2_EST
	MaFisAlt("NF_UFORIGEM",SF2->F2_EST)
EndIf

If SD2->D2_DESCZFR <> 0
	MaFisAlt("IT_DESCZF",SD2->D2_DESCZFR,nItem)
EndIf

If !Empty(SD2->D2_CODISS)
	MaFisAlt("IT_CODISS",SD2->D2_CODISS,nItem)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Agrega o Frete/Desp/Seguro  referente a NF Retornada  ³
//| de acordo com o parametro MV_NFEAFSD 				  ³
//ÀÄÄÄÄ--ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SD2->D2_VALFRE <> 0
    If len(cMvNFEAval)>=1
        If Substr(cMvNFEAval,1,1)=="1"
            nValor := A410Arred(IIF(SD2->D2_QUANT-aCols[nItem][nPQuant] == 0 , SD2->D2_VALFRE, (SD2->D2_VALFRE/SD2->D2_QUANT)*aCols[nItem][nPQuant]),"D1_VALFRE")
			MaFisAlt("IT_FRETE",nValor,nItem)
		EndIf
	EndIf
EndIf

If SD2->D2_SEGURO <> 0
    If len(cMvNFEAval)>=2
        If Substr(cMvNFEAval,2,1)=="1"
 	        nValor := A410Arred(IIF(SD2->D2_QUANT-aCols[nItem][nPQuant] == 0 , SD2->D2_SEGURO, (SD2->D2_SEGURO/SD2->D2_QUANT)*aCols[nItem][nPQuant]),"D1_SEGURO")
			MaFisAlt("IT_SEGURO",nValor,nItem)
        EndIf
    EndIf
EndIf

If SD2->D2_DESPESA <> 0
    If len(cMvNFEAval)=3
        If Substr(cMvNFEAval,3,1)=="1"
    	    nValor := A410Arred(IIF(SD2->D2_QUANT-aCols[nItem][nPQuant] == 0 , SD2->D2_DESPESA, (SD2->D2_DESPESA/SD2->D2_QUANT)*aCols[nItem][nPQuant]),"D1_DESPESA")
			MaFisAlt("IT_DESPESA",nValor,nItem)
	    EndIf
    EndIf
EndIf

//Obtém o valor do Acrescimo Financeiro na Nota de Origem e faz o rateio //
If nPValAcRS >0
    If SD2->D2_VALACRS >0
 	    aCols[nItem][nPValAcRS] := ( SD2->D2_VALACRS / SD2->D2_QUANT ) * aCols[nItem][nPQuant]
    EndIf
Endif

MaFisToCols(aHeader,aCols,,"MT100")

RestArea(aArea)
RestArea(aAreaSD2)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeNfe2Aco³ Autor ³ Edson Maricate        ³ Data ³07.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina atualiza o acols com base no item do documento de³±±
±±³          ³entrada                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Numero do registro do item do documento de entrada    ³±±
±±³          ³ExpN2: Item do acols no documento de entrada                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar a funcao fiscal com  ³±±
±±³          ³base no item do documento de entrada e atualizar o acols tb. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeNfe2Acols(nRecSD1,nItem)

Local aArea		:= GetArea()
Local aAreaSD1	:= SD1->(GetArea())
Local lAtualiza := .F.

dbSelectArea("SD1")
MsGoto(nRecSD1)

If MaFisRet(nItem,"IT_NFORI")<>SD1->D1_DOC
	MaFisAlt("IT_NFORI",SD1->D1_DOC,nItem)
	lAtualiza := .T.
EndIf
If MaFisRet(nItem,"IT_SERORI")<>SD1->D1_SERIE
	MaFisAlt("IT_SERORI",SD1->D1_SERIE,nItem)
	lAtualiza := .T.
EndIf
If MaFisRet(nItem,"IT_RECORI")<>nRecSD1
	MaFisAlt("IT_RECORI",nRecSD1,nItem)
	lAtualiza := .T.
EndIf
If lAtualiza
	MaColsToFis(aHeader,aCols,nItem,"MT100",.T.)
EndIf

If bGdRefresh<>Nil
	Eval(bGDRefresh)
EndIf

RestArea(aArea)
RestArea(aAreaSD1)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfePC2Acol³ Autor ³ Edson Maricate        ³ Data ³27.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina atualiza o acols com base no item do pedido de   ³±±
±±³          ³compra                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1 : Numero do registro do SC7                            ³±±
±±³          ³ExpN2 : Item da NF                                           ³±±
±±³          ³ExpN3 : Saldo do Pedido                                      ³±±
±±³          ³ExpC1 : Item a ser carregado no aCols ( D1_ITEM )            ³±±
±±³          ³ExpL1 : Indica se os dados da Pre-Nota devem ser preservados ³±±
±±³          ³ExpA1 : Valores das despesas acessorias do pedido de compras ³±±
±±³          ³ExpA2 : Cabecalho do rateio                                  ³±±
±±³          ³ExpA3 : Itens do rateio                                      ³±±
±±³          ³ExpN4 : Preco unitário na Pré-Nota						   ³±±
±±³          ³ExpL2 : Indica se nota foi importada pelo TOTVS Colaboracao  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Sempre .T.                                            ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar a funcao fiscal com  ³±±
±±³          ³base no item do pedido de compra.                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NFePC2Acol(nRecSC7,nItem,nSalPed,cItem,lPreNota,aRateio,aHeadSDE,aColsSDE,nPrUPreNf,lTColab)

Local aArea		  := GetArea()
Local aAreaSC7	  := SC7->(GetArea())
Local aAreaSF4	  := SF4->(GetArea())
Local aAreaSB1	  := SB1->(GetArea())
Local aAreaSC1    := SC1->(GetArea())
Local aAreaSTJ

Local aRefSC7     := MaFisSXRef("SC7")
Local nX          := 0
Local nCntFor     := 0
Local nValUnit    := 0
Local nPosQtd     := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_QUANT"})
Local nPosQtd2    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_QTSEGUM"})
Local nPosTes     := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_TES"})
Local nPosVunit   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_VUNIT"})
Local nPosBicm    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_BASEICM"})
Local nPosPicm    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_PICM"})
Local nPosVicm    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_VALICM"})
Local nPosBipi    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_BASEIPI"})
Local nPosIpi     := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_IPI"})
Local nPosVipi    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_VALIPI"})
Local lRateioPC   := SuperGetMv("MV_NFEDAPC")
Local lAllPC      := .T.
Local lAltImpPreNf:= .F.

DEFAULT aHeadSDE  := {}
DEFAULT aColsSDE  := {}

DEFAULT lPreNota := .F.
DEFAULT lTColab  := .F.
DEFAULT aRateio  := {0,0,0}

If SuperGetMV("MV_NGMNTNO",.F.,"2") == "1"
	aAreaSTJ    := STJ->(GetArea())
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a existencia do item do acols                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nItem == Nil .Or. nItem > Len(aCols)
	aadd(aCols,Array(Len(aHeader)+1))
	For nX := 1 to Len(aHeader)
		If IsHeadRec(aHeader[nX][2])
		    aCols[Len(aCols)][nX] := 0
		ElseIf IsHeadAlias(aHeader[nX][2])
		    aCols[Len(aCols)][nX] := "SD1"
		ElseIf Trim(aHeader[nX][2]) == "D1_ITEM"
			aCols[Len(aCols)][nX] 	:= IIF(cItem<>Nil,cItem,StrZero(1,Len(SD1->D1_ITEM)))
		Else
			aCols[Len(aCols)][nX] := CriaVar(aHeader[nX][2], (aHeader[nX][10] <> "V") )
		EndIf
		aCols[Len(aCols)][Len(aHeader)+1] := .F.
	Next nX
	nItem := Len(aCols)
EndIf

If Empty(aHeadSDE)
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SDE")
	While !EOF() .And. (SX3->X3_ARQUIVO == "SDE")
		IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"DE_CUSTO"$SX3->X3_CAMPO
			AADD(aHeadSDE,{ TRIM(x3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT } )
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ADHeadRec("SDE",aHeadSDE)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona registros                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC7")
MsGoto(nRecSC7)
lAllPC := SC7->C7_QUANT==nSalPed .And. Empty(SC7->C7_REAJUST)

dbSelectArea("SB1")
dbSetOrder(1)
MsSeek(xFilial("SB1")+SC7->C7_PRODUTO)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Considera quantidade e valor da nota importada via TOTVS Colaboracao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lTColab
	nValUnit := NfePcReaj(SC7->C7_REAJUST,lReajuste)
Else
	nValUnit := aCols[nItem][nPosVunit]
	nSalPed  := aCols[nItem][nPosQtd]
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega os impostos do pedido de compra para o Doc.Entrada   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MaFisFound()

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obtem a condicao de pagamento do pedido de compra        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (Empty(cCondicao) .And. l103Class) .Or. !l103Class
		cCondicao := SC7->C7_COND
	EndIf

	MaFisIniLoad(nItem)
	For nX := 1 To Len(aRefSc7)
		Do Case
		Case aRefSC7[nX][2] == "IT_QUANT"
			If !lPreNota
				MaFisLoad(aRefSc7[nX][2],nSalPed,nItem)
			EndIf
		Case aRefSc7[nX][2] == "IT_PRCUNI"
			If !lPreNota
				MaFisLoad(aRefSc7[nX][2],nValUnit,nItem)
			EndIf
		Case aRefSc7[nX][2] == "IT_VALMERC"
			If !lPreNota
				MaFisLoad(aRefSc7[nX][2],Round(nSalPed*Round(nValUnit,TamSX3('D1_VUNIT')[2]), TamSX3('D1_TOTAL')[2]),nItem)
			Endif
		Case aRefSc7[nX][2] == "IT_DESCONTO"
			If !lPreNota
				MaFisLoad(aRefSc7[nX][2],xMoeda(((SC7->C7_VLDESC/SC7->C7_QUANT)* nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
			EndIf
		Case aRefSc7[nX][2] == "IT_VALEMB"
			MaFisLoad(aRefSc7[nX][2],xMoeda(SC7->C7_VALEMB,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
		Case aRefSc7[nX][2] == "IT_SEGURO"
			If lRateioPC
				MaFisLoad(aRefSc7[nX][2],xMoeda(((SC7->C7_SEGURO/SC7->C7_QUANT)*nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
			Else
				aRateio[1] += xMoeda(((SC7->C7_SEGURO/SC7->C7_QUANT)*nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
			EndIf
		Case aRefSc7[nX][2] == "IT_DESPESA"
			If lRateioPC
				MaFisLoad(aRefSc7[nX][2],xMoeda(((SC7->C7_DESPESA/SC7->C7_QUANT)*nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
			Else
				aRateio[2] += xMoeda(((SC7->C7_DESPESA/SC7->C7_QUANT)*nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
			EndIf
		Case aRefSc7[nX][2] == "IT_FRETE"
			If lRateioPC
				MaFisLoad(aRefSc7[nX][2],xMoeda(((SC7->C7_VALFRE/SC7->C7_QUANT)*nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
			Else
				aRateio[3] += xMoeda(((SC7->C7_VALFRE/SC7->C7_QUANT)*nSalPed),SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
			EndIf
		Case aRefSc7[nX][2] == "IT_TES"
			If !Empty(SC7->C7_TES)
				dbSelectArea("SF4")
				dbSetOrder(1)
				MsSeek(xFilial("SF4")+SC7->C7_TES)
				MaFisLoad("IT_CF",MaFisCFO(nItem,SF4->F4_CF),nItem)
			EndIf
		Case aRefSc7[nX][2] == "IT_BASEICM"
			If !lPreNota .Or. Empty(SD1->D1_BASEICM) .Or. SD1->D1_BASEICM == SC7->(FieldGet(FieldPos(aRefSc7[nX][1])))
				If SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))) <> 0
					MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
				Else
					lAltImpPreNf := .T.
				EndIf
			Else
				lAltImpPreNf := .T.
			EndIf
		Case aRefSc7[nX][2] == "IT_ALIQICM"
			If !lPreNota .Or. Empty(SD1->D1_PICM) .Or. SD1->D1_PICM == SC7->(FieldGet(FieldPos(aRefSc7[nX][1])))
				If SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))) <> 0
					MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
				Else
					lAltImpPreNf := .T.
				EndIf
			Else
				lAltImpPreNf := .T.
			EndIf
		Case aRefSc7[nX][2] == "IT_VALICM"
			If !lPreNota .Or. Empty(SD1->D1_VALICM) .Or. SD1->D1_VALICM == SC7->(FieldGet(FieldPos(aRefSc7[nX][1])))
				If SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))) <> 0
					MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
				Else
					lAltImpPreNf := .T.
				EndIf
			Else
				lAltImpPreNf := .T.
			EndIf
		Case aRefSc7[nX][2] == "IT_BASEIPI"
			If !lPreNota .Or. Empty(SD1->D1_BASEIPI) .Or. SD1->D1_BASEIPI == SC7->(FieldGet(FieldPos(aRefSc7[nX][1])))
				If SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))) <> 0
						MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
				Else
					lAltImpPreNf := .T.
				EndIf
			Else
				lAltImpPreNf := .T.
			EndIf
		Case aRefSc7[nX][2] == "IT_ALIQIPI"
			If !lPreNota .Or. Empty(SD1->D1_IPI) .Or. SD1->D1_IPI == SC7->(FieldGet(FieldPos(aRefSc7[nX][1])))
				If SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))) <> 0
					MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
				Else
					lAltImpPreNf := .T.
				EndIf
			Else
				lAltImpPreNf := .T.
			EndIf

		Case aRefSc7[nX][2] == "IT_VALIPI"
			If !lPreNota .Or. Empty(SD1->D1_VALIPI) .Or. SD1->D1_VALIPI == SC7->(FieldGet(FieldPos(aRefSc7[nX][1])))
				If SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))) <> 0
					MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
				Else
					lAltImpPreNf := .T.
				EndIf
			Else
				lAltImpPreNf := .T.
			EndIf
		OtherWise
			MaFisLoad(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
		EndCase
	Next nX
	MaFisEndLoad(nItem)
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Obtem a condicao de pagamento do pedido de compra        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cCondicao := SC7->C7_COND
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o acols com base no pedido de compras               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lPreNota
	For nCntFor := 1 To Len(aHeader)
		Do Case
		Case Trim(aHeader[nCntFor,2]) == "D1_COD"
			aCols[nItem,nCntFor] := SC7->C7_PRODUTO
		Case Trim(aHeader[nCntFor,2]) == "D1_REVISAO"
			aCols[nItem,nCntFor] := SC7->C7_REVISAO
		Case Trim(aHeader[nCntFor,2]) == "D1_TOTAL"
			aCols[nItem,nCntFor] := Round(nSalPed*Round(nValUnit,TamSX3('D1_VUNIT')[2]), TamSX3('D1_TOTAL')[2])
		Case Trim(aHeader[nCntFor,2]) == "D1_TES" .And. !Empty(SC7->C7_TES)
			aCols[nItem,nCntFor] := SC7->C7_TES
		Case Trim(aHeader[nCntFor,2]) == "D1_PEDIDO"
			aCols[nItem,nCntFor] := SC7->C7_NUM
		Case Trim(aHeader[nCntFor,2]) == "D1_QUANT"
			aCols[nItem,nCntFor] := nSalPed
		Case Trim(aHeader[nCntFor,2]) == "D1_VUNIT"
			aCols[nItem,nCntFor] := Round(nValUnit,TamSX3('D1_VUNIT')[2])
		Case Trim(aHeader[nCntFor,2]) == "D1_ITEMPC"
			aCols[nItem,nCntFor] := SC7->C7_ITEM
		Case Trim(aHeader[nCntFor,2]) == "D1_LOCAL"
			aCols[nItem,nCntFor] := SC7->C7_LOCAL
		Case Trim(aHeader[nCntFor,2]) == "D1_CC"
			aCols[nItem,nCntFor] := SC7->C7_CC
		Case Trim(aHeader[nCntFor,2]) == "D1_OP"
			aCols[nItem,nCntFor] := SC7->C7_OP
		Case Trim(aHeader[nCntFor,2]) == "D1_ITEMCTA"			// Item Contabil
			aCols[nItem,nCntFor] := Iif( Empty(SC7->C7_ITEMCTA), SB1->B1_ITEMCC, SC7->C7_ITEMCTA )
		Case Trim(aHeader[nCntFor,2]) == "D1_CONTA"				// Conta Contabil
			aCols[nItem,nCntFor] := Iif( Empty(SC7->C7_CONTA), SB1->B1_CONTA, SC7->C7_CONTA )
		Case Trim(aHeader[nCntFor,2]) == "D1_CLVL"				// Classe de Valor
			aCols[nItem,nCntFor] := Iif( Empty(SC7->C7_CLVL), SB1->B1_CLVL, SC7->C7_CLVL )
		Case Trim(aHeader[nCntFor,2]) == "D1_UM"
			aCols[nItem,nCntFor] := SC7->C7_UM
		Case Trim(aHeader[nCntFor,2]) == "D1_SEGUM"
			aCols[nItem,nCntFor] := SC7->C7_SEGUM
		Case Trim(aHeader[nCntFor,2]) == "D1_QTSEGUM"
			aCols[nItem,nCntFor] := IIF(SB1->B1_CONV <> 0 .And. aCols[nItem][nPosQtd] <> 0, ConvUm(SB1->B1_COD,aCols[nItem][nPosQtd],aCols[nItem][nPosQtd2],2),SC7->C7_QTSEGUM)
		Case Trim(aHeader[nCntFor,2]) == "D1_DESC"
			aCols[nItem,nCntFor] := SC7->C7_DESC
		Case Trim(aHeader[nCntFor,2]) == "D1_VALDESC"
			aCols[nItem,nCntFor] := xMoeda(((SC7->C7_VLDESC/SC7->C7_QUANT)* nSalPed) , SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
		Case Trim(aHeader[nCntFor,2]) == "D1_RATEIO"
			aCols[nItem,nCntFor] := SC7->C7_RATEIO
		Case Trim(aHeader[nCntFor,2]) == "D1_CODGRP"
			aCols[nItem,nCntFor] := SB1->B1_GRUPO
		Case Trim(aHeader[nCntFor,2]) == "D1_CODITE"
			aCols[nItem,nCntFor] := SB1->B1_CODITE
		Case Trim(aHeader[nCntFor,2]) == "D1_CLASFIS"
			dbSelectArea("SF4")
			dbSetOrder(1)
			MsSeek(xFilial("SF4")+SC7->C7_TES)
			aCols[nItem,nCntFor] := SubStr(SB1->B1_ORIGEM,1,1)+SF4->F4_SITTRIB
		Case Trim(aHeader[nCntFor,2]) == "D1_IPI"
			If !Empty(SC7->C7_IPI)
				aCols[nItem,nCntFor] := SC7->C7_IPI
			Else
				aCols[nItem,nCntFor] := SB1->B1_IPI
			EndIf
		Case Trim(aHeader[nCntFor,2]) == "D1_PICM"
			If !Empty(SC7->C7_PICM)
				aCols[nItem,nCntFor] := SC7->C7_PICM
			Else
				aCols[nItem,nCntFor] := SB1->B1_PICM
			EndIf
		Case Trim(aHeader[nCntFor,2]) == "D1_ITEMMED"
			aCols[nItem,nCntFor] := If( !Empty( SC7->C7_CONTRA ) .And. !Empty( SC7->C7_MEDICAO ), "1", "2" )
		//Nota de empenho
		//----------------------------------------------
		Case Trim(aHeader[nCntFor,2]) == "D1_CODNE"
			aCols[nItem,nCntFor] := SC7->C7_CODNE
		Case Trim(aHeader[nCntFor,2]) == "D1_ITEMNE"
			aCols[nItem,nCntFor] := SC7->C7_ITEMNE
		//----------------------------------------------
		Case Trim(aHeader[nCntFor,2]) == "D1_DTVALID"
			If Rastro(SC7->C7_PRODUTO)
				aCols[nItem,nCntFor] := dDataBase + SB1->B1_PRVALID
			EndIf
		Case Trim(aHeader[nCntFor,2]) == "D1_ORDEM"
			If SuperGetMV("MV_NGMNTNO",.F.,"2") == "1"
			   aAreaSC1 := SC1->(GetArea())
			   aAreaSTJ := STJ->(GetArea())

				If !Empty(SC7->C7_OP)
					dbSelectArea("STJ")
					dbSetOrder(1)
					If dbSeek(xFilial("STJ")+SubStr(SC7->C7_OP,1,At("OS",SC7->C7_OP)-1))
						aCols[nItem,nCntFor] := SubStr(SC7->C7_OP,1,At("OS",SC7->C7_OP)-1)
					EndIf
				Else
					dbSelectArea("SC1")
					dbSetOrder(1)
					If dbSeek(xFilial("SC1")+SC7->C7_NUMSC+SC7->C7_ITEMSC)
						dbSelectArea("STJ")
						dbSetOrder(1)
						If dbSeek(xFilial("STJ")+SubStr(SC1->C1_OP,1,At("OS",SC1->C1_OP)-1))
							aCols[nItem,nCntFor] := SubStr(SC1->C1_OP,1,At("OS",SC1->C1_OP)-1)
						Endif
					Endif
				EndIf

	  		   RestArea(aAreaSTJ)
	  		   RestArea(aAreaSC1)
			Endif
		EndCase
	Next nCntFor
	FillCTBEnt("SC7",nItem)

	If !MaFisFound()
		aRateio[1] += xMoeda(SC7->C7_SEGURO ,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
		aRateio[2] += xMoeda(SC7->C7_DESPESA,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
		aRateio[3] += xMoeda(SC7->C7_VALFRE ,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA)
	EndIf

	//Complementa o rateio da nota fiscal de saida com o rateio do pedido de compras
	cItemRat := IIF(cItem<>Nil,cItem,StrZero(nItem,Len(SD1->D1_ITEM)))
	RatPed2NF(aHeadSDE,@aColsSDE,cItemRat,nRecSC7)

	// 1 - utilização a associação automática com o PMS
	// 2 - não utiliza a associação automática com o PMS
	// default: não utilizar a associação automática
	If GetMV("MV_INTPMS",,"N") == "S" .And. GetNewPar("MV_PMSIPC",  2) == 1
		PMS103IPC(nItem)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Efetua a chamada dos pontos de entrada                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistTemplate( "MT103IPC",,.T. ) .AND. HasTemplate("MT103IPC")
		ExecTemplate( "MT103IPC", .F., .F.,{nItem})
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Agroindustria  									              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If FindFunction("OGXUtlOrig") //Encontra a função
		If OGXUtlOrig() //Verifica se existe
			If FindFunction("OGX205") //Encontra a função
				OGX205() // Executa a função
		   EndIf
		EndIf
	EndIf

	If ExistBlock( "MT103IPC",,.T. )
		ExecBlock( "MT103IPC", .F., .F.,{nItem})
	EndIf

	If ExistBlock( "MT103RCC",,.T. )
		aColsSDE := ExecBlock( "MT103RCC", .F., .F.,{aHeadSDE,aColsSDE})
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Quando ha TES no pedido de compra, deve-se recalcular os     ³
//³ impostos carregados para verificar se nao ha novos impostos  ³
//³ que devem ser calculados!                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MaFisFound()
	Do Case
	Case cA100For+cLoja <> SC7->C7_FORNECE+SC7->C7_LOJA
		MaFisLoad("IT_TES","",nItem)
		MaFisAlt("IT_ALIQICM",0,nItem)
		MaFisAlt("IT_ALIQIPI",0,nItem)
		If Empty(SC7->C7_TES)
			MaFisAlt("IT_TES",RetFldProd(SB1->B1_COD,"B1_TE"),nItem)
		Else
			MaFisAlt("IT_TES",SC7->C7_TES,nItem)
		EndIf
	Case Empty(SC7->C7_TES) .And. !Empty(RetFldProd(SB1->B1_COD,"B1_TE"))
		MaFisLoad("IT_TES","",nItem)
		MaFisAlt("IT_TES",RetFldProd(SB1->B1_COD,"B1_TE"),nItem)
	Case Empty(SC7->C7_TES) .And. Empty(RetFldProd(SB1->B1_COD,"B1_TE")) .And. nPosTes > 0
		MaFisLoad("IT_TES","",nItem)
		MaFisAlt("IT_TES",IF( aCols[nItem,nPosTes] == Nil,CriaVar("D1_TES"),aCols[nItem,nPosTes] ),nItem)
	Case !Empty(SC7->C7_TES)
		MaFisLoad("IT_TES","",nItem)
		MaFisAlt("IT_TES",SC7->C7_TES,nItem)
		If lAllPC .And. !lAltImpPreNf
			// Quando for Relacionar o Pedido a Nf ou preço unitário da Pré-Nf for igual ao Pedido, entra na Rotina
			// Caso Preço Unitário da Pré-Nf for divergente do pedido, prevalece o preço da Pré-Nf mesmo que a quantidade do pedido seja igual.
		    If nPrUPreNf ==Nil .Or. (nPrUPreNf-SC7->C7_PRECO)=0
				For nX := 1 To Len(aRefSc7)
					Do Case
					Case !("IT_BAS"$aRefSc7[nX][2] .Or. "IT_VAL"$aRefSc7[nX][2] .Or. "IT_ALIQ"$aRefSc7[nX][2])
						//Não fazer nada
					Case aRefSc7[nX][2] == "IT_VALIPI"
						MaFisAlt(aRefSc7[nX][2],xMoeda(SC7->C7_VALIPI,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
					Case aRefSc7[nX][2] == "IT_VALICM"
						MaFisAlt(aRefSc7[nX][2],xMoeda(SC7->C7_VALICM,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
					Case aRefSc7[nX][2] == "IT_VALMERC"
						MaFisAlt(aRefSc7[nX][2],xMoeda(SC7->C7_TOTAL,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
					Case aRefSc7[nX][2] == "IT_BASEICM"
						MaFisAlt(aRefSc7[nX][2],xMoeda(SC7->C7_BASEICM,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
					Case aRefSc7[nX][2] == "IT_BASEIPI"
						MaFisAlt(aRefSc7[nX][2],xMoeda(SC7->C7_BASEIPI,SC7->C7_MOEDA,1,M->dDEmissao,,SC7->C7_TXMOEDA,),nItem)
					OtherWise
						If !Empty(SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))))
							MaFisAlt(aRefSc7[nX][2],SC7->(FieldGet(FieldPos(aRefSc7[nX][1]))),nItem)
						EndIf
					EndCase
				Next nX
			EndIf
		EndIf
		If lTColab
			aCols[nItem,nPosBicm] := MaFisRet(nItem,"IT_BASEICM")
			aCols[nItem,nPosPicm] := MaFisRet(nItem,"IT_ALIQICM")
			aCols[nItem,nPosVicm] := MaFisRet(nItem,"IT_VALICM")
			aCols[nItem,nPosBipi] := MaFisRet(nItem,"IT_BASEIPI")
			aCols[nItem,nPosIpi]  := MaFisRet(nItem,"IT_ALIQIPI")
			aCols[nItem,nPosVipi] := MaFisRet(nItem,"IT_VALIPI")
		EndIf
	EndCase

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para tratamentos diversos após o recalculo de ³
	//³ impostos carregados a partir da TES correspondente.	     	   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock( "MT103IP2",,.T. )
		ExecBlock( "MT103IP2", .F., .F.,{nItem})
	EndIf
	MaFisToCols(aHeader,aCols,Len(aCols),"MT100")

	aColsD1 := acols //Atualização necessária para que, o Array do Lançamento da Apuração de ICMS tenha o mesmos itens do acols da Nota Fiscal de Entrada.

EndIf

RestArea(aAreaSB1)
RestArea(aAreaSF4)
RestArea(aAreaSC7)
RestArea(aArea)
Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfePcReaj ³ Autor ³ Edson Maricate        ³ Data ³28.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina atualiza o valor unitario do pedido de compra com³±±
±±³          ³base na cotacao da moeda                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 : Formula de reajuste                                  ³±±
±±³          ³ExpL2 : Indica se a formula de reajuste de ser aplicada      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: valor unitario reajustado                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo atualizar o valor unitario do  ³±±
±±³          ³pedido de compra com base na taxa da moeda do dia            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function NfePcReaj(cReajuste,lReajuste)

Local nPreco := 0
Local dBase  := dDataBase

dDataBase := dDEmissao
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualiza o pedido de compra com base na cotacao da moeda     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPreco := xMoeda(SC7->C7_PRECO,SC7->C7_MOEDA,1,M->dDEmissao,9,SC7->C7_TXMOEDA)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Aplica a formula de reajuste do pedido de compra             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(SC7->C7_REAJUST)
	If !Empty(cReajuste) .And. lReajuste
		nPreco := Formula(cReajuste)
	EndIf
EndIf
dDataBase := dBase
Return( nPreco )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeVldIni ³ Autor ³ Edson Maricate        ³ Data ³07.01.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Esta rotina verifica se o documento de entrada pode ser      ³±±
±±³          ³incluido ou classificado                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 : Formula de reajuste                                  ³±±
±±³          ³ExpL2 : Indica se a formula de reajuste de ser aplicada      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: valor unitario reajustado                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a inclusao ou classifi-³±±
±±³          ³cacao do documento de entrada                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeVLDINI(lClass,lGeraLanc,lClaNfCfDv)

Local lRet 	   := .F.
Local lRetPE   := .T.
Local dDataFec := MVUlmes()

Default lClaNfCfDv := .F.

Do Case
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verificar se a NF ja foi classificada.                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case lClass .And. SF1->F1_STATUS == "A"
	Help("  ",1,"A100CLASSI")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verificar se a Pre-Nota foi bloqueada.                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case lClass .And. SF1->F1_STATUS == "B" .And. SuperGetMV("MV_RESTCLA",.F.,"2")=="1"
	Help("  ",1,"A103BLCLA")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verificar data do ultimo fechamento em SX6.                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case dDataFec >= dDataBase
	Help( " ", 1, "FECHTO" )
	If ( Type("l103Auto") <> "U" .And. l103Auto )
		lRet := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica parametro MV_DATAFIS pela data de digitacao.        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case !FisChkDt(dDatabase)
	lRet := .F.
OtherWise
	lRet := .T.
EndCase

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Validacao para nao permitir a classificacao de pre-notas que possuem |
//| o parametro MV_DATAHOM configurado com o conteudo igual a "2"        |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. lClass .And. SuperGetMv("MV_DATAHOM",.F.,"1")=="2"
	If !Empty(SF1->F1_RECBMTO)
		If dDataFec >= SF1->F1_RECBMTO
			Help( " ", 1, "FECHTO" )
			lRet := .F.
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Integracao com o modulo de Armazenagem - SIGAWMS                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. IntDL() .And. FindFunction("WmsAvalSF1") //-- Validação se pode classificar a nota fiscal
	lRet := WmsAvalSF1("1","SF1")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se estiver trabalhando com Conferencia Fisica, verifica se esta em processo de conferencia|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. lClass .And. SuperGetMV("MV_CONFFIS") == "S"
	If Len(AllTrim(SF1->F1_STATCON))>0
		lClaNfCfDv := (SF1->F1_STATCON == "2" .And. SuperGetMv("MV_CLACFDV",.F.,.F.) .And. MsgYesNo(STR0149,STR0018) ) //"Esta nota está com bloqueio de divergencia na conferencia física do ACD, Deseja classifica-la mesmo assim?"
		If !lClaNfCfDv
			If SF1->F1_STATCON <> "1"
				lRet := .F.
				Help(' ', 1, 'A103NFCONF')
			EndIf
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada MT103INC                 |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .And. ExistBlock('MT103INC')
	lRet := If(ValType(lRetPE:=ExecBlock('MT103INC',.F.,.F.,lClass))=='L',lRetPE,.T.)
EndIf
Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103Alert³Autor³Edson Maricate          ³ Data ³15.02.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Aviso de que a almoxarifado nao existe                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103Alert(cProduto,cAlmox,lAuto)
Local lRet
Local cLinha1:= STR0011+ cAlmox + STR0012 //"O Armazem "###" nao existe para este produto. "
Local cLinha2:= STR0013 //"Deseja cria-lo agora ? "
Local aSvOrdem:={Alias(),IndexOrd(),Recno()}

DEFAULT lAuto := .F.

dbSelectArea("SB2")
If MsSeek(xFilial("SB2")+cProduto+cAlmox,.F.)
	Return .T.
EndIf
If lAuto
	lRet := .T.
Else
    If ExistBlock("M103XLERT")
		lRet:=ExecBlock("M103XLERT",.F.,.F.)
		If Valtype(lRet) <> "L" .and. lRet == .F.
			lRet:=.T.
		EndIf
  	Else
		TONE(3500,1)
		lRet := (MsgYesNo(OemToAnsi(cLinha1+cLinha2),STR0014+cProduto)) // //"Atencao - "
	EndIf
EndIf

If lRet
	CriaSB2(cProduto,cAlmox)
EndIf

dbSelectArea(aSvOrdem[1])
dbSetOrder(aSvOrdem[2])
MsGoto(aSvOrdem[3])

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103VldCC³ Autor ³ Edson Maricate         ³ Data ³02.02.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua a validacao do Centro de Custo, Conta Contab. e Item ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103VldCC(aMuda)
Local cVar			:= ReadVar()
Local lMostraHelp   := .F.
Local lRateio		:= .F.
Local nPosCC		:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_CC"} )
Local nPosConta	    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_CONTA"} )
Local nPosItemCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_ITEMCTA"} )
Local nPosRateio	:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_RATEIO"} )
Local nPosCLVL		:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_CLVL"} )
Local nPosPed		:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_PEDIDO"} )
Local nPosItPc		:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_ITEMPC"} )
Local aArea			:={}
Default aMuda       :={.T.,.T.,.T.,.T.} // CC,Conta,ItemCta e ClVl

If ExistBlock("MT103VCC")
	aMuda := ExecBlock("MT103VCC",.F.,.F.,aMuda)
	If !(ValType(aMuda) == "A" .And. Valtype(aMuda[1]) == "L" .And. Valtype(aMuda[2]) == "L" .And. Valtype(aMuda[3]) == "L" .And. Valtype(aMuda[4]) == "L")
		aMuda:={.T.,.T.,.T.,.T.} // CC,Conta,ItemCta e ClVl
	EndIf
EndIf

// Verifica se validacao esta partindo da pre-nota MATA140
If FunName() == "MATA140" .And. nPosPed > 0 .And. nPosItPc > 0
	If !Empty(aCols[n][nPosPed]) .And. !Empty(aCols[n][nPosItPc])
		SC7->(DbSetOrder(1))
		If SC7->(MsSeek(xFilial("SC7")+aCols[n][nPosPed]+aCols[n][nPosItPc]))
			If SC7->C7_RATEIO == "1"
				lRateio := .T.
			EndIf
		EndIf
	EndIf
EndIf

If ( nPosRateio > 0 .And. aCols[n][nPosRateio] == '1' ) .Or. lRateio
	If nPosCC > 0 .And. aMuda[1]
		aCols[n][nPosCC]		:= Space(Len(aCols[n][nPosCC]))
		If cVar == "M->D1_CC"
			M->D1_CC		    	:= Space(Len(aCols[n][nPosCC]))
		EndIf

		lMostraHelp:= .T.
	Endif
	If nPosConta > 0 .And. aMuda[2]
		aCols[n][nPosConta]	 	:= Space(Len(aCols[n][nPosConta]))
		If cVar == "M->D1_CONTA"
			M->D1_CONTA 			:= Space(Len(aCols[n][nPosConta]))
		EndIf

		lMostraHelp:= .T.
	Endif
	If nPosItemCta > 0 .And. aMuda[3]
		aCols[n][nPosItemCta]	:= Space(Len(aCols[n][nPosItemCta]))
		If cVar == "M->D1_ITEMCTA"
			M->D1_ITEMCTA			:= Space(Len(aCols[n][nPosItemCta]))
		EndIf

		lMostraHelp:= .T.
	Endif
	If nPosCLVL > 0 .And. aMuda[4]
		aCols[n][nPosCLVL]		:= Space(Len(aCols[n][nPosCLVL]))
		If cVar == "M->D1_CLVL"
			M->D1_CLVL				:= Space(Len(aCols[n][nPosCLVL]))
		EndIf

		lMostraHelp:= .T.
	Endif
	If lMostraHelp
		Help('   ',1,'A103RATEI')
	EndIf
EndIf

Return .T.

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103ITDEV³ Autor ³ Edson Maricate         ³ Data ³07.04.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consiste a Nota Fiscal Origem Digitada                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ItDev(cItemOri)
Local cNota 	:= ""
Local cAlias 	:= Alias()
Local cProduto 	:= ""
Local cSaldo	:= ""
Local cTesTer
Local cItem		:= ""
Local cCampo    := ""

Local nx
Local nQtdVen 	:= 0
Local nPrcSaida	:= 0
Local nPosNf	:= 0
Local nPosSer	:= 0
Local nPosItem	:= 0
Local nQuantPed := 0
Local nPosQtd 	:= 0
Local nPosPreco := 0
Local nPosValor := 0
Local nPosNfOri := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_NFORI"} )
Local nPosSerOri:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_SERIORI"} )
Local nPosCod   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_COD"} )
Local nPosIT    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_ITEM"} )

Local aArea		:= GetArea()
Local aAreaSD2	:= SD2->(GetArea())
Local aAreaSD1	:= SD1->(GetArea())
Local lRet 		:= .T.
Default l103Auto := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ COMPATIBILIZACAO !!Verifica se e utilizado a rotina MATA100  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type('l100') <> 'U' .And. l100
	If cPaisLoc == "BRA"
		Return A100ItDev()
	Else
		Return A100ItDev( cItemOri)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Forca passagem pela validacao para Rot.Automática ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If l103Auto .And. Empty(cItemOri)
	cItemOri:="x"
EndIf

If !Empty(cItemOri)
	If cTipo == "D"

		DbSelectArea("SF2")
		DbSetOrder(1)

		If ExistBlock("MT103SF2")
			ExecBlock("MT103SF2",.F.,.F.,{ aCols , nPosNfOri , nPosSerOri })
		Else
			MsSeek(xFilial("SF2") + aCols[n][nPosNfOri] + aCols[n][nPosSerOri] )
		EndIf

		dbSelectArea("SD2")
		dbSetOrder(3)
		If !MsSeek(xFilial('SD2')+aCols[n][nPosNfOri]+aCols[n][nPosSerOri]+SF2->F2_CLIENTE+SF2->F2_LOJA+aCols[n][nPosCod]+cItemOri)
			If MsSeek(xFilial("SD2")+aCols[n][nPosNFOri]+aCols[n][nPosSerOri]+SF2->F2_CLIENTE+SF2->F2_LOJA)
				While SD2->(!Eof()) .And.;										// Encontrou a nota e o item,
					SD2->D2_FILIAL == xFilial("SD2") .And.;					// porem o codigo do produto esta diferente.
					SD2->D2_DOC == aCols[n][nPosNFOri] .And.;					// Neste caso nao deve permitir a devolucao.
					SD2->D2_SERIE == aCols[n][nPosSerOri] .And.;
					SD2->D2_CLIENTE == SF2->F2_CLIENTE .And.;
					SD2->D2_LOJA == SF2->F2_LOJA
					If SD2->D2_ITEM == AllTrim(cItemOri)
						AVISO(STR0018,STR0150,{STR0038})						// Atencao # O codigo do produto para devolucao deve ser igual ao do item da nota original. # Ok
						lRet := .F.
					EndIf
					SD2->(dbSkip())
				EndDo
			EndIf
			If !l103Auto .And. lRet .And. !A103ExsSF8(cNFiscal,cSerie,cA100For,cLoja)
				If SuperGetMV("MV_VLDNFO",.F.,.F.)
					If Aviso(STR0018,STR0096+TRIM(aCols[n][nPosNfOri])+"/"+TRIM(aCols[n][nPosSerOri])+"-"+aCols[n][nPosIT]+STR0097+CHR(13)+STR0098+" "+STR0099,{STR0016,STR0017}) == 2
				       lRet := .F.
	    		    Else
	        		   lRet := .T.
		        	ENDIF
		   		EndIf
		  	Else
				If SuperGetMV("MV_VLDNFO",.F.,.F.) .And. lRet
			  		Help(" ",1,"MT103NFO",,STR0096+TRIM(aCols[n][nPosNfOri])+"/"+TRIM(aCols[n][nPosSerOri])+"-"+aCols[n][nPosIT]+"  "+STR0097,1,0)
			  		lRet:=.F.
			 	EndIf
		  	EndIf
		Else
			If !MaFisFound("NF")
				MaFisEnd()
				MaFisIni(SF2->F2_CLIENTE,SF2->F2_LOJA,IIF(SF2->F2_TIPO$'DB',"F","C"),SF2->F2_TIPO,"P",,If(SF2->F2_TIPO=="C",AllTrim(SF2->F2_ORIGLAN),Nil))
			EndIf
			If IsInCallStack("A103LINOK")
				lRet := .T.
			Else
				lRet := NfeNfs2Acols(SD2->(RecNo()),n)
			EndIf
		EndIf
	ElseIf cTipo$"CPI"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Valida se a Nota tem o mesmo numero da Nota de Origem  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	    If Trim(aCols[n][nPosNfOri])==Trim(cNFISCAL) .And. Trim(aCols[n][nPosSerOri])==Trim(cSERIE) .And. CFORMUL=="N"
		    Help(" ",1,"MT103NFIG",,STR0094+CHR(13)+STR0095+" "+aCols[n][nPosIt],1,0)
	    	lRet := .F.
	    Endif

	    If lRet
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Notas de Credito e Debito...                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SF1")
			DbSetOrder(1)

			// Verifica se fornecedor esta preenchido para posicionar SF1 por fornecedor
			If ExistBlock("MT103SF1")
				ExecBlock("MT103SF1",.F.,.F.,{ aCols , nPosNfOri , nPosSerOri })
			Else
				If Type("cA100For") == "C" .And. !Empty(cA100For) .And. Type("cLoja") == "C" .And. !IsInCallStack("MATA143")
					MsSeek(xFilial("SF1") + aCols[n][nPosNfOri] + aCols[n][nPosSerOri] + cA100For + cLoja)
				Else
					MsSeek(xFilial("SF1") + aCols[n][nPosNfOri] + aCols[n][nPosSerOri] )
				EndIf
			EndIf

			dbSelectArea("SD1")
			dbSetOrder(1)
			If !MsSeek(xFilial('SD1')+aCols[n][nPosNfOri]+aCols[n][nPosSerOri]+SF1->F1_FORNECE+SF1->F1_LOJA+aCols[n][nPosCod]+cItemOri)
				If ( Type('l103Auto') <> 'U' .And. !l103Auto ) .And. !A103ExsSF8(cNFiscal,cSerie,cA100For,cLoja)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Nao e rotina automatica, emite aviso com a pergunta e aguarda  ³
					//³ resposta se deve ou nao aceitar a NF informada.                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If SuperGetMV("MV_VLDNFO",.F.,.F.)
						If Aviso(STR0018,STR0096+TRIM(aCols[n][nPosNfOri])+" "+STR0103+TRIM(aCols[n][nPosSerOri])+" "+STR0101+aCols[n][nPosIT]+" "+STR0097+CHR(13)+STR0098+" "+STR0099,{STR0016,STR0017}) != 1
							lRet := .F.
 						Else
							lRet := .T.
						EndIf
					EndIf
				ElseIf ( Type('l103Auto') <> 'U' .And. l103Auto ) .And. !A103ExsSF8(cNFiscal,cSerie,cA100For,cLoja)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Rotina automatica: se nao existir documento de origem, retorna ³
					//³ falso e nao permite continuar o processo, a menos que a NF de  ³
					//³ origem informada inicie com CIAP.                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Upper(Substr(Trim(aCols[n][nPosNfOri]), 1, 4)) != 'CIAP' ;
						.And. !(Type('aAutoCab') <> 'U' ;
						.And. aScan(aAutoCab, {|x| x[1] == "COLAB" .And. x[2] == "S"}) > 0) //Se for TOTVS COLAB a verificação da nota ja foi feita e nesse ponto o fornecedor ja nao é mais o mesmo
						If SuperGetMV("MV_VLDNFO",.F.,.F.)
			  				Help(" ",1,"MT103OINV",,STR0096+TRIM(aCols[n][nPosNfOri])+"/"+TRIM(aCols[n][nPosSerOri])+"-"+aCols[n][nPosIT]+"  "+STR0097,1,0)
					  		lRet:=.F.
					 	EndIf
					EndIf
				EndIf
			ElseIf !IsInCallStack("PROCDOCS") //Se documento veio do TOTVS Colaboração não deve passar pela função
				NfeNfe2Acols(SD1->(RecNo()),n)
			EndIf
		EndIf
	EndIf
EndIf

RestArea(aAreaSD1)
RestArea(aAreaSD2)
RestArea(aArea)

Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103VldOP ³ Autor ³ Rodrigo de A. Sartorio³ Data ³ 04/02/99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Valida a Ordem de Producao digitada na NF                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MatA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103VldOP()

Local lRet:=.T.,cOP:=&(ReadVar())
Local nPosPc  := aScan(aHeader,{|x| AllTrim(x[2])=="D1_PEDIDO"})
Local nPosItPc:= aScan(aHeader,{|x| AllTrim(x[2])=="D1_ITEMPC"})
Local cSeek	  := ''
Local aAreaAnt:= GetArea()

If !Empty(cOp)
	lRet:=ExistCpo("SC2",cOp)
	If lRet
		SC2->(dbSetOrder(1))
		If SC2->(MsSeek(xFilial("SC2")+cOP)) .And. SC2->C2_TPOP == "P"
			Help(" ",1,"NOPPREVIST")
			lRet:=.F.
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Analisa se existe PC's amarrado a uma SC'a onde a SC's foi gerada |
	//| pela rotina de solicitacao ao armazem e ja foi informado o numero |
	//| da Ordem de Producao na Solicitacao ao Armazem.					  |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet .And. !Empty(aCols[n,nPosPC])
		dbSelectArea("SC7")
		dbSetOrder(1) //C7_FILIAL+C7_NUM+C7_ITEM+C7_SEQUEN
		If dbSeek(xFilial("SC7")+aCols[n,nPosPC]+aCols[n,nPosItPC])
		 	If !Empty(SC7->C7_NUMSC)
				dbSelectArea("SCQ")
				dbSetOrder(2)//CQ_FILIAL+CQ_NUMSC+CQ_ITSC
				dbSeek(cSeek:=xFilial("SCQ")+SC7->C7_NUMSC+SC7->C7_ITEMSC)
				Do While !Eof() .And. cSeek == xFilial("SCQ")+SCQ->CQ_NUMSC+SCQ->CQ_ITSC
				    If !Empty(SCQ->CQ_OP)
						Aviso(STR0018,STR0044+" "+STR0045,{STR0038},2)
						lRet := .F.
						Exit
				    EndIf
					dbSkip()
				EndDo

		 	EndIf
		EndIf
	EndIf

EndIf

RestArea(aAreaAnt)
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A103DtVld   ³Autor³Rodrigo de A. Sartorio³ Data ³ 05/03/97 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ So permite digitar a data de validade do lote apos usuario ³±±
±±³          ³ digitar o Lote de Controle.                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Mata103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103DtVld(dDtValid)
Local lRet		 :=.T.
Local aAreaAnt   := GetArea()
Local aAreaSB8   := SB8->(GetArea())
Local nPosCodigo := aScan(aHeader,{|x|AllTrim(x[2])=='D1_COD'})
Local nPosLocal	 := aScan(aHeader,{|x|AllTrim(x[2])=="D1_LOCAL"} )
Local nPosLote	 := aScan(aHeader,{|x|Alltrim(x[2])=="D1_NUMLOTE"})
Local nPosLotCTL := aScan(aHeader,{|x|Alltrim(x[2])=="D1_LOTECTL"})
Local nPosDvalid := aScan(aHeader,{|x|Alltrim(x[2])=="D1_DTVALID"})
Local nPosTipoNF := aScan(aHeader,{|x|Alltrim(x[2])=="D1_TIPO_NF"})
Local nPosLotFor := aScan(aHeader,{|x|Alltrim(x[2])=="D1_LOTEFOR"})
Local lEasy 	 := SuperGetMV("MV_EASY") == "S"
Local lLoteVenc	 := SuperGetMV("MV_LOTVENC") == "S"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ POSICIONA A SB1  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("SB1")
MsSeek(xFilial("SB1")+aCols[n,nPosCodigo])

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ COMPATIBILIZACAO !!Verifica se e utilizado a rotina MATA100  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type('l100') <> 'U' .And. l100
	Return A100DtVld()
EndIf

If !( Type('l103Auto') <> 'U' .And. l103Auto ) .And. !Rastro(aCols[n,nPosCodigo]) .And. !Empty(aCols[n,nPosLote]) .And. !Empty(aCols[n,nPosLotCtl])
	Help(" ",1,"NAORASTRO")
	lRet:=.F.
EndIf

If lRet .And.  !Empty(dDtValid)
	If Empty(aCols[n,nPosLotFor]) .And. Empty(aCols[n,nPosLote]) .And. Empty(aCols[n,nPosLotCtl]) .And. !Empty(dDtValid) .And. !Rastro(aCols[n,nPosCodigo])
		M->D1_DTVALID := CTOD("  /  /  ")
		lRet:=.T.
	ElseIF lRet .And. dDtValid < dDataBase
		//-- Verifica se permite a digitacao de datas de validade vencidas.
		If lLoteVenc
			//-- Avisa ao usuario que a data de validade esta
			//-- vencida, porem permite a movimentacao.
			If !(Type('l103Auto') <> 'U' .And. l103Auto)
				Help(" ",1,"LOTEVENC")
			EndIf
		Else
			Help(" ",1,"DTVALIDINV")
			lRet:=.F.
		EndIf
	EndIf

	SB8->(dbSetOrder(3))
	If lRet .And. SB8->(dbSeek(xFilial("SB8")+aCols[n,nPosCodigo]+aCols[n,nPosLocal]+aCols[n,nPosLotCTL]+IF(Rastro(aCols[n,nPosCodigo],"S"),aCols[n,nPosLote],"")))
		If dDtValid # SB8->B8_DTVALID .And. !( Type('l103Auto') <> 'U' .And. l103Auto )
			If Type('lMSErroAuto') <> 'L'
				Help(" ",1,"A240DTVALI")
			EndIf
			M->D1_DTVALID := SB8->B8_DTVALID
			aCols[n,nPosDvalid] := SB8->B8_DTVALID
		EndIf
	Endif
Endif

RestArea(aAreaSB8)
RestArea(aAreaAnt)

Return lRet

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103ZERA  ³ Autor ³ Edson Maricate        ³ Data ³03.05.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Zera Nota Fiscal de Origem e Serie da Nota                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103Zera()
Local aArea			:= GetArea()
Local nPosNFOri
Local nPosSerOri
Local nPosItmOri

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ COMPATIBILIZACAO !!Verifica se e utilizado a rotina MATA100  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type('l100') <> 'U' .And. l100
	Return A100Zera()
EndIf

If cTipo == "D"
	nPosNFOri	:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_NFORI"})
	nPosSerOri	:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_SERIORI"})
	nPosItmOri	:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_ITEMORI"})

	aCols[n][nPosNFOri]	:= CriaVar("D1_NFORI")
	aCols[n][nPosSerOri]	:= SerieNfId("SD1",5,"D1_SERIORI")
	aCols[n][nPosItmori]	:= CriaVar("D1_ITEMORI")

	If MaFisFound("NF")
		MaFisIniLoad(n)
		MaFisLoad("IT_NFORI",aCols[n][nPosNFOri],n)
		MaFisLoad("IT_SERORI",aCols[n][nPosSerOri],n)
		MaFisLoad("IT_RECORI",0,n)
		MaFisEndLoad(n)
	EndIf
EndIf

RestArea(aArea)
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³ Fun‡„o   ³ A103LotCTL  ³Autor³Rodrigo de A. Sartorio³ Data ³ 22/11/96 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Descri‡„o³ Valida o lote de control digitado pelo usuario.            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Mata103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A103LotCTL()

Local cVar			:= ReadVar()
Local cConteudo		:= &(ReadVar())
Local cCod			:= aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D1_COD"})]
Local nPosLote		:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_NUMLOTE"})
Local nPosLotCTL	:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_LOTECTL"})
Local nPosDvalid	:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_DTVALID"})
Local nPosLocal		:= aScan(aHeader,{|x|AllTrim(x[2])=="D1_LOCAL"} )
Local aAreaAnt		:= GetArea()
Local aAreaSB8		:= {}
Local lRet			:= .T.
Local cLoteCtlA  	:= ''
Local nPosTipoNF 	:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_TIPO_NF"})
Local lEasy		    := SuperGetMV("MV_EASY") == "S"

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ COMPATIBILIZACAO !!Verifica se e utilizado a rotina MATA100  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type('l100') <> 'U' .And. l100
	Return A100LotCTL()
EndIf

If !(Type('cLoteCtl')=='C')
	cLoteCtlA := CriaVar('D1_LOTECTL')
Else
	cLoteCtlA := cLoteCtl
EndIf

If (!Rastro(cCod) .And. cVar == "M->D1_NUMLOTE" .And. !Empty(cConteudo)) .Or. (!Rastro(cCod) .And. cVar == "M->D1_LOTECTL" .And. !Empty(cConteudo))
	If nPosLote > 0
		aCols[n, nPosLote]   := CriaVar("D1_NUMLOTE")
	EndIf
	aCols[n, nPosLotCTL] := CriaVar("D1_LOTECTL")
	aCols[n, nPosDValid] := CriaVar("D1_DTVALID")
	Help(" ",1,"NAORASTRO")
	lRet     := .F.
ElseIf cVar == "M->D1_NUMLOTE" .And. !Empty(cConteudo)
	If cTipo == 'D' //-- NF Devolu‡„o
		dbSelectArea("SB8")
		aAreaSB8 := GetArea()
		dbSetOrder(2)
		If MsSeek(xFilial("SB8")+cConteudo+cLoteCtlA, .F.) .And. B8_PRODUTO+B8_Local == cCod+cLocal
			aAreaSB8[3]          := Recno()
			M->D1_LOTECTL        := SB8->B8_LOTECTL
			aCols[n, nPosLotCTL] := SB8->B8_LOTECTL
			If nPosLote > 0
				aCols[n, nPosLote]   := cConteudo
			EndIf
		Else
			M->D1_LOTECTL        := CriaVar("D1_LOTECTL")
			M->D1_DTVALID        := CriaVar("D1_DTVALID")
			If nPosLote > 0
				M->D1_NUMLOTE      := CriaVar("D1_NUMLOTE")
				aCols[n, nPosLote] := CriaVar("D1_NUMLOTE")
			EndIf
			aCols[n, nPosLotCTL] := CriaVar("D1_LOTECTL")
			aCols[n, nPosDValid] := CriaVar("D1_DTVALID")
		EndIf
		RestArea(aAreaSB8)
	Else
		M->D1_DTVALID        := CriaVar("D1_DTVALID")
		If nPosLote > 0
			M->D1_NUMLOTE        := CriaVar("D1_NUMLOTE")
			aCols[n, nPosLote]   := CriaVar("D1_NUMLOTE")
		EndIf
		aCols[n, nPosDValid] := CriaVar("D1_DTVALID")
	EndIf
ElseIf cVar == "M->D1_LOTECTL" .And. !Empty(cConteudo)
	aAreaSB8 := GetArea()
	SB8->(dbSetOrder(3))
	If SB8->(dbSeek(xFilial("SB8")+cCod+aCols[n,nPosLocal]+cConteudo+IF(Rastro(cCod,"S"),aCols[n,nPosLote],"")))
		If aCols[n, nPosDValid] # SB8->B8_DTVALID
			If Type('lMSErroAuto') <> 'L'
				Help(" ",1,"A240DTVALI")
			EndIf
			M->D1_DTVALID := SB8->B8_DTVALID
			aCols[n,nPosDvalid] := SB8->B8_DTVALID
		EndIf
	Endif
	RestArea(aAreaSB8)
EndIf

RestArea(aAreaAnt)

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³  A103PC  ³ Prog. ³Edson Maricate         ³Data  ³20.05.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida o pedido de compras digitado.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A103PC()                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103,MATA140                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103PC()

Local nPosItemPC := aScan(aHeader,{|x| Alltrim(x[2]) == "D1_ITEMPC" })

aCols[n][nPosItemPC] := CriaVar("D1_ITEMPC")

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103Item³ Prog. ³Edson Maricate           ³Data  ³20.05.2000³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Valida o item do pedido digitado.                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A103Item()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103,MATA140                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103Item()

Local aArea      := GetArea()
Local aAreaSC7   := SC7->(GetArea())
Local nPosQTD    := aScan(aHeader,{|x| Alltrim(x[2]) == "D1_QUANT" })
Local nPosPrd    := aScan(aHeader,{|x| Alltrim(x[2]) == "D1_COD" })
Local nPosPedido := aScan(aHeader,{|x| Alltrim(x[2]) == "D1_PEDIDO" })
Local nPosItemPC := aScan(aHeader,{|x| Alltrim(x[2]) == "D1_ITEMPC" })
Local nPItem     := aScan(aHeader,{|x| Alltrim(x[2]) == "D1_ITEM" })
Local nX         := 0
Local cItem      := &(ReadVar())
Local nPcToler   := IIF(ValType(SuperGetMV("MV_PCTOLER",.F.,"0"))=="C", &(SuperGetMV("MV_PCTOLER",.F.,"0"))/100,  (SuperGetMV("MV_PCTOLER",.F.,0))/100)
Local lTolerQtd  := .T.
Local lRet		 := .F.
Local lEic       := .F.
Local nFreeQt    := 0
Local lLibQt     := GETNEWPAR("MV_LIBQTEM", .F.)
Local lIs140auto := SuperGetMV("MV_IS140AU",.F.,.F.)

If !Empty(aCols[n][nPosPedido])
	dbSelectArea("SC7")
	dbSetOrder(19)
	msSeek(xFilial("SC7")+aCols[n][nPosPrd]+aCols[n][nPosPedido]+cItem)
	If Empty(SubStr(cItem,3)) .And. !Empty(SC7->C7_SEQUEN)
		lEic := .T.
	EndIf
	If !lEic .And. SC7->(Found())
		nFreeQT := 0
		If !lEic
			For nx := 1 To Len( aCols )
				If (nx # n) .And. ;
					(aCols[ nx,nPosPrd] == C7_PRODUTO) .And. ;
					(aCols[ nx,nPosPedido] == C7_NUM) .And. ;
					(aCols[ nx,nPosItemPC] == C7_ITEM) .And. ;
					!ATail( aCols[nx] )
					nFreeQT += aCols[nx,nPosQTD]
				EndIf
			Next
		Else
			/*/
			For nx := 1 To Len( aCols )
				If (nx # n) .And. ;
					(aCols[ nx,nPosPrd] == C7_PRODUTO) .And. ;
					(aCols[ nx,nPosPedido] == C7_NUM) .And. ;
					(aCols[ nx,nPosItemPC] == C7_ITEM) .And. ;
					(aCols[ nx,nPITEM] == C7_SEQUEN) .And. ;
					!ATail( aCols[nx] )
					nFreeQT += aCols[nx,nPosQTD]
				EndIf
			Next
			/*/
		EndIf

		If nPcToler > 0
			If aCols[n][nPosQtd] > (C7_QUANT+(C7_QUANT * nPcToler))
				lTolerQtd := .F.
			Endif
		Endif

		If ALTERA
			dbSelectArea("SD1")
			dbSetOrder(1)
			dbSeek(xFilial('SD1')+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA+aCols[n][nPosPrd]+aCols[n][nPItem])
			nFreeQT -= SD1->D1_QUANT
		EndIf

		dbSelectArea("SC7")

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se nao h  residuos, se possui saldo em abto e   ³
		//³ se esta liberado por alcadas se houver controle.         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ((nFreeQT:=((C7_QUANT+(C7_QUANT * nPcToler)))-C7_QUJE-C7_QTDACLA-nFreeQT) > 0 .And. lTolerQtd .And. Empty(C7_RESIDUO) .And. IIf(SuperGetMV("MV_RESTNFE")=="S", C7_CONAPRO <> "B", .T.) .And. C7_TPOP <> "P") .Or. lLibQt

			If cPaisLoc == "BRA"
				If Type("l140Auto")== "U"
					NfePC2Acols(SC7->(RecNo()),n,IIf(Empty(aCols[n][nPosQtd]).Or.aCols[n][nPosQtd]>nFreeQt,nFreeQt,aCols[n][nPosQtd]))
				Else
					NfePC2Acols(SC7->(RecNo()),n,IIf(Empty(aCols[n][nPosQtd]).Or.aCols[n][nPosQtd]>nFreeQt,nFreeQt,aCols[n][nPosQtd]),,lIs140auto)
				EndIf
            ElseIf FunName()!="MATA143"			// Não executa validação na geração de fatura originária de desembaraço para não sobrepor qtde e valor do pedido ao do desembaraço
	            LxA103SC7ToaCols(SC7->(RecNo()),n,IIf(Empty(aCols[n][nPosQtd]).Or.aCols[n][nPosQtd]>nFreeQt,nFreeQt,aCols[n][nPosQtd]))
            EndIf
			lRet 	:= .T.
		Else
			Help(' ', 1, 'A103PCNSLD')
		EndIf
	Else
		If !lEic
			Help("   ",1,"REGNOIS")
		Else
			lRet := .T.
		EndIf
	EndIf
Else
	Help("   ",1,"REGNOIS")
EndIf

RestArea(aAreaSC7)
RestArea(aArea)

Return lRet


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A103TRAVA ³ Autor ³ Aline Correa do Vale  ³ Data ³07/03/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Tratamento de DEAD-LOCK - Arquivo SB2                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata103                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103Trava()
Local aTrava    := {}
Local ni        := 0
Local nPosPrd   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_COD"})
Local nPosLoc   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_LOCAL"})
Local nPosTes   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_TES"})
Local lTrava    := .T.
Local lTravaSA1 := .T.
Local lTravaSA2 := .T.
Local lTravaSB2 := .T.
Local cFilSF4   := xFilial("SF4")
Local aAreaAnt	:= GetArea()

Static lMT103TRV := ExistBlock("MT103TRV")

If ( __TTSInUse )
	// Ponto de Entrada MT103TRV utilizado para desligar o Lock das tabelas SA1 / SA2
	If lMT103TRV
		aRetorno  := ExecBlock("MT103TRV",.F.,.F.,{cA100For,cLoja,IIf(cTipo$"DB","C","F")})
		If Type('aRetorno') == "A" .And. Len(aRetorno) >= 3
			lTravaSA1 := aRetorno[1]
			lTravaSA2 := aRetorno[2]
			lTravaSB2 := aRetorno[3]
		EndIf
	EndIf

	SF4->( dbSetOrder(1) )

	For ni := 1 to Len(aCols)
		IF ( Len(aCols[nI]) > Len(aHeader) ) .And. !(aCols[ni][Len(aCols[ni])])
			If nPosTes > 0 .And. SF4->( MsSeek(cFilSF4+aCols[ni,nPosTes]) )
				If SF4->F4_ESTOQUE == "S"
					AADD(aTrava,aCols[ni,nPosPrd]+aCols[ni,nPosLoc])
				Endif
			Else
				AADD(aTrava,aCols[ni,nPosPrd]+aCols[ni,nPosLoc])
			EndIf
		EndIf
	Next

	If cTipo $ "DB"
		If lTravaSA1
			lTrava := MultLock("SA1",{cA100For+cLoja},1)
		EndIf
	Else
		If lTravaSA2
			lTrava := MultLock("SA2",{cA100For+cLoja},1)
		EndIf
	EndIf

	If lTrava .And. Len(aTrava) > 0
		If lTravaSB2
			lTrava := MultLock("SB2",aTrava,1)
		EndIf
	EndIf

	If ( !lTrava )
		SB2->(MsRUnLock())
		SA1->(MsRUnLock())
		SA2->(MsRUnLock())
	EndIf
	RestArea(aAreaAnt)
	Return ( lTrava )
Else
	DbSelectArea("SB2")
	DbSetOrder(1)
	For ni := 1 to Len(aCols)
		IF ( Len(aCols[nI]) > Len(aHeader) ) .And. !(aCols[ni][Len(aCols[ni])])
			If nPosTes > 0 .And. SF4->( MsSeek(cFilSF4+aCols[ni,nPosTes]) )
				If SF4->F4_ESTOQUE == "S"
					If MsSeek(xFilial("SB2")+aCols[ni,nPosPrd]+aCols[ni,nPosLoc])
						lTrava := SoftLock("SB2")
					EndIf
				Endif
			Else
				If MsSeek(xFilial("SB2")+aCols[ni,nPosPrd]+aCols[ni,nPosLoc])
					lTrava := SoftLock("SB2")
				EndIf
			EndIf
		EndIf
	Next
	RestArea(aAreaAnt)
	Return(lTrava)
EndIf

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MaCanDelF1³ Autor ³ Edson Maricate        ³ Data ³11.10.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de validacao da exclusao de uma nota fiscal de entrada³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Numero do Registro do SF1.                       (OPC)³±±
±±³          ³ExpA2: Array com os pedidos de venda gerados a partir da nota³±±
±±³          ³       fiscal de entrada.                               (OPC)³±±
±±³          ³ExpA3: Array com os titulos financeiro gerados          (OPC)³±±
±±³          ³ExpL4: Indica se pode apagar notas de conhec de frete   (OPC)³±±
±±³          ³ExpL5: Indica se pode apagar notas de despesas de import(OPC)³±±
±±³          ³ExpL6: Indica se estou apagando um remito (localizacoes)(OPC)³±±
±±³          ³ExpL7: Indica se se trata de un retorno simbolico automatico,³±±
±±³          ³       no caso de ser, o retorno pode ser apagado.           ³±±
±±³          ³ExpA8: Array contendo os recnos dos titulos no SE1(devolucao)³±±
±±³          ³ExpL9: Indica se a exclusao esta sendo feita pelo SIGAEIC    ³±±
±±³          ³ExpL10:Indica se a exclusao esta sendo feita pelo SIGATMS    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a nota pode ser excluida                    ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a exclusao de uma Nota ³±±
±±³          ³fiscal de entrada/Documento de entrada.                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Function MaCanDelF1(nRecSF1,aRecSC5,aRecSE2,lCanDelFr,lCanDelDp,lRemito,lRSAuto,aRecSe1,lExcViaEIC,lExcViaTMS)
Local lEofSD3   := .T.
Local aArea		:= GetArea()
Local aAreaSD1	:= SD1->(GetArea())
Local aAreaSF8	:= SF8->(GetArea())
Local aStruSD1  := {}
Local aStruSE2  := {}

Local lQuery    := .F.
Local lRetorno	:= .F.
Local lRetAPO   := .T.
Local l100Del	:= ExistBlock("A100DEL")
Local lM103APO  := ExistBlock("M103APO")
Local lIntACD	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local lEstNeg   := (SuperGetMv("MV_ESTNEG")=="S")
Local lEECFAT	:= SuperGetMv("MV_EECFAT",.F.,.F.)
Local lR103ENEG := .F.
Local dDataFec	:= MVUlmes()
Local dDataVenc
Local dDataIni
Local dDataFim
Local lShowAviso:= (SuperGetMv("MV_AV10925",.T.,"2") == "1")
Local cLocTran  := SuperGetMV("MV_LOCTRAN",.F.,"95")
Local lAviso    := .F.
Local lAvisoISS := .F.
Local lVldRetISS:= .F.
Local lRetISSMes:= 	GetNewPar("MV_MODRISS","1") == "2"

Local nPosLote	:= 0
Local nX		:= 0
Local nSldTran  := 0
Local nSldLote  := 0
Local aLotes	:= {}
Local cMensagem := ""
Local cPrefixo  := ""
Local cQuery    := ""
Local cAliasSD1 := "SD1"
Local cAliasSE2 := "SE2"
Local nRecSD1
Local nAcICMSAPR:= 0
Local aAreaSN1  := {}
Local aRetXFin  := {}
Local cTesDR    := GetMV("MV_TESDR",,"")
Local lNumTrib	:= .T.
Local cNumTit	:= ""
Local aAreaSE2IR
Local nRecE2in

Local cSepNeg   := If("|"$MV_CPNEG,"|",",")
Local cSepProv  := If("|"$MVPROVIS,"|",",")
Local cSepRec   := If("|"$MVPAGANT,"|",",")

Local nCountSE2 := 0
Local lPriParAdtBx := .F.
Local nValorAdtFR3 := 0

Local nContDoc := 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Analisa os parametros da Rotina                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFAULT aRecSC5    := {}
DEFAULT aRecSE1    := {}
DEFAULT aRecSE2    := {}
DEFAULT lCanDelFr  := .F.
DEFAULT lCanDelDp  := .F.
DEFAULT lRemito    := .F.
DEFAULT lExcViaEIC := .F.
DEFAULT lExcViaTMS := .F.

If nRecSF1 <> Nil
	dbSelectArea("SF1")
	MsGoto(nRecSF1)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta a Pesquisa das Notas de Conhecimento de Frete e D.I.  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SF8->(dbSetOrder(2))
Do Case
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a NF possui NF de Conhec. e Desp. de Import.     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case !lCanDelFr .And. (SF8->(MsSeek(xFilial("SF8")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)) .Or. A103CTECOL(SF1->F1_DOC,SF1->F1_SERIE,SF1->F1_FILIAL,SF1->F1_FORNECE,SF1->F1_LOJA))
	Help(" ", 1, "A103CAGREG")
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao excluir NF incluida pelo MATA910                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case SF1->F1_ORIGLAN == "LF"
	Help("  ",1,"NAOCOM")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao excluir NF nao classificada                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case Empty(SF1->F1_STATUS)
	Help(" ",1,"A100NOCLAS")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verificar data do ultimo fechamento em SX6                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case dDataFec>=dDataBase .Or. dDataFec>=SF1->F1_DTDIGIT
	Help( " ", 1, "FECHTO" )
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica ultima data para operacoes fiscais                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case !FisChkExc(SF1->F1_SERIE,SF1->F1_DOC,SF1->F1_FORNECE,SF1->F1_LOJA,,"E")
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com o ACD		  				  	  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case lIntACD .And. !(CBA100DEL())
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Template acionando ponto de entrada                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case ExistTemplate("A100DEL") .And. !(ExecTemplate("A100DEL",.F.,.F.))
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para permitir ou nao a exclusao             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case l100Del .And. !(Execblock("A100DEL",.F.,.F.))
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao excluir nota de Frete Gerada pela rotina MATA116         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case SF1->F1_TIPO == "C" .And. SF1->F1_ORIGLAN == "F "  .And. !lCanDelFr
	Help(" ",1,"A100NDELFR")
	lRetorno := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao excluir nota de Despesas de Importacao                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case SF1->F1_TIPO == "C" .And. SF1->F1_ORIGLAN == " D"	.And. !lCanDelDp
	Help(" ",1,"A100NDELDP")
	lRetorno := .F.
	//ÚLocalizacoesÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao excluir NF (de devolucao ou retorno) que gerou PV se este³
	//³ ainda existe.                                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case !lRsAuto .And. !Empty(SF1->F1_PEDVEND) .And. (SF1->F1_PEDVEND == "AUTO  " .Or. Eval( {|| SC5->(DbSetORder(1)),SC5->(MsSeek(xFilial("SC5")+SF1->F1_PEDVEND) ) }) )
	If SF1->F1_PEDVEND <> "AUTO  "
		Help(" ",1,"A103PV" ,,RetTitle("C9_PEDIDO") + "  " + SF1->F1_PEDVEND,04,02)
	Else
		Help(" ",1,"A103CONS" )
	Endif
	lRetorno	:=	.F.
OtherWise
	lRetorno := .T.
EndCase

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se Documento de Entrada Original está vinculado aos outros Documentos ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

lQuery    := .T.
cAliasSD1 := GetNextAlias()

If Select(cAliasSD1) > 0
	dbSelectArea(cAliasSD1)
    dbCloseArea()
EndIf

If lRetorno
	cQuery    := "SELECT COUNT(*) NOTAORI  "
	cQuery    += "  FROM "+RetSqlName("SD1")+" SD1 "
	cQuery    += " WHERE SD1.D1_FILIAL  = '"+xFilial("SD1")+"'"
	cQuery    += "   AND SD1.D1_NFORI   = '"+SF1->F1_DOC+"'"
	cQuery    += "   AND SD1.D1_SERIORI = '"+SF1->F1_SERIE+"'"
	cQuery    += "   AND SD1.D1_FORNECE = '"+SF1->F1_FORNECE+"'"
	cQuery    += "   AND SD1.D1_LOJA    = '"+SF1->F1_LOJA+"'"
	cQuery    += "   AND SD1.D1_DOC||SD1.D1_SERIE||SD1.D1_FORNECE||SD1.D1_LOJA <>'"
	cQuery    += SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA+"'"
	cQuery    += "   AND SD1.D1_TIPO IN ('P','I','C') "
	cQuery    += "   AND SD1.D_E_L_E_T_=' ' "

	cQuery := ChangeQuery( cQuery )
	dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasSD1, .T., .T. )

	If (cAliasSD1)->NOTAORI > 0
	   	Help(' ',1,'A103NEXCOR')
	   	lRetorno := .F.
	EndIf

	(cAliasSD1)->(dbCloseArea())
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Analisa os itens da Nota fiscal de Entrada                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SD1")
dbSetOrder(1)

lQuery    := .T.
cAliasSD1 := "MACANDELF1"
aStruSD1  := SD1->(dbStruct())
cQuery    := "SELECT SD1.*,SD1.R_E_C_N_O_ SD1RECNO "
cQuery    += "  FROM "+RetSqlName("SD1")+" SD1 "
cQuery    += " WHERE SD1.D1_FILIAL   = '"+xFilial("SD1")+"'"
cQuery    += "   AND SD1.D1_DOC	     = '"+SF1->F1_DOC+"'"
cQuery    += "   AND SD1.D1_SERIE    = '"+SF1->F1_SERIE+"'"
cQuery    += "   AND SD1.D1_FORNECE  = '"+SF1->F1_FORNECE+"'"
cQuery    += "   AND SD1.D1_LOJA	 = '"+SF1->F1_LOJA+"'"
cQuery    += "   AND SD1.D1_TIPO	 = '"+SF1->F1_TIPO+"'"
cQuery    += "   AND SD1.D_E_L_E_T_	 = ' ' "
cQuery    += "ORDER BY "+SqlOrder(SD1->(IndexKey()))

cQuery := ChangeQuery(cQuery)
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)

For nX := 1 To Len(aStruSD1)
	If aStruSD1[nX][2]<>"C"
		TcSetField(cAliasSD1,aStruSD1[nX][1],aStruSD1[nX][2],aStruSD1[nX][3],aStruSD1[nX][4])
	EndIf
Next nX

While !Eof().And. (cAliasSD1)->D1_FILIAL == xFilial('SD1') .And.;
		(cAliasSD1)->D1_DOC == SF1->F1_DOC .And.;
		(cAliasSD1)->D1_SERIE == SF1->F1_SERIE .And.;
		(cAliasSD1)->D1_FORNECE == SF1->F1_FORNECE .And.;
		(cAliasSD1)->D1_LOJA == SF1->F1_LOJA .And. lRetorno

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a O.P. vinculada a uma N.F. esta encerrada     ³
	//³ ou se ja possui quantidade apontada.                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    If !(SuperGetMV("MV_PRNFBEN",.F.,.F.))
		dbSelectArea("SC2")
		dbSetOrder(1)
		If MsSeek(xFilial("SC2")+(cAliasSD1)->D1_OP) .And. !lCanDelFr
			If !Empty(SC2->C2_DATRF)
				Help("",1,"A103ENCERR")
				lRetorno := .F.
			ElseIf QtdComp(SC2->C2_QUJE,.T.) > QtdComp(0,.T.)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ`¿
				//³Ponto de entrada que permite ou não a validação da exclusão da NF vinculada a uma OP³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ`Ù
				If lM103APO
					lRetAPO := ExecBlock("M103APO",.F.,.F.)
					If ValType(lRetAPO)<> "L"
						lRetAPO := .T.
					Endif
				EndIf
				If lRetApo .And.(Type('l103Auto') <> 'U' .And. l103Auto) .Or. Aviso(OemToAnsi(STR0018),OemToAnsi(STR0048)+(cAliasSD1)->D1_OP+OemToAnsi(STR0049),{OemToAnsi(STR0016),OemToAnsi(STR0017)},nil,nil,1) == 2
					lRetorno := .F.
				EndIf
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ AvalMovDiv - Funcao utilizada para avaliar possiveis divergencias de     |
	//|              saldo no estorno do movimento selecionado.                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !(SF1->F1_TIPO$"PIC") .And. AvalMovDiv((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL,(cAliasSD1)->D1_LOTECTL,(cAliasSD1)->D1_NUMLOTE,(cAliasSD1)->D1_NUMSEQ,(cAliasSD1)->D1_TES)
		lRetorno := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona o Arquivo SF4.                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea('SF4')
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+(cAliasSD1)->D1_TES)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a posicao do Pedido de Vendas  (Devolucao)          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. !Empty((cAliasSD1)->D1_NUMPV)
		dbSelectArea('SC5')
		If MsSeek(xFilial("SC5")+(cAliasSD1)->D1_NUMPV)
			aAdd(aRecSC5,SC5->(RecNo()))
		EndIf
		dbSelectArea('SC6')
		dbSetOrder(1)
		If MsSeek(xFilial("SC6")+(cAliasSD1)->D1_NUMPV+(cAliasSD1)->D1_ITEMPV)
			If SC6->C6_QTDLIB+SC6->C6_QTDENT <> 0
				If (Type('l103Auto') <> 'U' .And. l103Auto) .Or. Aviso(OemToAnsi(STR0018),OemToAnsi(STR0015),{OemToAnsi(STR0016),OemToAnsi(STR0017)}) == 2 //"O pedido de vendas gerado pelo Docto. de devolucao ja foi liberado ou atendido e nao sera excluido. Deseja continuar ?"###"Continua"###"Abandona"
					lRetorno := .F.
					Exit
				EndIf
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trava os registros do SC7.                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. !Empty((cAliasSD1)->D1_PEDIDO)
		dbSelectArea('SC7')
		dbSetOrder(19)
		If MsSeek(xFilial('SC7')+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_PEDIDO+(cAliasSD1)->D1_ITEMPC)
			If !SoftLock('SC7')
				lRetorno := .F.
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trava os registros do SD7 e SD3                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. !Empty((cAliasSD1)->D1_NUMCQ)
		dbSelectArea("SD7")
		dbSetOrder(1)
		If MsSeek(xFilial("SD7")+(cAliasSD1)->D1_NUMCQ+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL)
			While !Eof() .And.lRetorno .And. xFilial("SD7") == SD7->D7_FILIAL .And.;
					(cAliasSD1)->D1_NUMCQ == SD7->D7_NUMERO .And.;
					(cAliasSD1)->D1_COD == SD7->D7_PRODUTO .And.;
					(cAliasSD1)->D1_LOCAL == SD7->D7_LOCAL

				If (cAliasSD1)->D1_TIPO == 'N' .And. (SD7->D7_TIPO==1 .Or. SD7->D7_TIPO==2 ) .And. Empty(SD7->D7_ESTORNO)
					Help(' ',1,'A100CQ')
					lRetorno := .F.
					Exit
				ElseIf !SoftLock("SD7")
					lRetorno := .F.
					Exit
				Else
					dbSelectArea("SD3")
					dbSetOrder(4)
					If lRetorno .And. MsSeek(xFilial("SD3")+SD7->D7_NUMSEQ)
						While !Eof() .And. lRetorno .And. SD3->D3_FILIAL == xFilial("SD3") .And.;
								SD3->D3_NUMSEQ == SD7->D7_NUMSEQ
							If !SoftLock("SD3")
								lRetorno := .F.
								Exit
							EndIf
							dbSelectArea("SD3")
							dbSkip()
						EndDo
					EndIf
				EndIf
				dbSelectArea("SD7")
				dbSkip()
			EndDo
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a existencia de Poder de Terceiros                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. SF4->F4_PODER3=="R"
		dbSelectArea("SB6")
		dbSetOrder(3)
		MsSeek(xFilial("SB6")+(cAliasSD1)->D1_NUMSEQ+(cAliasSD1)->D1_COD+'R')
		While ( !Eof() .And. lRetorno .And. xFilial("SB6") == SB6->B6_FILIAL .And.;
				(cAliasSD1)->D1_NUMSEQ==SB6->B6_IDENT .And.;
				(cAliasSD1)->D1_COD==SB6->B6_PRODUTO .And.;
				"R"==SB6->B6_PODER3 )
			If SB6->B6_QUANT<>SB6->B6_SALDO .And. SB6->B6_TIPO=="D"
				Help(' ',1,'A520NPODER')
				lRetorno := .F.
			EndIf
			dbSelectArea("SB6")
			dbSkip()
		EndDo
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao do Ativo Fixo - Travamento                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. (ExistBlock ("M103XATF"))
		lRetorno	:=	ExecBlock ("M103XATF", .F., .F., {cAliasSD1})
	Else
		If lRetorno .And. !Empty((cAliasSD1)->D1_CBASEAF)
			lRetorno := M103XAFEXC((cAliasSD1)->D1_DOC,(cAliasSD1)->D1_SERIE,(cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,(cAliasSD1)->D1_COD)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica a existencia do CIAP                                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno .And. !Empty((cAliasSD1)->D1_CODCIAP)
			dbSelectArea('SF9')
			dbSetOrder(1)
			If MsSeek(xFilial("SF9")+(cAliasSD1)->D1_CODCIAP)
				If !Empty( SN1->N1_CODCIAP ) .Or. !Empty((cAliasSD1)->D1_CODCIAP)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Este WHILE se deve ao desmabrento no ativo fixo(SN1) pela quantidade.³
					//³A tabela SN1 eh posicionada logo acima                               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nAcICMSAPR	:=	0
					aAreaSN1	:=	SN1->(GetArea ())

					If Alltrim(SN1->N1_NFESPEC) == ""
						DbSelectArea("SN1")
						DbSetOrder(8)
						If !DbSeek(xFilial("SN1")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+ "     " +(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_ITEM)
							RestArea (aAreaSN1)
						EndIf
					Else
					 	If (cAliasSD1)->D1_CODCIAP<>SN1->N1_CODCIAP
							DbSelectArea("SN1")
							DbSetOrder(4)
							If !DbSeek(xFilial("SN1")+(cAliasSD1)->D1_CODCIAP)
								RestArea (aAreaSN1)
							EndIf
						EndIf
					EndIf

					Do While !SN1->(Eof ()) .And.;
						(cAliasSD1)->D1_CODCIAP==SN1->N1_CODCIAP
						nAcICMSAPR	+=	SN1->N1_ICMSAPR

						SN1->(DbSkip ())
					EndDo
					RestArea (aAreaSN1)
					If  (((!Empty((cAliasSD1)->D1_CBASEAF) .And. SF9->F9_ICMIMOB <> nAcICMSAPR).Or.(Empty((cAliasSD1)->D1_CBASEAF) .And.SF9->F9_ICMIMOB <> 0)).Or.;
							SF9->F9_BXICMS <> 0 .Or. SF9->F9_MOTIVO <> " " .Or. SF9->F9_VLESTOR <> 0)
						Help("  ",1,"A100CIAPDE")
						lRetorno := .F.
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se algum produto esta sendo inventariado.           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. BlqInvent((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL)
		Help("  ",1,"BLQINVENT",,(cAliasSD1)->D1_COD+STR0022+(cAliasSD1)->D1_LOCAL,1,11) //"Armazem: "
		lRetorno := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se algum produto ja foi distribuido                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Localiza((cAliasSD1)->D1_COD)
		dbSelectArea('SDA')
		dbSetOrder(1)
		If lRetorno .And. MsSeek(xFilial("SDA")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_NUMSEQ+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA)
			If !(SDA->DA_QTDORI == SDA->DA_SALDO)
				Help(" ",1,"SDAJADISTR")
				lRetorno := .F.
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a quantidade devolvida.                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. ((cAliasSD1)->D1_QTDEDEV <> 0 .Or. (cAliasSD1)->D1_VALDEV <> 0)
		Help(' ',1,'NAOEXCL')
		lRetorno := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a quantidade clasificada (remitos de localizacoes)  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. lRemito .And. (cAliasSD1)->D1_QTDACLA <> (cAliasSD1)->D1_QUANT
		Help(' ',1,'NAOEXCLREM')
		lRetorno := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o remito esta amarrada a alguma nota de Credito  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. lRemito
		SD1->(DbSetOrder(10))
		If SD1->(MsSeek(xFilial("SD1")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_DOC))
			Help(' ',1,'NAOEXCLREM',,SD1->D1_ESPECIE+" "+SerieNfId("SD1",2,"D1_SERIE")+"/"+SD1->D1_DOC,1,11)
			lRetorno := .F.
		Endif
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o Servico do WMS.                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. !Empty((cAliasSD1)->D1_SERVIC) .And. IntDL() .And. FindFunction("WmsAvalSD1")
		lRetorno := WmsAvalSD1("7",cAliasSD1)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Totaliza no array aLotes para validar a exclusao.            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. Rastro((cAliasSD1)->D1_COD).And. SF4->F4_ESTOQUE=='S'
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ aLotes[nx][1] : Codigo do Produto        ³
		//³ aLotes[nx][2] : Almoxarifado             ³
		//³ aLotes[nx][3] : Lote                     ³
		//³ aLotes[nx][4] : SubLote                  ³
		//³ aLotes[nx][5] : OP                       ³
		//³ aLotes[nx][6] : Numero Sequencial        ³
		//³ aLotes[nx][7] : Quantidade               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPosLote :=Ascan(aLotes,{|x| x[1]+x[2]+x[3]+x[4]==(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_LOTECTL+(cAliasSD1)->D1_NUMLOTE+(cAliasSD1)->D1_OP+(cAliasSD1)->D1_NUMSEQ})
		If nPosLote > 0
			aLotes[nPosLote][7] += (cAliasSD1)->D1_QUANT
		Else
			aADD(aLotes,{(cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL,(cAliasSD1)->D1_LOTECTL,(cAliasSD1)->D1_NUMLOTE,(cAliasSD1)->D1_OP,(cAliasSD1)->D1_NUMSEQ,(cAliasSD1)->D1_QUANT})
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se Sld no B2 ficar  Neg. ou Menor que Sld em Reserva³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. SF4->F4_ESTOQUE == "S" .And. (cAliasSD1)->D1_QUANT > 0
		SB2->(dbSetOrder(1))
		If SB2->(MsSeek(xFilial('SB2')+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL, .F.))
			nSaldoB2 := (SB2->B2_QATU-(cAliasSD1)->D1_QUANT)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe movimento de requisicao do material para a OP³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty((cAliasSD1)->D1_OP) .OR. (IntePms() .and. PmsExAFN(cAliasSD1))
				SD3->(dbSetOrder(4))
				If SD3->(dbSeek(xFilial("SD3")+(cAliasSD1)->D1_NUMSEQ))
					nSaldoB2 += SD3->D3_QUANT
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica se existe movimento de material em Transito            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (cAliasSD1)->D1_TRANSIT == 'S'
				SD3->(dbSetOrder(4))
				If SD3->(dbSeek(xFilial("SD3")+(cAliasSD1)->D1_NUMSEQ))
					nSaldoB2 += SD3->D3_QUANT
				EndIf
			EndIf
			If QtdComp(nSaldoB2)<QtdComp(0)
			    If lEstNeg  //Permite Estoque Negativo
			        If (Rastro((cAliasSD1)->D1_COD) .Or. Localiza((cAliasSD1)->D1_COD))  // MV_ESTNEG = S e Produto com Rastro / Localização, não permite estoque negativo
						If !(Type('l103Auto') <> 'U' .And. l103Auto)
							Aviso(STR0018,STR0019 + AllTrim((cAliasSD1)->D1_COD)+"/"+(cAliasSD1)->D1_LOCAL + STR0023 + AllTrim(Str(nSaldoB2))+") ",{STR0025}) //"Atencao" //"O Saldo do Prod/Loc "###" ficara negativo apos a Exclusao ("###"Aborta"
						EndIf
						lRetorno := .F.
			    	Else
						If !(Type('l103Auto') <> 'U' .And. l103Auto)
					    	If !(Rastro((cAliasSD1)->D1_COD) .And. Localiza((cAliasSD1)->D1_COD)) .And. !(FunName() $ 'EICDI154')  // MV_ESTNEG = S e Produto sem Rastro / Localização, avisa que o estoque ficara negativo  e nao originado do Recebimento de Importacao
						    	lRetorno := (Aviso(STR0018,STR0019 + AllTrim((cAliasSD1)->D1_COD)+'/'+(cAliasSD1)->D1_LOCAL + STR0023 + AllTrim(Str(nSaldoB2)) + STR0024,{STR0025,STR0016}) == 2) //"Atencao"###"O Saldo do Prod/Loc "###"Continua" //" ficara negativo apos a Exclusao ("###"). Continua?"###"Aborta"
						    EndIf
						EndIf
					EndIf
				Else  // Não Permite Estoque Negativo
					If !(Type('l103Auto') <> 'U' .And. l103Auto)
					    lR103ENEG:=A103ValEstNeg((cAliasSD1)->D1_COD,cAliasSD1)
					EndIf
					lRetorno := lR103ENEG
			    EndIf
			ElseIf QtdComp(nSaldoB2)<QtdComp(SB2->B2_RESERVA)
				If lEstNeg   //Permite Estoque Negativo
				    If (Rastro((cAliasSD1)->D1_COD) .Or. Localiza((cAliasSD1)->D1_COD))  // MV_ESTNEG = S e Produto com Rastro / Localização, não permite estoque negativo
						If !(Type('l103Auto') <> 'U' .And. l103Auto)
							Aviso(STR0018,STR0019 + AllTrim((cAliasSD1)->D1_COD)+"/"+(cAliasSD1)->D1_LOCAL + STR0026 + AllTrim(Str(nSaldoB2))+")",{STR0025}) //"Atencao"###"O Saldo do Prod/Loc " //" ficara Menor que o Saldo em Reserva apos a Exclusao ("###"Aborta"
						EndIf
						lRetorno := .F.
					Else
						If !(Type('l103Auto') <> 'U' .And. l103Auto)
						    If !(Rastro((cAliasSD1)->D1_COD) .And. Localiza((cAliasSD1)->D1_COD))  .And. !(FunName() $ 'EICDI154')   // MV_ESTNEG = S e Produto sem Rastro / Localização, avisa que o estoque ficara negativo
						    	lRetorno := (Aviso(STR0018,STR0019 + AllTrim((cAliasSD1)->D1_COD)+'/'+(cAliasSD1)->D1_LOCAL + STR0023 + AllTrim(Str(nSaldoB2)) + STR0024,{STR0025,STR0016}) == 2) //"Atencao"###"O Saldo do Prod/Loc "###"Continua" //" ficara negativo apos a Exclusao ("###"). Continua?"###"Aborta"
					    	EndIf
				    	EndIf
			    	EndIf
			  	Else  // Não Permite Estoque Negativo
				  	If !(Type('l103Auto') <> 'U' .And. l103Auto)
					    lR103ENEG:=A103ValEstNeg((cAliasSD1)->D1_COD,cAliasSD1)
					EndIf
					lRetorno := lR103ENEG
				EndIf
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o item de nota originou-se do SIGAEIC                            ³
	//³ Permite a exclusao apenas quando a chamada da exclusao for feita pelo EIC    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. !lExcViaEIC .And. !Empty( ( cAliasSD1 )->D1_TIPO_NF )
		Help( "", 1, "A103EXCIMP" )  // "Este documento nao pode ser excluido pois foi criado pelo SIGAEIC. A exclusao devera ser efetuada pelo SIGAEIC."
		lRetorno := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o item de nota originou-se do SIGATMS                            ³
	//³ Permite a exclusao apenas quando a chamada da exclusao for feita pelo TMS    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	SF4->(DbSetOrder(1))
	If SF4->(DbSeek(xFilial('SF4')+cTesDR)) .And. SF4->F4_ESTOQUE == 'S'
		dbSelectArea('DTC')
		dbSetOrder(2) //-- DTC_FILIAL+DTC_NUMNFC+DTC_SERNFC+DTC_CLIREM+DTC_LOJREM
		IF MsSeek(xFilial('DTC') + SF1->F1_DOC + SF1->F1_SERIE + SF1->F1_FORNECE + SF1->F1_LOJA, .F.)
			Help('', 1, 'A103EXCTMS') //-- 'Este documento nao pode ser excluido pois foi criado pelo SIGATMS. A exclusao devera ser efetuada pelo SIGATMS.'
			lRetorno := .F.
		EndIf
	EndIf

	dbSelectArea(cAliasSD1)
	dbSkip()

EndDo
If lQuery
	dbSelectArea(cAliasSD1)
	dbCloseArea()
	dbSelectArea("SD1")
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se os Lotes podem ser excluidos                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ aLotes[nx][1] : Codigo do Produto        ³
	//³ aLotes[nx][2] : Almoxarifado             ³
	//³ aLotes[nx][3] : Lote                     ³
	//³ aLotes[nx][4] : SubLote                  ³
	//³ aLotes[nx][5] : OP                       ³
	//³ aLotes[nx][6] : Numero Sequencial        ³
	//³ aLotes[nx][7] : Quantidade               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 to Len(aLotes)

		nSldLote := SaldoLote(aLotes[nX][1],aLotes[nX][2],aLotes[nX][3],aLotes[nX][4],,,.T.)
		// Verifica o saldo em transito disponivel
		nSldTran := SaldoLote(aLotes[nX][1],cLocTran,aLotes[nX][3],aLotes[nX][4],,,.T.)
		If (nSldLote+nSldTran) < aLotes[nX][7]
			If !Empty(aLotes[nx,5])
				dbSelectArea("SD3")
				dbSetOrder(4)
				MsSeek(xFilial("SD3")+aLotes[nx,6])
				While !Eof() .And. SD3->D3_CF # "RE5" .And. SD3->D3_NUMSEQ == aLotes[nx,6]
					dbSkip()
				End
				lEofSD3 := IIF(SD3->D3_NUMSEQ # aLotes[nx,6],.T.,.F.)
				If lEofSD3
					Help(" ",1,"A100NOLOTE",,aLotes[nX,1]+"  "+aLotes[nX,2]+"    "+aLotes[nX,3],5,4)
					lRetorno := .F.
					Exit
				EndIf
			Else
				Help(" ",1,"A100NOLOTE",,aLotes[nX,1]+"  "+aLotes[nX,2]+"    "+aLotes[nX,3],5,4)
				lRetorno := .F.
				Exit
			EndIf
		EndIf
	Next
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se as duplicatas podem ser excluidas  SE2           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. (ExistBlock ("M103XFIN"))
	aRetXFin	:= ExecBlock ("M103XFIN", .F., .F. , {lAviso,lAvisoISS})
	If ValType(aRetXFin) == "A" .And. Len(aRetXFin) <= 3
		lRetorno	:= IIF(ValType(aRetXFin[1]) == "L",aRetXFin[1],lRetorno)
		lAviso		:= IIF(ValType(aRetXFin[2]) == "L",aRetXFin[2],lAviso)
		lAvisoISS	:= IIF(ValType(aRetXFin[3]) == "L",aRetXFin[3],lAvisoISS)
	EndIf
EndIf

If lRetorno
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica o Prefixo correto da Nota fiscal de Entrada         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cPrefixo	:= IIf(Empty(SF1->F1_PREFIXO),&(SuperGetMV("MV_2DUPREF")),SF1->F1_PREFIXO)
	dbSelectArea("SE2")
	dbSetOrder(6)

	lQuery    := .T.
	aStruSE2  := SE2->(dbStruct())
	cAliasSE2 := "MACANDELF1"
	cQuery    := "SELECT SE2.*,SE2.R_E_C_N_O_ SE2RECNO "
	cQuery    += "  FROM "+RetSqlName("SE2")+" SE2 "
	cQuery    += " WHERE SE2.E2_FILIAL   = '"+xFilial("SE2")+"'"
	cQuery    += "   AND SE2.E2_FORNECE  = '"+SF1->F1_FORNECE+"'"
	cQuery    += "   AND SE2.E2_LOJA	 = '"+SF1->F1_LOJA+"'"
	cQuery    += "   AND SE2.E2_PREFIXO  = '"+cPrefixo+"'"
	cQuery    += "   AND SE2.E2_NUM		 = '"+SF1->F1_DUPL+"'"
	cQuery    += "   AND SE2.D_E_L_E_T_  = ' ' "
	cQuery    += "ORDER BY "+SqlOrder(SE2->(IndexKey()))

	cQuery := ChangeQuery(cQuery)
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSE2,.T.,.T.)

	For nX := 1 To Len(aStruSE2)
		If aStruSE2[nX][2]<>"C"
			TcSetField(cAliasSE2,aStruSE2[nX][1],aStruSE2[nX][2],aStruSE2[nX][3],aStruSE2[nX][4])
		EndIf
	Next nX

	If cPaisLoc $ "BRA|MEX" .and. SF1->F1_TIPO != "D" .and. (cAliasSE2)->(!Eof())
		If lRetorno .and. A120UsaAdi(SF1->F1_COND)
			If !Empty((cAliasSE2)->E2_BAIXA) .and. (cAliasSE2)->E2_VALOR != (cAliasSE2)->E2_SALDO
				cQ := "SELECT SUM(FR3_VALOR) AS FR3_VALOR "
				cQ += "  FROM "+RetSqlName("FR3")
				cQ += " WHERE FR3_FILIAL = '"+xFilial("FR3")+"' "
				cQ += "   AND FR3_CART   = 'P' "
				cQ += "   AND FR3_TIPO   IN "+FormatIn(MVPAGANT,"/")+" "
				cQ += "   AND FR3_FORNEC = '"+SF1->F1_FORNECE+"' "
				cQ += "   AND FR3_LOJA   = '"+SF1->F1_LOJA+"' "
				cQ += "   AND FR3_DOC    = '"+SF1->F1_DOC+"' "
				cQ += "   AND FR3_SERIE  = '"+SF1->F1_SERIE+"' "
				cQ += "   AND D_E_L_E_T_ = ' ' "

				cQ := ChangeQuery(cQ)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQ),"TRBFR3",.T.,.T.)

				TcSetField("TRBFR3","FR3_VALOR","N",TamSX3("FR3_VALOR")[1],TamSX3("FR3_VALOR")[2])

			   nValorAdtFR3 := TRBFR3->FR3_VALOR

			   TRBFR3->(dbCloseArea())
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ compara o valor baixado para o titulo ( E2_VALOR - E2_SALDO ), com o valor dos adiantamentos. Se o valor for igual, continua a exclusao   ³
				//³ do documento, se o valor for diferente eh porque houveram outras baixas para o titulo, neste caso, nao eh possivel excluir o documento,   ³
				//³ primeiro deve-se excluir estas outras baixas no Financeiro.  												                                           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÙ
				If (cAliasSE2)->(E2_VALOR-E2_SALDO) = nValorAdtFR3
					If !ApMsgYesNo(STR0106 + CRLF+ STR0107) //"Por tratar-se de condição de pagamento com Adiantamento, a exclusão do Documento de Entrada também irá excluir a compensação do(s) título(s) de adiantamento associado(s) a este Documento de Entrada no momento da sua geração."#CRLF#"Deseja continuar?"
						lRetorno := .F.
			   	Endif
		   	Else
			   	lRetorno := .F.
			   	Help(" ",1,"FA050BAIXA")
				Endif
			Endif
		Endif
	Endif

	dbSelectArea(cAliasSE2)

	While ( !Eof() .And. lRetorno .And.;
			xFilial("SE2")  == (cAliasSE2)->E2_FILIAL  .And.;
			SF1->F1_FORNECE == (cAliasSE2)->E2_FORNECE .And.;
			SF1->F1_LOJA    == (cAliasSE2)->E2_LOJA    .And.;
			cPrefixo	    == (cAliasSE2)->E2_PREFIXO .And.;
			SF1->F1_DUPL	== (cAliasSE2)->E2_NUM )
		If (cAliasSE2)->E2_TIPO == MVNOTAFIS
			aadd(aRecSE2,If(lQuery,(cAliasSE2)->SE2RECNO,(cAliasSE2)->(RecNo())))

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ se for nota fiscal com adiantamento compensado, valida se a nota fiscal tem somente uma parcela no contas a pagar                                        ³
			//³ se for somente 1 parcela, segue o cancelamento e nao valida se o titulo estah baixado, pois a compensacao desta parcela vai ser desfeita na rotina       ³
			//³ A103Grava                                                                                                                                                ³
			//³ se for mais de uma parcela, valida as parcelas a partir da segunda, para checar se hah alguma parcela baixada                                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cPaisLoc $ "BRA|MEX"
				If SF1->F1_TIPO != "D"
					If nCountSE2 = 0
						If A120UsaAdi(SF1->F1_COND)
		   					If !Empty((cAliasSE2)->E2_BAIXA) .and. (cAliasSE2)->E2_VALOR != (cAliasSE2)->E2_SALDO  //tem baixa para o adiantamento
		   						lPriParAdtBx := .T.
		   					Endif
				   		Endif
				   	Endif
			   	Endif
		   	Endif

			If IIf((cPaisLoc == "BRA" .and. lPriParAdtBx),.F.,!FaCanDelCP(cAliasSE2,"MATA100"))
				lRetorno := .F.
				Exit
			EndIf

			If lRetISSMes
				dDataVenc := (cAliasSE2)->E2_VENCREA
			EndIf

			If ((cAliasSE2)->E2_PRETPIS == "2" .Or. (cAliasSE2)->E2_PRETCOF == "2" .Or. (cAliasSE2)->E2_PRETCSL == "2") .And.;
				((cAliasSE2)->E2_VRETPIS == 0 .Or. (cAliasSE2)->E2_VRETCOF == 0 .Or. (cAliasSE2)->E2_VRETCSL == 0)
				lAviso   := .T.
			Endif

			If (cAliasSE2)->E2_ISS > 0 .Or. (cAliasSE2)->E2_VRETISS > 0
				lVldRetISS := .T.
		EndIf
		lPriParAdtBx := .F.
		nCountSE2++

		EndIf
		dbSelectArea(cAliasSE2)
		dbSkip()
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Apaga tambem os registro de impostos	   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAreaSE2IR := GetArea()
	dbSelectArea("SE2")
	dbSetOrder(6)
	dbSeek(xFilial("SE2")+SF1->F1_FORNECE+SF1->F1_LOJA+cPrefixo+SF1->F1_DUPL) //xFilial("SE2")+cPrefixo+SF1->F1_DUPL )

    If (SE2->E2_FILIAL+SE2->E2_FORNECE+SE2->E2_LOJA+SE2->E2_PREFIXO+SE2->E2_NUM == ;
		(xFilial("SE2")+SF1->F1_FORNECE+SF1->F1_LOJA+cPrefixo+SF1->F1_DUPL))
		nRecE2in:=SE2->(RecNo())
		dbSetOrder(0)
		SE2->(MsGoto(nRecE2in))
		While (!EOF() .And. (SE2->E2_FILIAL+SE2->E2_PREFIXO+SE2->E2_NUM == (xFilial("SE2")+cPrefixo+SF1->F1_DUPL)) .Or. ;
		(SE2->E2_FILIAL+SE2->E2_PREFIXO+SE2->E2_NUM == (xFilial("SE2")+(SuperGetMv("MV_PREFPIS",.F.,"PIS"))+SF1->F1_DUPL)) .Or.;
		(SE2->E2_FILIAL+SE2->E2_PREFIXO+SE2->E2_NUM == (xFilial("SE2")+(SuperGetMv("MV_PREFCOF",.F.,"COF"))+SF1->F1_DUPL)))
			If SE2->E2_NATUREZ = &(GetMv("MV_IRF")) .And. SE2->E2_SALDO != 0 .And. aScan(aRecSE2,SE2->(RecNo())) == 0
				aadd(aRecSE2,SE2->(RecNo()))
			ElseIf SE2->E2_NATUREZ = SuperGetMv("MV_PISIMP",.F.,"") .And. SE2->E2_SALDO != 0 .And. aScan(aRecSE2,SE2->(RecNo())) == 0
				aadd(aRecSE2,SE2->(RecNo()))
			ElseIf SE2->E2_NATUREZ = SuperGetMv("MV_COFIMP",.F.,"") .And. SE2->E2_SALDO != 0 .And. aScan(aRecSE2,SE2->(RecNo())) == 0
				aadd(aRecSE2,SE2->(RecNo()))
			ElseIf SE2->E2_NATUREZ = SuperGetMv("MV_ISSIMP",.F.,"") .And. SE2->E2_SALDO != 0 .And. aScan(aRecSE2,SE2->(RecNo())) == 0
				aadd(aRecSE2,SE2->(RecNo()))
			ElseIf (SE2->E2_FORNECE+SE2->E2_LOJA  <> SF1->F1_FORNECE+SF1->F1_LOJA)
				Exit
			EndIf
			dbSkip()
		EndDo
  	EndIf
	RestArea(aAreaSE2IR)
	If lQuery
		dbSelectArea(cAliasSE2)
		dbCloseArea()
		dbSelectArea("SE2")
	EndIf
EndIf

If lRetorno .And. lRetISSMes .And. !Empty(dDataVenc) .And. lVldRetISS
	dDataIni:= FirstDay(dDataVenc)
	dDataFim:= LastDay(dDataVenc)

	lQuery    := .T.
 	cAliasSE2 := GetNextAlias()

	cQuery := "SELECT E2_PREFIXO, E2_NUM, E2_ISS, E2_VRETISS, SE2.R_E_C_N_O_ SE2RECNO "
	cQuery += "  FROM "+RetSqlName( "SE2" ) + " SE2 "
	cQuery += " WHERE E2_FILIAL   = '"+xFilial("SE2")+"'"
	cQuery += "   AND E2_FORNECE  = '"+SF1->F1_FORNECE	+ "'"
	cQuery += "   AND E2_LOJA     = '"+SF1->F1_LOJA+"'"
	cQuery += "   AND E2_VENCREA  >= '"+DToS(dDataIni)+"'"
	cQuery += "   AND E2_VENCREA  <= '"+DToS(dDataFim)+"'"
	cQuery += "   AND (E2_ISS > 0 OR E2_VRETISS > 0)"
	cQuery += "   AND E2_TIPO NOT IN " + FormatIn(MVABATIM,"|")
	cQuery += "   AND E2_TIPO NOT IN " + FormatIn(MV_CPNEG,cSepNeg)
	cQuery += "   AND E2_TIPO NOT IN " + FormatIn(MVPROVIS,cSepProv)
	cQuery += "   AND E2_TIPO NOT IN " + FormatIn(MVPAGANT,cSepRec)
	cQuery += "   AND D_E_L_E_T_=' '"

	cQuery := ChangeQuery( cQuery )
	dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasSE2, .F., .T. )

    TcSetField(cAliasSE2,"E2_ISS","N",TamSX3("E2_ISS")[1],TamSX3("E2_ISS")[2])
    TcSetField(cAliasSE2,"E2_VRETISS","N",TamSX3("E2_VRETISS")[1],TamSX3("E2_VRETISS")[2])

	While !(cAliasSE2)->(Eof())
		If cPrefixo == (cAliasSE2)->E2_PREFIXO .And.;
	       SF1->F1_DUPL == (cAliasSE2)->E2_NUM
			(cAliasSE2)->(dbSkip())
			If (cAliasSE2)->(Eof())
				lAvisoISS:= .F.
				lRetorno := .T.
			ElseIf (cAliasSE2)->E2_ISS > 0
				lAvisoISS:= .T.
				lRetorno := .F.
				Exit
			EndIf
		Else
			If (cAliasSE2)->E2_ISS > 0
				lAvisoISS:= .T.
				lRetorno := .F.
			End
			(cAliasSE2)->(dbSkip())
		EndIf
	EndDo
	If lQuery
		dbSelectArea(cAliasSE2)
		dbCloseArea()
		dbSelectArea("SE2")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se as duplicatas podem ser excluidas  SE1           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. SF1->F1_TIPO == 'D'
	dbSelectArea('SE1')
	dbSetOrder(2)
	If MsSeek(xFilial("SE1")+SF1->F1_FORNECE+SF1->F1_LOJA+cPrefixo+SF1->F1_DOC)
		While !Eof().And. lRetorno .And. xFilial()+SF1->F1_FORNECE+SF1->F1_LOJA+cPrefixo+SF1->F1_DOC==;
				E1_FILIAL+E1_CLIENTE+E1_LOJA+E1_PREFIXO+E1_NUM
			If !(SE1->E1_TIPO$ MV_CRNEG)
				dbSelectArea('SE1')
				dbSkip()
				Loop
			EndIf
			aadd(aRecSE1,SE1->(RecNo()))
			If SE1->E1_SALDO <> SE1->E1_VALOR
				Help(' ',1,'A100FINBX')
				lRetorno := .F.
			ElseIf !SoftLock('SE1')
				lRetorno := .F.
			EndIf
			dbSelectArea('SE1')
			dbSkip()
		EndDo
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a NFE gerou Imposto ICMS ANTECIPACAO no SE2 CAPag³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !Empty(SF1->F1_NUMTRIB)
	If AllTrim(SF1->F1_NUMTRIB) == "N"
		lNumTrib := .F.
	EndIf
	cNumTit := SF1->F1_NUMTRIB
Else
	cNumTit := SF1->F1_DOC
EndIf

If lRetorno .And. cPaisloc=="BRA" .And. lNumTrib
	dbSelectArea("SE2")
	SE2->(dbsetOrder(1))
	If dbSeek(xFilial("SE2") + "ICM" + cNumTit)
		Do While SE2->(!Eof()) .And. SE2->E2_PREFIXO+SE2->E2_NUM == "ICM" + cNumTit
			//Se o titulo sofreu pagamento nao permitir excluir a NFE
			If !Empty(SE2->E2_BAIXA).And. SE2->E2_SALDO<>SE2->E2_VALOR .And. ;
				ALLTRIM(SE2->E2_TIPO)=="TX" .And. ALLTRIM(SE2->E2_ORIGEM) == "MATA103"

				cMensagem:=" Não é possível excluir esse documento por "+CHR(10)
				cMensagem+="estar vinculado a um título a pagar de imposto "+CHR(10)
				cMensagem+="( "+SE2->E2_NUM+"/"+SE2->E2_PREFIXO+") baixado total ou parcialmente."+CHR(10)
				cMensagem+="Para excluir esse documento, será necessário "+CHR(10)
				cMensagem+="primeiramente estornar esse título através "+CHR(10)
				cMensagem+="do módulo financeiro."

				Help(" ",1,"NAOEXCNFS","NAOEXCNFS",cMensagem,1,0)
				lRetorno := .F.
			Endif
			SE2->(DbSkip())
		EndDo
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Integracao com o EEC     											|
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. lEECFAT
	lRetorno := EECFAT3("VLD",.T.)
EndIf

If lAviso .And. lShowAviso
	If !(Type('l103Auto') <> 'U' .And. l103Auto)
		Aviso(OemToAnsi(STR0018),OemToAnsi(STR0039),{OemToAnsi(STR0038)},2)
	EndIf
ElseIf lAvisoISS
	If !(Type('l103Auto') <> 'U' .And. l103Auto)
		Aviso(OemToAnsi(STR0018),OemToAnsi(STR0041),{OemToAnsi(STR0038)},2)
	EndIf
Endif

If !lRetorno .And. lExcViaEIC
	lMsErroAuto := .T.
EndIf

RestArea(aAreaSD1)
RestArea(aAreaSF8)
RestArea(aArea)

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A103Potenc  ³Autor³Rodrigo de A. Sartorio³ Data ³ 17/06/02 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Validacao para digitar a potencia do Lote corretamente     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Mata103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103Potenc()
LOCAL lRet      := .T.
LOCAL cCod		:= aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D1_COD"})]
LOCAL cLocal    := aCols[n][aScan(aHeader,{|x|Alltrim(x[2])=="D1_LOCAL"})]
LOCAL nPosLote  := aScan(aHeader,{|x|Alltrim(x[2])=="D1_NUMLOTE"})
LOCAL nPosLotCTL:= aScan(aHeader,{|x|Alltrim(x[2])=="D1_LOTECTL"})
LOCAL nPotencia := &(ReadVar())
LOCAL aAreaSB8  := SB8->(GetArea())
LOCAL cAlias    := Alias()
If nPotencia <> 0
	If !Rastro(cCod)
		Help(" ",1,"NAORASTRO")
		lRet:=.F.
	Else
		If !PotencLote(cCod)
			Help(" ",1,"NAOCPOTENC")
			lRet:=.F.
		EndIf
		If lRet .And. ((nPosLotCTL > 0 .And. !Empty(aCols[n,nPosLotCTL])) .Or. (nPosLote > 0 .And. !Empty(aCols[n,nPosLote])))
			// Verifica se a data de validade pode ser utilizada
			dbSelectArea("SB8")
			dbSetOrder(3)
			If MsSeek(xFilial("SB8")+cCod+cLocal+aCols[n,nPosLotCTL]+IF(Rastro(cCod,"S"),+aCols[n,nPosLote],"")) .And. nPotencia # SB8->B8_POTENCI
				Help(" ",1,"POTENCORI")
				&(ReadVar()):=SB8->B8_POTENCI
			EndIf
			RestArea(aAreaSB8)
		EndIf
	EndIf
EndIf

dbSelectArea(cAlias)
Return lRet


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MaAvalSF1 ³ Autor ³ Eduardo Riera         ³ Data ³30.09.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de complemento de atualizacao dos dados do documento  ³±±
±±³          ³de entrada                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Codigo do evento                                      ³±±
±±³          ³       [1] Implantacao do pre-documento de Entrada           ³±±
±±³          ³       [2] Estorno do pre-documento de Entrada               ³±±
±±³          ³       [3] Exclusao do pre-documento de entrada              ³±±
±±³          ³       [4] Implantacao do documento de Entrada               ³±±
±±³          ³       [5] Estorno do documento de Entrada                   ³±±
±±³          ³       [6] Exclusao do documento de Entrada                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo complementar a atualizacao dos ³±±
±±³          ³dados do documento de entrada e seus anexos                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MaAvalSF1(nOpcao,cAliasSF1)

Local aArea       := GetArea()
Local aAreaSF1    := SF1->(GetArea())
Local lHomologado := .F.
Local lAtuSA2     := .T.
Local cSF1PKey    := xFilial("SF1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA
Local nMCusto	  := Val(GetMV("MV_MCUSTO"))
Local lMT103TRV   := ExistBlock("MT103TRV")

Default cAliasSF1 := "SF1"

Do Case
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Implantacao do Pre documento de entrada                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 1

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorno do Pre documento de entrada                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 2

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Exclusao do Pre documento de entrada                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 3
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza os acumulados do fornecedor                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cAliasSF1)->F1_TIPO=="N"
		// Ponto de Entrada MT103TRV utilizado para desligar a atualizacao da tabela SA2
		If lMT103TRV
			lAtuSA2 := ExecBlock("MT103TRV",.F.,.F.,{SF1->F1_FORNECE,SF1->F1_LOJA,"F"})[2]
		EndIf
		// Atualiza dados da SA2 com base no documento incluido
		If lAtuSA2 .And. RecLock("SA2",.F.)
			SA2->A2_MCOMPRA := Max(xMoeda(SF1->F1_VALBRUT,1,Val(SuperGetMV("MV_MCUSTO")),SF1->F1_EMISSAO),SA2->A2_MCOMPRA)
			SA2->A2_MNOTA   := Max(SA2->A2_MNOTA,Round(NoRound(xMoeda(SF1->F1_VALBRUT,1,nMCusto,SF1->F1_EMISSAO,3),3),2) )
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reabre o Aviso de Recebimento se Houver                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("DB2")
	dbSetOrder(1)
	If MsSeek(xFilial("DB2")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)
		dbSelectArea("DB1")
		dbSetOrder(1)
		If MsSeek(xFilial("DB1")+DB2->DB2_NRAVRC)
			dbSelectArea("DB2")
			dbSetOrder(1)
			While !Eof() .And. xFilial("DB2") == DB2->DB2_FILIAL .And.;
				DB2->DB2_NRAVRC == DB1->DB1_NRAVRC
				If xFilial("SF1")+DB2->DB2_DOC+DB2->DB2_SERIE+DB2->DB2_CLIFOR+DB2->DB2_LOJA <>  cSF1PKey
					dbSelectArea("SF1")
					dbSetOrder(1)
					If MsSeek(xFilial("SF1")+DB2->DB2_DOC+DB2->DB2_SERIE+DB2->DB2_CLIFOR+DB2->DB2_LOJA)
						lHomologado := .T.
						Exit
					EndIf
				EndIf
				dbSelectArea("DB2")
				dbSkip()
			EndDo
			RecLock("DB1",.F.,.T.)
			DB1->DB1_HOMOLO := IIf(lHomologado,"2","1")	 // Reabre o Aviso de Recebimento como parcialmente atendido
			MsUnLock()
		EndIf
    EndIf
	RestArea(aAreaSF1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Implantacao do documento de entrada                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 4
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza os acumulados do fornecedor                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cAliasSF1)->F1_TIPO=="N"
		//Nao realizado por falta de informacao
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorno do documento de entrada                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 5

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Exclusao do documento de entrada                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 6
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Reabre o Aviso de Recebimento se Houver                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("DB2")
	dbSetOrder(1)
	If MsSeek(xFilial("DB2")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)
		dbSelectArea("DB1")
		dbSetOrder(1)
		If MsSeek(xFilial("DB1")+DB2->DB2_NRAVRC)
			dbSelectArea("DB2")
			dbSetOrder(1)
			While !Eof() .And. xFilial("DB2") == DB2->DB2_FILIAL .And.;
				DB2->DB2_NRAVRC == DB1->DB1_NRAVRC
				If xFilial("SF1")+DB2->DB2_DOC+DB2->DB2_SERIE+DB2->DB2_CLIFOR+DB2->DB2_LOJA <>  cSF1PKey
					dbSelectArea("SF1")
					dbSetOrder(1)
					If MsSeek(xFilial("SF1")+DB2->DB2_DOC+DB2->DB2_SERIE+DB2->DB2_CLIFOR+DB2->DB2_LOJA)
						lHomologado := .T.
						Exit
					EndIf
				EndIf
				dbSelectArea("DB2")
				dbSkip()
			EndDo
			RecLock("DB1",.F.,.T.)
			DB1->DB1_HOMOLO := IIf(lHomologado,"2","1")	 // Reabre o Aviso de Recebimento como parcialmente atendido
			MsUnLock()
		EndIf
    EndIf
EndCase
RestArea(aAreaSF1)
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MaAvalSD1 ³ Autor ³ Eduardo Riera         ³ Data ³01.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de complemento de atualizacao dos dados do item do    ³±±
±±³          ³documento de entrada                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Codigo do evento                                      ³±±
±±³          ³       [1] Implantacao de pre-documento de entrada           ³±±
±±³          ³       [2] Estorno do pre-documento de entrada               ³±±
±±³          ³       [3] Exclusao fisica do pre-documento de entrada       ³±±
±±³          ³       [4] Implantacao do documento de entrada               ³±±
±±³          ³       [5] Estorno do documento de entrada                   ³±±
±±³          ³       [6] Exclusao fisica do documento de entrada           ³±±
±±³          ³ExpC2: Alias do SD1                                     (OPC)³±±
±±³          ³ExpL3:Indica se o SA5 deve ser Incluido                 (OPC)³±±
±±³          ³ExpL4:Indica se a data da ultima compra sera dt.digitacao ou ³±±
±±³          ³      emissao.                                               ³±±
±±³          ³ExpL5:Indica se o custo atualizado no SA5 deve ser liquido   ³±±
±±³          ³      (OPC)                                                  ³±±
±±³          ³ExpL6:Indica se o SA5 deve ser atualizado               (OPC)³±±
±±³          ³ExpA7:Array com os recnos do documentos de entrada de origem ³±±
±±³          ³      (OPC)                                                  ³±±
±±³          ³ExpA8:Array com os numeros dos contratos deste docto de      ³±±
±±³          ³  entrada - gestao de contratos (OPC)                        ³±±
±±³          ³ExpL9: Indica de grava SA5 pelo codigo do produto ou pela    ³±±
±±³          ³       referencia de grade                                   ³±±
±±³          ³lEstNfClass - indica se eh estorno da classificacao          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo complementar a atualizacao dos ³±±
±±³          ³dados do item do documento de entrada e seus anexos          ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MaAvalSD1(nOpcao,cAliasSD1,lIncSA5,lDataUcom,lPrecoDes,lAtuSA5,aRecSF1Ori,aContratos,lIncRef,aCIAP,lEstNfClass)

Local aArea      := SD1->(GetArea())
Local aAreaSD1   := {}
Local aAreaSF1   := {}
Local aAreaSA2   := {}
Local aCustoEnt  := {}
Local aEnvCele   := {}
Local aRetQIE    := {}
Local aMov       := {}
Local aLote      := {"",""}
Local aSD3       := {}
Local cCursorSD7 := "SD7"
Local cLocOrig   := SD1->D1_LOCAL
Local nAtraso    := 0
Local nX         := 0
Local lEnviaCQ   := .F.
Local lEnvCQPE   := .F.
Local lQuery     := .F.
Local aBaixa     := {}
Local nQtdBaixa  := 0
Local lAjNfCompl := SuperGetMV("MV_AJUSNFC",.F.,.F.)
Local lCusFifo   := SuperGetMV("MV_CUSFIFO",.F.)
Local lCusLifo   := SuperGetMV("MV_CUSLIFO",.F.,.F.)
Local lEECFAT    := SuperGetMv("MV_EECFAT",.F.,.F.)
Local cFTCiap    := GetNewPar("MV_FTCIAP","N") //Utilizado para calc. ICMS no CIAP. Se S= Considera valor de ICMS FRETE se N= Nao considera ICMS FRETE.

Local nVlrCompl  := 0
Local cDoc       := ""
Local cSerie     := ""
Local cFornec    := ""
Local cLoja      := ""
Local cCod       := ""
Local cItem      := ""
Local cTemp		 := GetNextAlias()
Local nQtdD1     := 1
Local cProdRef   := " "
Local cNfFrete	 := ""
Local cSeFrete	 := ""
Local cForFrete	 := ""
Local cLojFrete	 := ""
Local cProdItem	 := ""
Local cProd		 := ""
Local cCodCiap	 := ""
Local lAchou    := .F.
Local lReferencia := .F.
Local lTemSDC    := .F.
Local lRetEnd    := .T.
Local cLocaliz   := ""
Local nSldRE5 	 := 0
Local nQtdBxa    := 0
Local nQtdSDC  	 := 0
Local nQtdSD4    := 0
Local nPcoCompra :=0
Local nValFrete  := 0
Local nIcmFrete	 := 0
Local lTpNFQie 	 := iif(ExistBlock("MT103QIETP"),ExecBlock("MT103QIETP",.F.,.F.),.F.) 		// permite mudar o tipo do documento ao legado (NF)
Local nDIfDec	 := 0
Local cFabric  := ""
Local cFabLoja := ""
Local nVlrICMS := 0
Local nLC102		:= GetMV("MV_LC102")
Local nMcusto		:= SuperGetMV("MV_MCUSTO")
Local cSimpNac   := ""
static lInspec  := iif(ExistBlock("Q103INSP"),ExecBlock("Q103INSP",.F.,.F.),.F.) 		// Permite gerar inspeção de entrada em produto tipo CQ = M

Local aStruSD7  := {}
Local cQuery    := ""
Local cUfFor  := ""
Local lPzDifRS := .F.

DEFAULT cAliasSD1 := "SD1"
DEFAULT lIncSA5   := .F.
DEFAULT lAtuSA5   := .F.
DEFAULT lDataUcom := .F.
DEFAULT lPrecoDes := .F.
DEFAULT aCIAP     := {{(cAliasSD1)->D1_CODCIAP}}
DEFAULT lEstNfClass := .F.
DEFAULT lIncRef   := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Funcao utilizada para verificar a ultima versao dos fontes      ³
//³ SIGACUS.PRW, SIGACUSA.PRX e SIGACUSB.PRX, aplicados no rpo do   |
//| cliente, assim verificando a necessidade de uma atualizacao     |
//| nestes fontes. NAO REMOVER !!!							        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If (SF4->F4_ATUATF == "N" .And. SF4->F4_CIAP == "S") .Or. (SF4->F4_ATUATF == "S" .And. SF4->F4_CIAP == "S")
	aCIAP := {{(cAliasSD1)->D1_CODCIAP}}
EndIf

cProdRef	:= (cAliasSD1)->D1_COD
lReferencia	:= MatGrdPrrf(@cProdRef,.T.)

Do Case
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Implantacao de um pre-documento de entrada                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 1
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a quantidade nao classificada nos saldos fisicos           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB2")
	dbSetOrder(1)
	If !(xFilial("SB2")==SB2->B2_FILIAL .And. (cAliasSD1)->D1_COD==SB2->B2_COD .And. (cAliasSD1)->D1_LOCAL==SB2->B2_LOCAL)
		If !MsSeek(xFilial("SB2")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL)
			CriaSB2((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL)
		EndIf
	EndIf
	RecLock("SB2",.F.)
	SB2->B2_NAOCLAS += (cAliasSD1)->D1_QUANT
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a quantidade nao classificada do pedido de Compra          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MaAvalPC("SC7",6)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tratamento da gravacao do SD1 na Integridade Referencial            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SD1->(FkCommit())
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com PMS                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePms()
		PmsWriteNF(1,cAliasSD1,.T.)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica complementos de integracao                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("bTTSSD1")=="B"
		Eval(bTTSSD1,nOpcao)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorno de um pre-documento de entrada                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 2
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com PMS                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePms()
		PmsWriteNF(2,cAliasSD1,.T.)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a quantidade nao classificada do pedido de Compra          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MaAvalPC("SC7",7)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza a quantidade nao classificada nos saldos fisicos           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB2")
	dbSetOrder(1)
	If !(xFilial("SB2")==SB2->B2_FILIAL .And. (cAliasSD1)->D1_COD==SB2->B2_COD .And. (cAliasSD1)->D1_LOCAL==SB2->B2_LOCAL)
		If !MsSeek(xFilial("SB2")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL)
			CriaSB2((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL)
		EndIf
	EndIf
	RecLock("SB2",.F.)
	SB2->B2_NAOCLAS -= (cAliasSD1)->D1_QUANT
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica complementos de integracao                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("bTTSSD1")=="B"
		Eval(bTTSSD1,nOpcao)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Exclusao fisica de um pre-documento de entrada                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 3
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com PMS                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePms()
		PmsWriteNF(3,cAliasSD1,.T.)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica complementos de integracao                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("bTTSSD1")=="B"
		Eval(bTTSSD1,nOpcao)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Implantacao de um documento de entrada                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 4
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona registros                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB1")
	dbSetOrder(1)
	MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD)

	dbSelectArea("SF4")
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+(cAliasSD1)->D1_TES)

	dbSelectArea("SA2")
	dbSetOrder(1)
	MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA)


	dbSelectArea("SB2")
	dbSetOrder(1)
	If SF4->F4_ESTOQUE == "S" .And. !(xFilial("SB2")==SB2->B2_FILIAL .And. (cAliasSD1)->D1_COD==SB2->B2_COD .And. (cAliasSD1)->D1_LOCAL==SB2->B2_LOCAL)
		If !MsSeek(xFilial("SB2")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL)
			CriaSB2((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL)
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pedido de Compra                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty((cAliasSD1)->D1_PEDIDO)
		dbSelectArea("SC7")
		dbSetOrder(19)
		If MsSeek(xFilial("SC7")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_PEDIDO+(cAliasSD1)->D1_ITEMPC)
			nAtraso := (cAliasSD1)->D1_DTDIGIT-SC7->C7_DATPRF
			If	MA103CkAIC(SC7->C7_FORNECE,SC7->C7_LOJA,SC7->C7_PRODUTO)
				(cAliasSD1)->D1_QTDPEDI	:= (cAliasSD1)->D1_QUANT
			Else
				(cAliasSD1)->D1_QTDPEDI	:= Min(SC7->C7_QUANT-SC7->C7_QUJE,(cAliasSD1)->D1_QUANT)
			EndIf
			MaAvalPC("SC7",8)

			If A103GcDisp()
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Baixa o saldo a receber da planilha                                    ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				CtaAvalGCT(1,aContratos,SC7->C7_CONTRA,SC7->C7_PLANILH,SC7->C7_ITEMED,SD1->D1_QUANT,,SC7->C7_MEDICAO,SD1->D1_TOTAL)
			EndIf

		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Amarracao Fornecedor/Produto                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lIncSA5 .And. (cAliasSD1)->D1_TIPO == "N"
	    cRefGrd := AtuSA5((cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,(cAliasSD1)->D1_COD,lIncRef)
		If !Empty(SB1->B1_GRUPO)
			dbSelectArea("SBM")
			dbSetOrder( 1 )
			If MsSeek(xFilial("SBM")+SB1->B1_GRUPO)
				dbSelectArea("SAD")
				dbSetOrder(1)
				If !MsSeek(xFilial("SAD")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+SB1->B1_GRUPO,.F.)
					RecLock("SAD",.T.)
					SAD->AD_FILIAL	:= xFilial("SAD")
					SAD->AD_FORNECE := (cAliasSD1)->D1_FORNECE
					SAD->AD_LOJA    := (cAliasSD1)->D1_LOJA
					SAD->AD_NOMEFOR := SA2->A2_NOME
					SAD->AD_GRUPO   := SB1->B1_GRUPO
					SAD->AD_NOMGRUP := SBM->BM_DESC
					MsUnlock()
				EndIf
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Analise do CQ                                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SF4->F4_ESTOQUE == "S"
		lEnviaCQ := .F.
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³                  CONDICOES DE ENVIO AO CQ                              ³
		//³                                                                        ³
		//³1) Documentos de entrada de complemento de preco, despesa de importacao,³
		//³   conhecimento de frete e entrada serao enviados ao CQ se o almoxarifa-³
		//³   do de destino for o MV_CQ                                            ³
		//³2) Documentos de complemento serao enviados ao CQ se o documento de ori-³
		//³   gem foi enviado para o CQ.                                           ³
		//³3) Para o Controle de CQ Microsiga os documentos de entrada tipo Normal ³
		//³   serao enviados caso:                                                 ³
		//³   a)A nota do fornecedor ( A5_NOTA ) for inferior a nota minima do pro-³
		//³   duto ( B1_NOTAMIN ).                                                 ³
		//³   b)O documento de entrada for escolhido pelo criterio de SKIP-LOTE    ³
		//³4) Produtos com controle de CQ pelo Quality                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

		Do Case
		Case (cAliasSD1)->D1_TIPO == "C" .And. (cAliasSD1)->D1_ORIGLAN $"FR,DP" .And. alltrim((cAliasSD1)->D1_LOCAL) == SuperGetMV("MV_CQ")
			lEnviaCQ := .T.
		Case (cAliasSD1)->D1_TIPO $ "CIP" .And.!Empty((cAliasSD1)->D1_ITEMORI)
			aAreaSD1 := (cAliasSD1)->(GetArea())
			dbSelectArea("SD1")
			dbSetOrder(1)
			If MsSeek(xFilial("SD1")+(cAliasSD1)->D1_NFORI+(cAliasSD1)->D1_SERIORI+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_ITEMORI,.F.)
				If alltrim((cAliasSD1)->D1_LOCAL) == alltrim(SuperGetMV("MV_CQ"))
					lEnviaCQ := .T.
				EndIf
			EndIf
			RestArea(aAreaSD1)
		Case !(cAliasSD1)->D1_TIPO $ "CIP" .And. alltrim((cAliasSD1)->D1_LOCAL) == alltrim(SuperGetMV("MV_CQ"))
			lEnviaCQ := .T.
		Case (cAliasSD1)->D1_TIPO == "N" .And. RetFldProd(SB1->B1_COD,"B1_TIPOCQ") $ " ,M"
			If !Empty((cAliasSD1)->D1_CONHEC)
				dbSelectArea("SW7")
				dbSetOrder(1)
				If lAchou := MsSeek(xFilial("SW7")+(cAliasSD1)->D1_CONHEC,.F.)
					While !Eof() .And. SW7->W7_HAWB == PadR(Alltrim((cAliasSD1)->D1_CONHEC),TamSX3("W7_HAWB")[1])
						If SW7->W7_FILIAL == (cAliasSD1)->D1_FILIAL .And. SW7->W7_COD_I == (cAliasSD1)->D1_COD .And. SW7->W7_FORN == SF1->F1_FORNECE .And. (EICLOJA() .AND. SW7->W7_FORLOJ == SF1->F1_LOJA .OR. .T.) .And. SW7->W7_POSICAO == (cAliasSD1)->D1_ITEM
							cFabric  := SW7->W7_FABR
							cFabLoja := SW7->W7_FABLOJ
							Exit
						EndIf
						dbSkip()
					EndDo
				EndIf
			EndIf
			dbSelectArea("SA5")
			dbSetOrder(1)
			If !Empty(cFabric) .And. !Empty(cFabLoja)
				lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD+cFabric+cFabLoja,.F.)
			Else
				lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD,.F.)
			EndIf
			If !lAchou .And. lReferencia
				dbSelectArea("SA5")
				dbSetOrder(9)
				If !Empty(cFabric) .And. !Empty(cFabLoja)
					lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+cProdRef+cFabric+cFabLoja,.F.)
				Else
					lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+cProdRef,.F.)
				EndIf
			Endif
			If lAchou
				If SA5->A5_NOTA<SB1->B1_NOTAMIN .Or. SA5->A5_SKIPLOT>0
					If  SA5->A5_NOTA<SB1->B1_NOTAMIN .Or.  Mod(SA5->A5_ENTREGA,SA5->A5_SKIPLOT)==0
						lEnviaCQ := .T.
					EndIf
					If SA5->A5_SKIPLOT > 0
						RecLock("SA5",.F.)
						SA5->A5_ENTREGA += 1
						MsUnlock()
					EndIf
				EndIf
			EndIf
		Case RetFldProd(SB1->B1_COD,"B1_TIPOCQ") == "Q"
			DbSelectArea("SA5")
			DbSetOrder(1)
			lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD,.F.)
			If !lAchou .And. lReferencia
				DbSelectArea("SA5")
				DbSetOrder(9)
				lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+cProdRef,.F.)
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Quando houver integracao com o Quality as NFs referentes a Beneficia-  ³
			//³ mento e Devolucao poderao ser Inspecionadas conforme parametrizacao.   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If QieTipoNF(SD1->D1_TIPO,SD1->D1_TES)
				lEnviaCQ := .F.
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Ponto de Entrada para critica do Envio do Material para  ³
				//³ Inspecao no Quality, para Inspecao no Quality o mesmo de ³
				//³ vera estar igual a .T.									 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("ENVCQQUA")
					lEnviaCQ := ExecBlock("ENVCQQUA",.F.,.F.)
				Else
					lEnviaCQ := .T.
				EndIf
			EndIf
		EndCase
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para critica do Envio do Material para  ³
		//³ C.Q.                                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("ENVCQMAT")
			lEnvCQPE := ExecBlock("ENVCQMAT",.F.,.F.)
			If ValType(lEnvCQPE) == "L"
				lEnviaCQ := lEnvCQPE
			Endif
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualizacao do CQ                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lEnviaCQ
			If allTRIM((cAliasSD1)->D1_LOCAL)  <> alltrim(SuperGetMV("MV_CQ"))
				(cAliasSD1)->D1_LOCAL := SuperGetMV("MV_CQ")
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Poder de Terceiro                                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SF4->F4_PODER3<>"N"
		aCustoEnt := MaAtuSB6("SD1",1)
		(cAliasSD1)->D1_CUSTO	:= aCustoEnt[1]
		(cAliasSD1)->D1_CUSTO2	:= aCustoEnt[2]
		(cAliasSD1)->D1_CUSTO3	:= aCustoEnt[3]
		(cAliasSD1)->D1_CUSTO4	:= aCustoEnt[4]
		(cAliasSD1)->D1_CUSTO5	:= aCustoEnt[5]
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ CIAP                                                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAreaSA2 := SA2->(GetArea())
	If SA2->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
		cSimpNac := Iif(SA2->(FieldPos("A2_SIMPNAC")) > 0,SA2->A2_SIMPNAC,"")
	Endif
	RestArea(aAreaSA2)

	If (SF4->F4_CIAP=="S" .And. (((cAliasSD1)->D1_VALICM  > 0 .And. SF4->F4_CREDICM == "S") .Or. 	((cAliasSD1)->D1_ICMNDES > 0) .Or. ;
	(SF4->F4_COMPL == "S" .AND. cSimpNac == "1")))

		(cAliasSD1)->D1_CODCIAP := A103CIAP(1, cAliasSD1, , "MATA103")

	ElseIf AllTrim(cFTCiap) == "S" .And. IsInCallStack("MATA116")
		aAreaSD1  := SD1->(GetArea())
		aAreaSF1  := SF1->(GetArea())
		cNfFrete := (cAliasSD1)->D1_DOC
		cSeFrete := (cAliasSD1)->D1_SERIE
		cForFrete := (cAliasSD1)->D1_FORNECE
		cLojFrete := (cAliasSD1)->D1_LOJA
		cProdItem := (cAliasSD1)->D1_COD

		//CIAP - NF de Complemento de Frete - Atualiza o valor de ICMS do BEM (SF9) somando o valor de ICMS do frete.
		#IFDEF TOP
			If (TcSrvType ()<>"AS/400")
				BeginSql alias cTemp
					SELECT SD1.D1_CODCIAP, SD1.D1_COD, SD1.D1_SERIE, SD1.D1_FORNECE, SD1.D1_LOJA, SD1.D1_VALICM, SD1.D1_QUANT
						FROM %table:SD1% SD1
						WHERE SD1.D1_FILIAL = %xfilial:SD1% AND
							  SD1.D1_DOC = %exp:cNfFrete% AND
							  SD1.D1_SERIE = %exp:cSeFrete% AND
							  SD1.D1_FORNECE = %exp:cForFrete% AND
							  SD1.D1_LOJA = %exp:cLojFrete% AND
							  SD1.D1_COD = %exp:cProdItem%
				EndSql
				For nX := 1 to Len(aRecSF1Ori)
					dbSelectArea("SF1")
					MsGoto(aRecSF1Ori[nX])

					While !(cTemp)->(Eof())
						cProd := (cTemp)->D1_COD
						nIcmFrete := (cTemp)->D1_VALICM
						DbSelectArea("SD1")
						DbSetOrder(2)
						If SD1->(MsSeek(xFilial("SD1")+cProd+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA))
							nQtdD1 := Int(SD1->D1_QUANT)

							DbSelectArea("SF9")
							DbSetOrder(1)
							If SF9->(MsSeek(xFilial("SF9")+SD1->D1_CODCIAP))
								If SF9->F9_QTDPARC == SF9->F9_SLDPARC
									RecLock("SF9",.F.)
									SF9->F9_VALICMS += NoRound((nIcmFrete/nQtdD1),2)
									SF9->F9_VALFRETE := NoRound((nIcmFrete/nQtdD1),2)
									MsUnlock()
								EndIf
							EndIf
						EndIf
						(cTemp)->(dbSkip())
		   			EndDo
		   		Next nX
			Else
		#ENDIF
			For nX := 1 to Len(aRecSF1Ori)
				dbSelectArea("SF1")
				MsGoto(aRecSF1Ori[nX])

				DbSelectArea("SD1")
				SD1->(DbSetOrder(1))
				SD1->(MsSeek(xFilial("SD1")+cNfFrete+cSeFrete+cForFrete+cLojFrete))
				While !SD1->(Eof()) .And. SD1->D1_FILIAL==xFilial("SD1") .And. SD1->D1_DOC==cNfFrete .And. SD1->D1_FORNECE==cForFrete .And. SD1->D1_LOJA==cLojFrete .And. SD1->D1_COD==cProdItem
					#IFDEF TOP
						cProd		:= (cTemp)->D1_COD
						nIcmFrete	:= (cTemp)->D1_VALICM
					#ELSE
						cProd		:= SD1->D1_COD
						nIcmFrete	:= SD1->D1_VALICM
					#ENDIF

					DbSelectArea("SD1")
					DbSetOrder(2)
					If SD1->(MsSeek(xFilial("SD1")+cProd+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA))
						cCodCiap := SD1->D1_CODCIAP
						nQtdD1 := Int(SD1->D1_QUANT)
					EndIf

					DbSelectArea("SF9")
					DbSetOrder(1)
					If SF9->(MsSeek(xFilial("SF9")+cCodCiap))
						If SF9->F9_QTDPARC == SF9->F9_SLDPARC
							RecLock("SF9",.F.)
							SF9->F9_VALICMS += NoRound((nIcmFrete/nQtdD1),2)
							SF9->F9_VALFRETE := NoRound((nIcmFrete/nQtdD1),2)
							MsUnlock()
						EndIf
					EndIf

					SD1->(dbSkip())
				EndDo
			Next nX
		#IFDEF TOP
			EndIf
		#ENDIF
		RestArea(aAreaSD1)
		RestArea(aAreaSF1)

	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Amarracao Fornecedor/Produto                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lAtuSA5
		dbSelectArea("SA5")
		If !( xFilial("SA5") == SA5->A5_FILIAL .And.;
				(cAliasSD1)->D1_FORNECE == SA5->A5_FORNECE .And.;
				(cAliasSD1)->D1_LOJA == SA5->A5_LOJA .And.;
				(cAliasSD1)->D1_COD == SA5->A5_PRODUTO )
			dbSetOrder(1)
			lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD,.F.)
			If !lAchou .And. lReferencia
				dbSelectArea("SA5")
				dbSetOrder(9)
				lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+cProdRef,.F.)
			Endif
		EndIf
		If lAchou
			lIncSA5 := .T.
			RecLock("SA5",.F.)
			For nX := 1 To 12
				If ( FieldGet(FieldPos("A5_DTCOM"+StrZero(nX,2))) == (cAliasSD1)->D1_EMISSAO .And.;
						FieldGet(FieldPos("A5_PRECO" +StrZero(nX,2))) == IIF(nMcusto=="1",(cAliasSD1)->D1_CUSTO/(cAliasSD1)->D1_QUANT,(cAliasSD1)->(FieldGet(FieldPos("D1_CUSTO"+nMcusto)))/(cAliasSD1)->D1_QUANT) .And.;
						FieldGet(FieldPos("A5_QUANT" +StrZero(nX,2))) == (cAliasSD1)->D1_QUANT .And.;
						FieldGet(FieldPos("A5_COND"  +StrZero(nX,2))) == SF1->F1_COND )
					lIncSA5 := .F.
					nX := 13
				EndIf
			Next nX
			If lIncSA5
				If ( SA5->A5_PRECO12 <> 0 )
					For nX := 1 To 11
						FieldPut(FieldPos("A5_DTCOM"+StrZero(nX,2)),FieldGet(FieldPos("A5_DTCOM"+StrZero(nX+1,2))))
						FieldPut(FieldPos("A5_PRECO"+StrZero(nX,2)),FieldGet(FieldPos("A5_PRECO"+StrZero(nX+1,2))))
						FieldPut(FieldPos("A5_QUANT"+StrZero(nX,2)),FieldGet(FieldPos("A5_QUANT"+StrZero(nX+1,2))))
						FieldPut(FieldPos("A5_COND" +StrZero(nX,2)),FieldGet(FieldPos("A5_COND"+StrZero(nX+1,2))))
					Next nX
					SA5->A5_PRECO12 := 0
				EndIf
				For nX := 1 To 12
					If ( FieldGet(FieldPos("A5_PRECO"+StrZero(nX,2))) == 0 )
						FieldPut(FieldPos("A5_DTCOM"+StrZero(nX,2)),(cAliasSD1)->D1_EMISSAO)
						FieldPut(FieldPos("A5_PRECO"+StrZero(nX,2)),IIF(nMcusto=="1",(cAliasSD1)->D1_CUSTO/(cAliasSD1)->D1_QUANT,(cAliasSD1)->(FieldGet(FieldPos("D1_CUSTO"+nMcusto)))/(cAliasSD1)->D1_QUANT))
						FieldPut(FieldPos("A5_QUANT"+StrZero(nX,2)),(cAliasSD1)->D1_QUANT)
						FieldPut(FieldPos("A5_COND"+StrZero(nX,2)),SF1->F1_COND)
						nX := 13
					EndIf
				Next nX
			EndIf
			MsUnlock()
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Produto                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cAliasSD1)->D1_TIPO == "N" .And. SF4->F4_UPRC$" S"
		If dDataBase >= RetFldProd(SB1->B1_COD,"B1_UCOM")
			If RetArqProd(SB1->B1_COD)
				RecLock("SB1",.F.)
				SB1->B1_UCOM := IIf(lDataUcom,(cAliasSD1)->D1_DTDIGIT,(cAliasSD1)->D1_EMISSAO)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ PE: MT103UPC - Permite customizar gravacao do ultimo preco de compra   |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("MT103UPC")
					nPcoCompra := ExecBlock("MT103UPC",.F.,.F.)
					If ValType(nPcoCompra)=="N"
						SB1->B1_UPRC :=nPcoCompra
					endif
				Else
					SB1->B1_UPRC := IIf(lPrecoDes,(cAliasSD1)->D1_VUNIT-((cAliasSD1)->D1_VALDESC/(cAliasSD1)->D1_QUANT),(cAliasSD1)->D1_VUNIT)
				EndIf
			Else
				RecLock("SBZ",.F.)
				SBZ->BZ_UCOM := IIf(lDataUcom,(cAliasSD1)->D1_DTDIGIT,(cAliasSD1)->D1_EMISSAO)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ PE: MT103UPC - Permite customizar gravacao do ultimo preco de compra   |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("MT103UPC")
					nPcoCompra := ExecBlock("MT103UPC",.F.,.F.)
					If ValType(nPcoCompra)=="N"
						SBZ->BZ_UPRC :=nPcoCompra
					endif
				Else
					SBZ->BZ_UPRC := IIf(lPrecoDes,(cAliasSD1)->D1_VUNIT-((cAliasSD1)->D1_VALDESC/(cAliasSD1)->D1_QUANT),(cAliasSD1)->D1_VUNIT)
				EndIf

				dbSelectArea("SB1")
			Endif
		EndIf
	Else
		If (cAliasSD1)->D1_TIPO == "C" .And. SF4->F4_UPRC$" S"
 			If dDataBase >= RetFldProd(SB1->B1_COD,"B1_UCOM")
 				aAreaSD1  := SD1->(GetArea())
		   		nVlrCompl := (cAliasSD1)->D1_VUNIT
		   		cDoc	  := (cAliasSD1)->D1_NFORI
		   		cSerie	  := (cAliasSD1)->D1_SERIORI
		   		cFornec	  := (cAliasSD1)->D1_FORNECE
		   		cLoja	  := (cAliasSD1)->D1_LOJA
		   		cCod	  := (cAliasSD1)->D1_COD
		   		cItem	  := AllTrim((cAliasSD1)->D1_ITEMORI)
		   		If !Empty(cItem)
					dbSelectArea("SD1")
					dbSetOrder(1)
					If MsSeek(xFilial("SB1")+cDoc+cSerie+cFornec+cLoja+cCod+cItem)
						If RetArqProd(SB1->B1_COD)
							RecLock("SB1",.F.)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ PE: MT103UPC - Permite customizar gravacao do ultimo preco de compra   |
		   					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ExistBlock("MT103UPC")
								nPcoCompra := ExecBlock("MT103UPC",.F.,.F.)
								If ValType(nPcoCompra)=="N"
									SB1->B1_UPRC :=nPcoCompra
								endif
							Else
								SB1->B1_UPRC := IIf(lPrecoDes,(cAliasSD1)->D1_VUNIT-((cAliasSD1)->D1_VALDESC/(cAliasSD1)->D1_QUANT)+ (nVlrCompl/(cAliasSD1)->D1_QUANT) ,nVlrCompl/(cAliasSD1)->D1_QUANT+(cAliasSD1)->D1_VUNIT)
							EndIf
						Else
							RecLock("SBZ",.F.)

							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ PE: MT103UPC - Permite customizar gravacao do ultimo preco de compra   |
		   					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ExistBlock("MT103UPC")
								nPcoCompra := ExecBlock("MT103UPC",.F.,.F.,)
								If ValType(nPcoCompra)=="N"
									SBZ->BZ_UPRC :=nPcoCompra
								endif
							Else
								SBZ->BZ_UPRC := IIf(lPrecoDes,(cAliasSD1)->D1_VUNIT-((cAliasSD1)->D1_VALDESC/(cAliasSD1)->D1_QUANT)+ (nVlrCompl/(cAliasSD1)->D1_QUANT) ,nVlrCompl/(cAliasSD1)->D1_QUANT+(cAliasSD1)->D1_VUNIT)
							EndIf
						EndIf
					EndIf
				EndIf
				RestArea(aAreaSD1)
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza saldo fisico e financeiro                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SF4->F4_ESTOQUE=="S"
		B2AtuComD1()
		If lEnviaCQ
			If Localiza((cAliasSD1)->D1_COD) .And. !Empty(SuperGetMV("MV_DISTAUT"))
				A100Distri((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL,(cAliasSD1)->D1_NUMSEQ,(cAliasSD1)->D1_DOC, (cAliasSD1)->D1_SERIE, (cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,Nil,Nil,(cAliasSD1)->D1_QUANT,(cAliasSD1)->D1_LOTECTL,(cAliasSD1)->D1_NUMLOTE)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Atualizacao do CQ - Tipo 0 (Zero) - Saldo Original                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(cAliasSD1)->D1_TIPO$"CIP"
				If fGeraCQ0("SD1",(cAliasSD1)->D1_COD,"CP",cLocOrig)
					If (cAliasSD1)->D1_NUMCQ <> SD7->D7_NUMERO
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Esta verificacao eh efetuada para otimizar a performance, evitando     ³
						//³ o "flush" em ambiente TOPCONNECT                                       ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If !__TTSINUSE
							RecLock("SD1")
						EndIf
						(cAliasSD1)->D1_NUMCQ := SD7->D7_NUMERO
					EndIf
					If RetFldProd(SB1->B1_COD,"B1_TIPOCQ") == "Q" .or. lInspec
						If Rastro(SB1->B1_COD)
							dbSelectArea("SD5")
							dbSetOrder(3)
							If MsSeek(xFilial("SD5")+(cAliasSD1)->D1_NUMSEQ+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_LOTECTL,.F.)
								aLote := {SD5->D5_LOTECTL,; //Numero do Lote
									SD5->D5_NUMLOTE}    //Sequencia do Sub-Lote
							Else
								aLote := {"",""}
							EndIf
						EndIf
						aEnvCele := {(cAliasSD1)->D1_DOC,; //Numero da Nota Fiscal
							(cAliasSD1)->D1_SERIE,;        //Serie da Nota Fiscal
							(cAliasSD1)->D1_TIPO,;         //Tipo da Nota Fiscal
							(cAliasSD1)->D1_EMISSAO,;      //Data de Emissao da Nota Fiscal
							(cAliasSD1)->D1_DTDIGIT,;      //Data de Entrada da Nota Fiscal
							iif (lTpNFQie,SF1->F1_ESPECIE,"NF"),;  //Tipo de Documento
							(cAliasSD1)->D1_ITEM,;         //Item da Nota Fiscal
							" ",;                  		    //Numero do Remito (Localizacoes)
							(cAliasSD1)->D1_PEDIDO,;       //Numero do Pedido de Compra
							(cAliasSD1)->D1_ITEMPC,;       //Item do Pedido de Compra
							(cAliasSD1)->D1_FORNECE,;      //Codigo Fornecedor/Cliente
							(cAliasSD1)->D1_LOJA,;         //Loja Fornecedor/Cliente
							(cAliasSD1)->D1_LOTEFOR,;      //Numero do Lote do Fornecedor
							Space(6),;         			    //Codigo do Solicitante
							(cAliasSD1)->D1_COD,;          //Codigo do Produto
							(cAliasSD1)->D1_LOCAL,;        //Local Origem
							aLote[1],;             			//Numero do Lote
							aLote[2],;             			//Sequencia do Sub-Lote
							(cAliasSD1)->D1_NUMSEQ,;       //Numero Sequencial
							SD7->D7_NUMERO,;       		    //Numero do CQ
							(cAliasSD1)->D1_QUANT,;        //Quantidade
							(cAliasSD1)->D1_TOTAL,;        //Preco
							nAtraso,;              			//Dias de atraso
							(cAliasSD1)->D1_TES,;          //TES
							AllTrim(FunName()),;   			//Origem
							" ",;                  			//Origem TXT
							0}                     			//Quantidade do Lote Original
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Realiza a integracao Materiais x Inspecao de Entradas		           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						aRetQIE := QAtuMatQie(aEnvCele,1,,IIf(Type('l103Auto') <> 'U', l103Auto, .F.) )
						If aRetQIE[1] $ "C,L"
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³ Realiza automaticamente a libercao do CQ qdo nao ha inspecao no Quality³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							aMov := {}
							aadd(aMov, {})
							aadd(aMov[Len(aMov)], 1)                 //-- Tipo da Movimentação (1=Libera/2=Rejeita)
							aadd(aMov[Len(aMov)], SD7->D7_SALDO)     //-- Quantidade a ser Movimentada
							aadd(aMov[Len(aMov)], SD7->D7_LOCDEST)   //-- Local de Destino da Movimentacao
							aadd(aMov[Len(aMov)], SD7->D7_DATA)      //-- Data da Movimentacao
							aadd(aMov[Len(aMov)], "")                //-- X=Estornado
							aadd(aMov[Len(aMov)], "")                //-- Motivo da Rejeicao
							aadd(aMov[Len(aMov)], aRetQIE[2])        //-- Observacao
							aadd(aMov[Len(aMov)], SD7->D7_SALDO2)   //-- Quantidade na 2a Unidade de Medida

							fGravaCQ(SD7->D7_PRODUTO, SD7->D7_NUMERO, .F.,aMov,PegaCMD1())
						EndIf
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Execblock QIEA210T apos gravacao da movim. do CQ Celerina              ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ExistBlock("QIEA210T")
							ExecBlock("QIEA210T",.F.,.F.,{"EST"})
						EndIf
					EndIf
				EndIf
			Else
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualizacao do CQ - Tipo 8 (Oito) - Documentos de Complemento          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If fGeraCQ8((cAliasSD1)->D1_DOC,(cAliasSD1)->D1_SERIE,(cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,(cAliasSD1)->D1_COD,(cAliasSD1)->D1_ITEM,"CP",(cAliasSD1)->D1_LOCAL,aRecSF1Ori)
					If (cAliasSD1)->D1_NUMCQ <> SD7->D7_NUMERO
						(cAliasSD1)->D1_NUMCQ := SD7->D7_NUMERO
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza requisicao direta a Ordem de Producao                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SF4->F4_ESTOQUE == "S" .And. !Empty((cAliasSD1)->D1_OP) .And. !lEnviaCQ
		If Localiza((cAliasSD1)->D1_COD)
			dbSelectArea("SBE")
			dbSetOrder(1)
			SBE->(MsSeek(xFilial("SBE")+(cAliasSD1)->D1_LOCAL))
			cLocaliz := SBE->BE_LOCALIZ

			dbSelectArea("SDC")
			dbSetOrder(2)
			If MsSeek(xFilial("SDC")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_OP)
				While !Eof() .And. xFilial("SDC")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_OP == xFilial("SDC")+SDC->DC_PRODUTO+SDC->DC_LOCAL+SDC->DC_OP
					If QtdComp(SDC->DC_QUANT) > QtdComp(0)
						lRetEnd  := A100Distri((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL,(cAliasSD1)->D1_NUMSEQ,(cAliasSD1)->D1_DOC,(cAliasSD1)->D1_SERIE,(cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,SDC->DC_LOCALIZ,Nil,(cAliasSD1)->D1_QUANT,(cAliasSD1)->D1_LOTECTL,(cAliasSD1)->D1_NUMLOTE)
						lTemSDC  := .T.
						cLocaliz := SDC->DC_LOCALIZ
						Exit
					Endif
					dbSelectArea("SDC")
					dbSkip()
				EndDo
			Endif
			// Notas de Complemento: Icms, IPI, Precos não será considerada, não possui quantidade.
			If !lTemSDC .And. (cAliasSD1)->D1_QUANT >0
				lRetEnd  := A100Distri((cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL,(cAliasSD1)->D1_NUMSEQ,(cAliasSD1)->D1_DOC,(cAliasSD1)->D1_SERIE,(cAliasSD1)->D1_FORNECE,(cAliasSD1)->D1_LOJA,cLocaliz,Nil,(cAliasSD1)->D1_QUANT,(cAliasSD1)->D1_LOTECTL,(cAliasSD1)->D1_NUMLOTE)
			Endif
		EndIf
		If lRetEnd
			nSldRE5 := (cAliasSD1)->D1_QUANT
			dbSelectArea("SD3")
			RecLock("SD3",.T.)
			SD3->D3_FILIAL	:= xFilial("SD3")
			SD3->D3_COD		:= (cAliasSD1)->D1_COD
			SD3->D3_QUANT	:= (cAliasSD1)->D1_QUANT
			SD3->D3_TM		:= "999"
			SD3->D3_OP		:= (cAliasSD1)->D1_OP
			SD3->D3_LOCAL	:= (cAliasSD1)->D1_LOCAL
			SD3->D3_DOC		:= (cAliasSD1)->D1_DOC
			SD3->D3_EMISSAO	:= (cAliasSD1)->D1_DTDIGIT
			SD3->D3_NUMSEQ	:= (cAliasSD1)->D1_NUMSEQ
			SD3->D3_UM		:= (cAliasSD1)->D1_UM
			SD3->D3_GRUPO	:= (cAliasSD1)->D1_GRUPO
			SD3->D3_TIPO	:= (cAliasSD1)->D1_TP
			SD3->D3_SEGUM	:= (cAliasSD1)->D1_SEGUM
			SD3->D3_CONTA	:= (cAliasSD1)->D1_CONTA
			SD3->D3_CF		:= "RE5"
			SD3->D3_QTSEGUM	:= (cAliasSD1)->D1_QTSEGUM
			SD3->D3_USUARIO	:= CUSERNAME
			SD3->D3_CUSTO1	:= (cAliasSD1)->D1_CUSTO
			SD3->D3_CUSTO2	:= (cAliasSD1)->D1_CUSTO2
			SD3->D3_CUSTO3	:= (cAliasSD1)->D1_CUSTO3
			SD3->D3_CUSTO4	:= (cAliasSD1)->D1_CUSTO4
			SD3->D3_CUSTO5	:= (cAliasSD1)->D1_CUSTO5
			SD3->D3_NUMLOTE	:= (cAliasSD1)->D1_NUMLOTE
			SD3->D3_LOTECTL	:= (cAliasSD1)->D1_LOTECTL
			SD3->D3_DTVALID	:= (cAliasSD1)->D1_DTVALID
	        SD3->D3_LOCALIZ := cLocaliz
			SD3->D3_POTENCI := (cAliasSD1)->D1_POTENCI

			//Verifica integração do Manutenção de Ativos X Estoque
			If AllTrim(SuperGetMV("MV_NGMNTES",.F.,'N')) == 'S'
				If SubStr((cAliasSD1)->D1_OP,7,5) == "OS001"
					SD3->D3_ORDEM := SubStr((cAliasSD1)->D1_OP,1,6)
				EndIf
			EndIf

			//trecho que verifica se deve baixar algum SDC quando a qtd da nf e maior que a diferenca d4-dc
			//Em Notas de Complemento, nSLDRE5 = 0
			If Localiza((cAliasSD1)->D1_COD) .And. nSldRE5>0
				dbSelectArea("SD4")
				dbSetOrder(1)
				If MsSeek(xFilial("SD4")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_OP)
					While !EOF() .And. SD4->(D4_FILIAL+D4_COD+D4_OP) == xFilial("SD4")+(cAliasSD1)->(D1_COD+D1_OP)
						nQtdSD4 += SD4->D4_QUANT
						dbSkip()
					End
				EndIf
				dbSelectArea("SDC")
				dbSetOrder(2)
				If MsSeek(xFilial("SDC")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_OP)
					While !EOF() .And. SDC->(DC_FILIAL+DC_PRODUTO+DC_LOCAL+DC_OP) == xFilial("SDC")+(cAliasSD1)->(D1_COD+D1_LOCAL+D1_OP)
						nQtdSDC += SDC->DC_QUANT
						dbSkip()
					End
				EndIf

				nQtdSDC := nQtdSD4 - nQtdSDC
				If (cAliasSD1)->D1_QUANT > nQtdSDC
					nQtdSDC := (cAliasSD1)->D1_QUANT - nQtdSDC
				Else
					nQtdSDC := 0
				EndIf

			 	If	MsSeek(xFilial("SDC")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_OP)
					While nQtdSDC > 0 .And. !EOF() .And.SDC->(DC_FILIAL+DC_PRODUTO+DC_LOCAL+DC_OP) ==;
														 xFilial("SDC")+(cAliasSD1)->(D1_COD+D1_LOCAL+D1_OP)
						dbSelectArea("SBF")
						dbSetOrder(1)
						If MsSeek(xFilial("SBF")+SDC->(DC_LOCAL+DC_LOCALIZ+DC_PRODUTO),.F.)
							RecLock("SBF",.F.)
							SBF->BF_EMPEN2 -= ConvUM(SBF->BF_PRODUTO,Min(SBF->BF_EMPENHO,nQtdSDC),SDC->DC_QTSEGUM,2)
							SBF->BF_EMPENHO -= Min(SBF->BF_EMPENHO,nQtdSDC)
							MsUnlock()
						EndIf
						nQtdBxa := Min(SDC->DC_QUANT,nQtdSDC)
						RecLock("SDC",.F.)
						SDC->DC_QTSEGUM -= ConvUM(SDC->DC_PRODUTO,Min(SDC->DC_QUANT,nQtdSDC),SDC->DC_QTSEGUM,2)
						SDC->DC_QUANT -= Min(SDC->DC_QUANT,nQtdSDC)
						MsUnlock()

						nQtdSDC -= nQtdBxa
						SDC->(dbSkip())
					End
				EndIf
			EndIf

			dbSelectArea("SD4")
			dbSetOrder(1)
			If MsSeek(xFilial("SD4")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_OP)
				While nSldRE5 > 0
					If SD4->(D4_FILIAL+D4_COD+D4_OP) == xFilial("SD4")+(cAliasSD1)->(D1_COD+D1_OP)
						If SD4->D4_QUANT > 0 .And. ! SD4->(A103ChkBN(D4_OP, D4_COD, D4_LOCAL, Recno()))
							dbSelectArea("SB2")
							If MsSeek(xFilial("SB2")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL,.F.)
								RecLock("SB2",.F.)
								SB2->B2_QEMP2 -= ConvUM(SB2->B2_COD,Min(SB2->B2_QEMP,Min(SD4->D4_QUANT,nSldRE5)),SD4->D4_QTSEGUM,2)
								SB2->B2_QEMP  -= Min(SB2->B2_QEMP,Min(SD4->D4_QUANT,nSldRE5))
								MsUnlock()
							EndIf
							RecLock("SD4",.F.)
							nQtdBxa := Min(Min(SD4->D4_QUANT,nSldRE5),(cAliasSD1)->D1_QUANT)
							SD4->D4_QTSEGUM	-= ConvUM(SD4->D4_COD,nQtdBxa,(cAliasSD1)->D1_QTSEGUM,2)
							SD4->D4_QUANT	-= nQtdBxa
							MsUnlock()
							nSldRE5 -= nQtdBxa
						Endif
						SD4->(dbSkip())
					Else
						nSldRe5 := 0
					EndIf
				End
			EndIf
			dbSelectArea("SC2")
			dbSetOrder(1)
			If MsSeek(xFilial("SC2")+(cAliasSD1)->D1_OP)
				SD3->D3_CC      := SC2->C2_CC
				SD3->D3_ITEMCTA	:= SC2->C2_ITEMCTA
				SD3->D3_CLVL    := SC2->C2_CLVL
			EndIf
			B2AtuComD3({SD3->D3_CUSTO1,SD3->D3_CUSTO2,SD3->D3_CUSTO3,SD3->D3_CUSTO4,SD3->D3_CUSTO5})
			C2AtuComD3({SD3->D3_CUSTO1,SD3->D3_CUSTO2,SD3->D3_CUSTO3,SD3->D3_CUSTO4,SD3->D3_CUSTO5})
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza requisicao valorizada para nota complementar com Custo Fifo     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !lEnviaCQ .And. (lCusFifo .Or. lCusLifo) .And. lAjNfCompl
		NfeComplFF(cAliasSD1,(lCusFifo .Or. lCusLifo),1)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolucao de produtos                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cAliasSD1)->D1_TIPO == "D" .And. !Empty((cAliasSD1)->D1_ITEMORI)

		DbSelectArea("SF2")
		DbSetOrder(1)
		MsSeek(xFilial("SF2") + (cAliasSD1)->D1_NFORI + (cAliasSD1)->D1_SERIORI)

		If !(xFilial("SD2") == SD2->D2_FILIAL .And.;
				(cAliasSD1)->D1_NFORI   == SD2->D2_DOC    .And.;
				(cAliasSD1)->D1_SERIORI == SD2->D2_SERIE  .And.;
				SF2->F2_CLIENTE 		== SD2->D2_CLIENTE .And.;
				SF2->F2_LOJA 			== SD2->D2_LOJA    .And.;
				(cAliasSD1)->D1_COD 	== SD2->D2_COD     .And.;
				Alltrim((cAliasSD1)->D1_ITEMORI) == AllTrim(SD2->D2_ITEM))
			dbSelectArea("SD2")
			dbSetOrder(3)
			MsSeek(xFilial("SD2")+(cAliasSD1)->D1_NFORI+(cAliasSD1)->D1_SERIORI+SF2->F2_CLIENTE+SF2->F2_LOJA+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_ITEMORI )
		EndIf
		If (SD2->(!Eof()))
			RecLock("SD2",.F.)
			SD2->D2_QTDEDEV	+= (cAliasSD1)->D1_QUANT
			SD2->D2_VALDEV	+= (cAliasSD1)->D1_TOTAL
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Tratamento da gravacao do SD1 na Integridade Referencial            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	SD1->(FkCommit())
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com o modulo de projetos                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePms()
		PmsWriteNF(1,cAliasSD1)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com o EEC     											|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lEECFAT
		EECFAT3("GRV",.F.)
    EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica complementos de integracao                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("bTTSSD1")=="B"
		Eval(bTTSSD1,nOpcao)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorno de um documento de entrada                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case nOpcao == 5
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Posiciona registros                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB1")
	dbSetOrder(1)
	MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD)

	dbSelectArea("SF4")
	dbSetOrder(1)
	MsSeek(xFilial("SF4")+(cAliasSD1)->D1_TES)

	dbSelectArea("SA2")
	dbSetOrder(1)
	MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com o EEC     											|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lEECFAT
   		EECFAT3("GRV",.T.)
	EndIf
   	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Retorna o pergunte da MATA103                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
    Pergunte("MTA103", .F.)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com o modulo de projetos                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePms()
		PmsWriteNF(2,cAliasSD1)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Devolucao de produtos                                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (cAliasSD1)->D1_TIPO == "D" .And. !Empty((cAliasSD1)->D1_ITEMORI)

		DbSelectArea("SF2")
		DbSetOrder(1)
		MsSeek(xFilial("SF2") + (cAliasSD1)->D1_NFORI + (cAliasSD1)->D1_SERIORI)

		If !(xFilial("SD2") == SD2->D2_FILIAL .And.;
				(cAliasSD1)->D1_NFORI   == SD2->D2_DOC 	.And.;
				(cAliasSD1)->D1_SERIORI == SD2->D2_SERIE   .And.;
				SF2->F2_CLIENTE         == SD2->D2_CLIENTE .And.;
				SF2->F2_LOJA 	        == SD2->D2_LOJA 	.And.;
				(cAliasSD1)->D1_COD     == SD2->D2_COD 	.And.;
				Alltrim((cAliasSD1)->D1_ITEMORI) == AllTrim(SD2->D2_ITEM))
			dbSelectArea("SD2")
			dbSetOrder(3)
			MsSeek(xFilial("SD2")+(cAliasSD1)->D1_NFORI+(cAliasSD1)->D1_SERIORI+SF2->F2_CLIENTE+SF2->F2_LOJA+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_ITEMORI )
		EndIf
		If (SD2->(!Eof()))
			RecLock("SD2",.F.)
			SD2->D2_QTDEDEV	-= (cAliasSD1)->D1_QUANT
			SD2->D2_VALDEV	-= (cAliasSD1)->D1_TOTAL

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se a devolução veio de uma troca/devolução da loja, altera o status do ³
	        //³ do item da venda.                                                      ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SD2->D2_ORIGLAN == "LO"
				LJ020AltStatus(SD2->D2_FILIAL, SD2->D2_SERIE, SD2->D2_DOC, SD2->D2_COD, SD2->D2_ITEMPV)
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza requisicao direta a Ordem de Producao                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty((cAliasSD1)->D1_OP)
		dbSelectArea("SD3")
		dbSetOrder(4)
		nSldRe5 := (cAliasSD1)->D1_QUANT
		If MsSeek(xFilial("SD3")+(cAliasSD1)->D1_NUMSEQ, .F.)
			While !Eof() .And. xFilial("SD3") == SD3->D3_FILIAL .And.;
					SD3->D3_NUMSEQ == (cAliasSD1)->D1_NUMSEQ .And.;
					SD3->D3_CF <> "RE5"
				dbSelectArea("SD3")
				dbSkip()
			EndDo
			If SD3->D3_ESTORNO # "S" .And. !SD3->D3_NUMSEQ <> (cAliasSD1)->D1_NUMSEQ .And. Empty(SD3->D3_PROJPMS)
				RecLock("SD3",.F.)
				SD3->D3_ESTORNO := "S"
				For nX := 1 To FCount()
					aadd(aSD3,FieldGet(nX))
				Next nX
				RecLock("SD3",.T.)
				For nX := 1 To FCount()
					FieldPut(nX,aSD3[nX])
				Next nX
				SD3->D3_TM      := "499"
				SD3->D3_CF      := "DE5"
				SD3->D3_USUARIO := CUSERNAME
				dbSelectArea("SD4")
				dbSetOrder(1)
				MsSeek(xFilial("SD4")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_OP)
				While nSldRE5 > 0
					If SD4->(D4_FILIAL+D4_COD+D4_OP) == xFilial("SD4")+(cAliasSD1)->(D1_COD+D1_OP)
						RecLock("SD4",.F.)
						aBaixa:={Min(SD4->D4_QTDEORI-SD4->D4_QUANT,(cAliasSD1)->D1_QUANT),ConvUM(SD4->D4_COD, Min(SD4->D4_QTDEORI-SD4->D4_QUANT,(cAliasSD1)->D1_QUANT),0,2)}

						SD4->D4_QUANT   += aBaixa[1]
						SD4->D4_QTSEGUM += aBaixa[2]

						RecLock("SB2",.F.)
						SB2->B2_QEMP  += aBaixa[1]
						SB2->B2_QEMP2 += aBaixa[2]

						nSldRE5 -= SD4->D4_QUANT
						SD4->(dbSkip())
					Else
						nSldRE5 := 0
					EndIf
				End
				B2AtuComD3({SD3->D3_CUSTO1,SD3->D3_CUSTO2,SD3->D3_CUSTO3,SD3->D3_CUSTO4,SD3->D3_CUSTO5})
				C2AtuComD3({SD3->D3_CUSTO1,SD3->D3_CUSTO2,SD3->D3_CUSTO3,SD3->D3_CUSTO4,SD3->D3_CUSTO5})
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorna requisicao valorizada para nota complementar com Custo Fifo    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (lCusFifo .Or. lCusLifo) .And. lAjNfCompl .And. (cAliasSD1)->D1_TIPO == 'C'
		dbSelectArea("SD3")
		dbSetOrder(4)
		If MsSeek(xFilial("SD3")+(cAliasSD1)->D1_NUMSEQ, .F.)
			While !Eof() .And. xFilial("SD3") == SD3->D3_FILIAL .And.;
					SD3->D3_NUMSEQ == (cAliasSD1)->D1_NUMSEQ .And.	SD3->D3_CF <> "RE6"
				dbSelectArea("SD3")
				dbSkip()
			EndDo
			If SD3->D3_ESTORNO # "S" .And. !SD3->D3_NUMSEQ <> (cAliasSD1)->D1_NUMSEQ .And. Empty(SD3->D3_PROJPMS)
				RecLock("SD3",.F.)
				SD3->D3_ESTORNO := "S"
				aSD3 := {}
				For nX := 1 To FCount()
					aadd(aSD3,FieldGet(nX))
				Next nX
				RecLock("SD3",.T.)
				For nX := 1 To FCount()
					FieldPut(nX,aSD3[nX])
				Next nX
				SD3->D3_TM      := "499"
				SD3->D3_CF      := "DE6"
				SD3->D3_USUARIO := CUSERNAME
				B2AtuComD3({SD3->D3_CUSTO1,SD3->D3_CUSTO2,SD3->D3_CUSTO3,SD3->D3_CUSTO4,SD3->D3_CUSTO5})
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorno do CQ                                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty((cAliasSD1)->D1_NUMCQ) .AND. (cAliasSD1)->D1_ORIGLAN <> "LO"

		fEstoCQ8((cAliasSD1)->D1_NUMCQ,(cAliasSD1)->D1_COD,(cAliasSD1)->D1_LOCAL,IIF((cAliasSD1)->D1_TIPO$"CIP",{(cAliasSD1)->D1_DOC, (cAliasSD1)->D1_SERIE, (cAliasSD1)->D1_FORNECE, (cAliasSD1)->D1_LOJA},Nil))

		If !(cAliasSD1)->D1_TIPO $ "CIP"
			dbSelectArea("SD7")
			dbSetOrder(1)

			If RetFldProd(SB1->B1_COD,"B1_TIPOCQ")=="Q"
				lQuery := .T.
				cCursorSD7 := GetNextAlias()

				cQuery := "SELECT SD7.*,SD7.R_E_C_N_O_ SD7RECNO "
				cQuery += "  FROM "+RetSqlName("SD7")+" SD7 "
				cQuery += " WHERE SD7.D7_FILIAL  = '"+xFilial("SD7")+"'"
				cQuery += "   AND SD7.D7_NUMERO  = '"+(cAliasSD1)->D1_NUMCQ+"'"
				cQuery += "   AND SD7.D7_LOCAL   = '"+(cAliasSD1)->D1_LOCAL+"'"
				cQuery += "   AND SD7.D7_PRODUTO = '"+(cAliasSD1)->D1_COD+"'"
				cQuery += "   AND SD7.D_E_L_E_T_ = ' ' "
				cQuery += "ORDER BY "+SqlOrder(SD7->(IndexKey()))

				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cCursorSD7)

				For nX := 1 To Len(aStruSD7)
					If aStruSD7[nX][2]<>"C"
						TcSetField(cCursorSD7,aStruSD7[nX][1],aStruSD7[nX][2],aStruSD7[nX][3],aStruSD7[nX][4])
					EndIf
				Next nX

			Else
				lQuery := .T.
				cQuery := "UPDATE "+RetSqlName("SD7")+" "
				cQuery += "   SET D_E_L_E_T_ = '*' "
				cQuery += " WHERE D7_FILIAL  = '"+xFilial("SD7")+"'"
				cQuery += "   AND D7_NUMERO  = '"+(cAliasSD1)->D1_NUMCQ+"'"
				cQuery += "   AND D7_PRODUTO = '"+(cAliasSD1)->D1_COD+"'"
				cQuery += "   AND D7_LOCAL   = '"+(cAliasSD1)->D1_LOCAL+"'"
				cQuery += "   AND D_E_L_E_T_ = ' ' "

				TcSqlExec(cQuery)
				SD7->(MsGoto(0))
			EndIf

			If !lQuery .Or. RetFldProd(SB1->B1_COD,"B1_TIPOCQ")=="Q"
				While !(cCursorSD7)->(Eof()) .And. xFilial("SD7") == (cCursorSD7)->D7_FILIAL .And.;
						(cAliasSD1)->D1_NUMCQ == (cCursorSD7)->D7_NUMERO  .And.;
						(cAliasSD1)->D1_COD   == (cCursorSD7)->D7_PRODUTO .And.;
						(cAliasSD1)->D1_LOCAL == (cCursorSD7)->D7_LOCAL
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Estorno do CQ no Quality                                               ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (cCursorSD7)->D7_TIPO==0 .And. (cCursorSD7)->D7_ORIGLAN=="CP" .And. RetFldProd(SB1->B1_COD,"B1_TIPOCQ")=="Q"
						If Rastro(SB1->B1_COD)
							dbSelectArea("SD5")
							dbSetOrder(3)
							If MsSeek(xFilial("SD5")+(cAliasSD1)->D1_NUMSEQ+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_LOTECTL,.F.)
								aLote := {SD5->D5_LOTECTL,SD5->D5_NUMLOTE}
							Else
								aLote := {"",""}
							EndIf
						EndIf
						aEnvCele := {(cAliasSD1)->D1_DOC,; //Numero da Nota Fiscal
							(cAliasSD1)->D1_SERIE,;        //Serie da Nota Fiscal
							(cAliasSD1)->D1_TIPO,;         //Tipo da Nota Fiscal
							(cAliasSD1)->D1_EMISSAO,;      //Data de Emissao da Nota Fiscal
							(cAliasSD1)->D1_DTDIGIT,;      //Data de Entrada da Nota Fiscal
							"NF",; 	  		                //Tipo de Documento
							(cAliasSD1)->D1_ITEM,; 	        //Item da Nota Fiscal
							(cAliasSD1)->D1_REMITO,;       //Numero do Remito (Localizacoes)
							(cAliasSD1)->D1_PEDIDO,;       //Numero do Pedido de Compra
							(cAliasSD1)->D1_ITEMPC,;       //Item do Pedido de Compra
							(cAliasSD1)->D1_FORNECE,;      //Codigo Fornecedor/Cliente
							(cAliasSD1)->D1_LOJA,;         //Loja Fornecedor/Cliente
							(cAliasSD1)->D1_LOTEFOR,;      //Numero do Lote do Fornecedor
							Space(6),;                     //Codigo do Solicitante
							(cAliasSD1)->D1_COD,;          //Codigo do Produto
							(cAliasSD1)->D1_LOCAL,;        //Local Origem
							aLote[1],;                     //Numero do Lote
							aLote[2],;                     //Sequencia do Sub-Lote
							(cAliasSD1)->D1_NUMSEQ,;       //Numero Sequencial
							(cCursorSD7)->D7_NUMERO,;      //Numero do CQ
							(cAliasSD1)->D1_QUANT,;        //Quantidade
							(cAliasSD1)->D1_TOTAL,;        //Preco
							0,;                            //Dias de atraso
							(cAliasSD1)->D1_TES,;          //TES
							AllTrim(FunName()),;           //Origem
							" ",;                          //Origem TXT
							0}                             //Quantidade do Lote Original
						aRecCele := QAtuMatQie(aEnvCele,2,,IIf(Type('l103Auto') <> 'U', l103Auto, .F. ))
					EndIf

					If lQuery
						SD7->( MsGoto( ( cCursorSD7 )->SD7RECNO ) )
					EndIf

					RecLock("SD7", .F.)
					SD7->( dbDelete() )
					( cCursorSD7 )->( dbSkip() )
				EndDo
			EndIf
			If lQuery
				dbSelectArea(cCursorSD7)
				dbCloseArea()
				dbSelectArea("SD7")
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza saldo fisico e financeiro                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RecLock("SD1",.F.)
	If SF4->F4_ESTOQUE=="S"
		B2AtuComD1(-1,(cAliasSD1)->D1_SKIPLOT, cAliasSD1, .T.)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Amarracao Fornecedor/Produto                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA5")
	dbSetOrder(1)
	lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_COD)
	If !lAchou .And. lReferencia
		dbSelectArea("SA5")
		dbSetOrder(1)
		lAchou := MsSeek(xFilial("SA5")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+cProdRef)
	Endif
	If lAchou
		RecLock("SA5",.F.)
		For nX := 1 To 12
			If ( FieldGet(FieldPos("A5_DTCOM"+StrZero(nX,2))) == (cAliasSD1)->D1_EMISSAO .And.;
					FieldGet(FieldPos("A5_PRECO" +StrZero(nX,2))) == IIF(nMcusto=="1",(cAliasSD1)->D1_CUSTO/(cAliasSD1)->D1_QUANT,(cAliasSD1)->(FieldGet(FieldPos("D1_CUSTO"+nMcusto)))/(cAliasSD1)->D1_QUANT) .And.;
					FieldGet(FieldPos("A5_QUANT" +StrZero(nX,2))) == (cAliasSD1)->D1_QUANT .And.;
					FieldGet(FieldPos("A5_COND"  +StrZero(nX,2))) == SF1->F1_COND )

				FieldPut(FieldPos("A5_DTCOM"+StrZero(nX,2)),Ctod(""))
				FieldPut(FieldPos("A5_PRECO" +StrZero(nX,2)),0)
				FieldPut(FieldPos("A5_QUANT" +StrZero(nX,2)),0)
				FieldPut(FieldPos("A5_COND"  +StrZero(nX,2)),"")

			EndIf
		Next nX

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza quantidade de entregas do produto  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SA5->A5_SKIPLOT > 0
			SA5->A5_ENTREGA -= 1
		EndIf
   		MsUnlock()

	EndIf
	//CIAP
	If ( !Empty((cAliasSD1)->D1_CODCIAP) )
		A103CIAP(2, cAliasSD1, , "MATA103")
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pedido de Compra                                                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty((cAliasSD1)->D1_PEDIDO)
		dbSelectArea("SC7")
		dbSetOrder(19)
		If MsSeek(xFilial("SC7")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_PEDIDO+(cAliasSD1)->D1_ITEMPC)
			MaAvalPC("SC7",9)

			If A103GCDisp()
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Retorna o saldo a receber da planilha                                  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				CtaAvalGCT(2,aContratos,SC7->C7_CONTRA,SC7->C7_PLANILH,SC7->C7_ITEMED,SD1->D1_QUANT,,SC7->C7_MEDICAO,SD1->D1_TOTAL)
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza Poder de Terceiro                                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SF4->F4_PODER3<>"N"
		MaAtuSB6("SD1",2)
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica os documentos de cobertura                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SDH")
	dbSetOrder(1)
	If MsSeek(xFilial("SDH")+SD1->D1_NUMSEQ)
		nQtdBaixa := SDH->DH_QUANT
		RecLock("SDH")
		SDH->(dbDelete())
		MsUnLock()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Atualiza o documento de cobertura original                             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SDH->DH_TPMOV == "2"
			dbSelectArea("SDH")
			dbSetOrder(2)
			If MsSeek(xFilial("SDH")+"1"+SDH->DH_SERIE+SDH->DH_DOC+SDH->DH_ITEM+SDH->DH_CLIENTE+SDH->DH_LOJACLI+SDH->DH_FORNECE+SDH->DH_LOJAFOR+SDH->DH_OPER)
				RecLock("SDH")
				SDH->DH_SALDO += nQtdBaixa
				MsUnLock()
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica complementos de integracao                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("bTTSSD1")=="B"
		Eval(bTTSSD1,nOpcao)
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Integracao com o modulo de projetos                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If IntePms()
		PmsWriteNF(3,cAliasSD1,,,lEstNfClass)
	EndIf

EndCase
RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRatCC  ³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Interface com o usuario para o rateio de centro de custo dos ³±±
±±³          ³itens do documento de entrada                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: aHeader do alias SDE                                  ³±±
±±³          ³ExpA2: aCols do alias SDE com a seguinte estrutura:          ³±±
±±³          ³       [1] Item do documento de entrada                      ³±±
±±³          ³       [2] aCols do SDE                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo controlar a interface com o usu³±±
±±³          ³ario do rateio dos itens do documento de entrada             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103RatCC()
Local bSavKeyF9   := SetKey(VK_F9,Nil)

If !l103Auto .And. !IsInCallStack ('MATA140')
	If M->D1_RATEIO =="1"
		Eval(bSavKeyF9,.T.)
	Endif
EndIf
SetKey(VK_F9 ,bSavKeyF9)

Return(.T.)

Function NfeRatCC(aHeadSDE,aColsSDE,lAltera,lValidX3)

Local aArea       := GetArea()
Local aSavaRotina := aClone(aRotina)
Local aColsCC     := {}
Local aButtons	  := {}
Local aButtonUsr  := {}
Local aHeadSD1    := {}
Local aColsSD1    := {}
Local aBkpSDE     := {}
Local aNoFields   := {"DE_CUSTO1","DE_CUSTO2","DE_CUSTO3","DE_CUSTO4","DE_CUSTO5"}
Local bSavKeyF4   := SetKey(VK_F4 ,Nil)
Local bSavKeyF5   := SetKey(VK_F5 ,Nil)
Local bSavKeyF6   := SetKey(VK_F6 ,Nil)
Local bSavKeyF7   := SetKey(VK_F7 ,Nil)
Local bSavKeyF8   := SetKey(VK_F8 ,Nil)
Local bSavKeyF9   := SetKey(VK_F9 ,Nil)
Local bSavKeyF10  := SetKey(VK_F10,Nil)
Local bSavKeyF11  := SetKey(VK_F11,Nil)
Local nPItemNF	  := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_ITEM"} )
Local nPCC	      := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_CC"} )
Local nPConta	  := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_CONTA"} )
Local nPItemCta   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_ITEMCTA"} )
Local nPCLVL	  := Ascan(aHeader,{|x| AllTrim(x[2]) == "D1_CLVL"} )
Local nPDECC	  := 0
Local nPDEConta	  := 0
Local nPDEItemCta := 0
Local nPDECLVL	  := 0
Local nPRateio    := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_RATEIO"} )
Local nColTotal   := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_TOTAL"} )
Local nItem  	   := aScan(aColsSDE,{|x| x[1] == aCols[n][nPItemNF]})
Local nX          := 0
Local nSavN       := N
Local nPPercSDE   := 0
Local nTotPerc    := 0
Local nOpcA       := 0
Local nNewTam     := 0
Local nLinDoc     := 0
Local lContinua   := .T.
Local lRet        := .T.
Local lMT103LRAT  := .T.
Local lRetPCO     := .T.
Local oDlg
Local cCampo      := ReadVar()
Local nAviso      := 0
Local oSize
Local lMA103REPRAT:=ExistBlock("MA103REPRAT")
Local aColsSDEcpy

DEFAULT aHeadSDE  := {}
DEFAULT aColsSDE  := {}
DEFAULT lAltera   := .T.
DEFAULT lValidX3  := .F.

Private aOrigHeader := aClone(aHeader)
Private aOrigAcols  := aClone(aCols)
Private oGetMan
Private nOrigN      := N
Private nPercRat    := 0
Private nPercARat	  := 100
Private oPercRat
Private oPercARat
Private cItNfEntr  := aCols[n, nPItemNF] //utilizado pela funcao PcoVldLan() modulo PCO
Private nVlrTotal  := aCols[n, nColTotal] //utilizado pela funcao PcoVldLan() modulo PCO
Private oGetDad


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para inibir o Rateio do item por    	 ³
//³ Centro de Custo                           			     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("NFEINICC")
	lRet := Execblock("NFEINICC",.F.,.F.)
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
EndIf

If lRet
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ativa os botoes da toolbar                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (!l103Visual)
		If !__lPyme
			aadd(aButtons,{'AUTOM',{||  a103RatPCnf(aHeadSde,oGetDad) },STR0021,OemToAnsi(STR0029)}) //'Escolha de Rateio Pre-Configurado'
		EndIF
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de Entrada Padrao                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("A103BRCC")
		aButtonUsr := ExecBlock("A103BRCC",.F.,.F.,{{|x|aHeadSde}})
	  	If ValType(aButtonUsr) == "A"
			For nX   := 1  To  Len(aButtonUsr)
		  		aadd(aButtons,aClone(aButtonUsr[nX]))
			Next nX
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Impede de executar a rotina quando a tecla F3 estiver ativa		   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("InConPad") == "L"
		lContinua := !InConPad
	EndIf
	If lContinua
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem do aHeader do SDE                                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Empty(aHeadSDE)
			dbSelectArea("SX3")
			dbSetOrder(1)
			MsSeek("SDE")
			While !EOF() .And. (SX3->X3_ARQUIVO == "SDE")
				IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"DE_CUSTO"$SX3->X3_CAMPO
					AADD(aHeadSDE,{ TRIM(x3Titulo()),;
						SX3->X3_CAMPO,;
						SX3->X3_PICTURE,;
						SX3->X3_TAMANHO,;
						SX3->X3_DECIMAL,;
						SX3->X3_VALID,;
						SX3->X3_USADO,;
						SX3->X3_TIPO,;
						SX3->X3_F3,;
						SX3->X3_CONTEXT } )
				EndIf
				dbSelectArea("SX3")
				dbSkip()
			EndDo
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			ADHeadRec("SDE",aHeadSDE)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³A rotina a seguir limpa o rateio digitado no item quando o mesmo for ³
		//³acionado pela validacao do campo D1_RATEIO com conteudo igual a NAO. ³
		//³Quando o rateio e disparado pela tecla F9, o D1_RATEIO sempre sera   ³
		//³igual a SIM e o lValidX3 assume o default .F., porem quando o rateio ³
		//³for acionado pela validacao do D1_RATEIO o lValidX3 sera .T. e aciona³
		//³a rotina a seguir para confirmar ou nao a exclusao do rateio no item.³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nItem > 0 .And. lValidX3
			If M->D1_RATEIO == "2"
				If Aviso(STR0018,STR0030,{STR0008,STR0007})==1
					nNewTam   := Len(aColsSDE)-1
					aColsSDE  := aSize(aDel(aColsSDE,nItem), nNewTam)
					nItem := aScan(aColsSDE,{|x| x[1] == aCols[n][nPItemNF]})
		        EndIF
		    EndIf
	    EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem do aCols do SDE                                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nItem > 0
			aColsCC := aClone(aColsSDE[nItem][2])

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Totaliza o % ja Rateado ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nPercRat := 0
			For nX   := 1  To  Len(aColsCC)
				If aColsCC[nX][aScan(aHeadSDE,{|x| AllTrim(x[2])=="DE_PERC"})] <> NIL
					nPercRat += aColsCC[nX][aScan(aHeadSDE,{|x| AllTrim(x[2])=="DE_PERC"})]
				EndIf
			Next nX

			nPercARat := 100 - nPercRat
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ aHeader e aCols do SD1 devem ser salvos pois a FillGetDados destroe ³
			//³ ambos por serem PRIVATE, independente da construcao do aColsCC.     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aHeadSD1 := aClone(aHeader)
			aColsSD1 := aClone(aCols)
	        aHeadSDE := {}
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			FillGetDados(IIf(lAltera,3,2),"SDE",1,,,,aNoFields,,,,,.T.,aHeadSDE,aColsCC,,,)
			aColsCC[1][aScan(aHeadSDE,{|x| Trim(x[2])=="DE_ITEM"})] := StrZero(1,Len(SDE->DE_ITEM))

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Ponto de Entrada para açterar array de rateio por CC       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistBlock("MT100RTX") .And. ( !lValidX3 .Or. (lValidX3 .And. M->D1_RATEIO == "1") )
				If ValType(aColsCC) == "A"
					aColsCC:= ExecBlock("MT100RTX",.F.,.F.,{aHeadSDE,aColsCC})
				Endif
			Endif

	        aHeader := aHeadSD1
	        aCols   := aColsSD1

		EndIf
		If !(Type('l103Auto') <> 'U' .And. l103Auto)
			aHeadSD1 := aClone(aHeader)
			aColsSD1 := aClone(aCols)
			DEFINE MSDIALOG oDlg FROM 100,100 TO 350,740 TITLE STR0020 Of oMainWnd PIXEL //"Rateio por Centro de Custo"

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Calcula dimensões                                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			oSize := FwDefSize():New(.T.,,,oDlg)
			oSize:aWorkArea := {000, 035, 320, 120 }
			oSize:AddObject( "CABECALHO",  100, 10, .T., .T. ) // Totalmente dimensionavel
			oSize:AddObject( "GETDADOS" ,  100, 80, .T., .T. ) // Totalmente dimensionavel
			oSize:AddObject( "RODAPE"   ,  100, 10, .T., .T. ) // Totalmente dimensionavel

			oSize:lProp 	:= .T. // Proporcional
			oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3

			oSize:Process() 	   // Dispara os calculos

			@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI") SAY RetTitle("F1_DOC")  OF oDlg PIXEL SIZE 20,09
			@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+30 SAY Substr(cSerie,1,3)+"/"+cNFiscal OF oDlg PIXEL SIZE 50,09
			@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+93 SAY RetTitle("D1_ITEM") OF oDlg PIXEL SIZE 20,09
			@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+112 SAY aCols[N][nPItemNF]  OF oDlg PIXEL SIZE 20,09

		    oGetDad := MsNewGetDados():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
					   oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
     			       IIF(lAltera,GD_INSERT+GD_UPDATE+GD_DELETE,0),"NfeRatLOk","NfeRatTOk","+DE_ITEM",,,999,/*fieldok*/,/*superdel*/,/*delok*/,oDlg,aHeadSDE,aColsCC)
			oGetMan := oGetDad

			@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI") Say OemToAnsi(STR0042) FONT oDlg:oFont OF oDlg PIXEL	 // "% Rateada: "
			@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+30  Say oPercRat VAR nPercRat Picture PesqPict("SDE","DE_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL
			@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+180 Say OemToAnsi(STR0043) FONT oDlg:oFont OF oDlg PIXEL	 // "% A Ratear: "
	 		@ oSize:GetDimension("RODAPE","LININI"),oSize:GetDimension("RODAPE","COLINI")+214 Say oPercARat VAR nPercARat Picture PesqPict("SDE","DE_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL
			ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,{||IIF(oGetDad:TudoOk(),(nOpcA:=1,oDlg:End()),(nOpcA:=0))},{||oDlg:End()},,aButtons)

			If lAltera
				aColsCC := Aclone(oGetDad:aCols)
			Else
		        aHeader := aHeadSD1
		        aCols   := aColsSD1
			EndIf
		Else
			nOpcA := 1
		EndIf
		nPPercSDE := aScan(aHeadSDE,{|x| AllTrim(x[2])=="DE_PERC"})
		nTotPerc := 0

		aColsPar :={}
		AEval( aColsCC, { |x| If( !x[ Len(aHeadSDE) + 1], AAdd( aColsPar, x ), ) } )
		aColsCC := aClone( aColsPar )

		For nX := 1 To Len(aColsCC)
			nTotPerc += aColsCC[nX][nPPercSDE]
		Next nX

		nPDECC	      := aScan(aHeadsde,{|x| AllTrim(x[2]) == "DE_CC"} )
		nPDEConta	  := aScan(aHeadsde,{|x| AllTrim(x[2]) == "DE_CONTA"} )
		nPDEItemCta   := aScan(aHeadsde,{|x| AllTrim(x[2]) == "DE_ITEMCTA"} )
		nPDECLVL	  := Ascan(aHeadsde,{|x| AllTrim(x[2]) == "DE_CLVL"} )

		If nOpcA == 1 .And. lAltera
			If nTotPerc > 0
				If nItem > 0
					aColsSDE[nItem][2]	:= aClone(aColsCC)
				Else
					aadd(aColsSDE,{aCols[N][nPItemNF],aClone(aColsCC)})
				EndIf

				aCols[N][nPRateio] := "1"

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//|Ponto de Entrada que irá indicar se o aCOLS continuará  |
				//|preenchido quando houver rateio por Centro de Custo	   |
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ExistBlock("MT103LRAT")
			   		lMT103LRAT:=ExecBlock("MT103LRAT",.F.,.F.,{aHeadSDE,aColsSDE})
	   				If ValType(lMT103LRAT)<>"L"
		   				lMT103LRAT:=.T.
		   			EndIf
			 	EndIf

				If lMT103LRAT
					If nPCC <> 0 .And. nPDECC <> 0
						aCols[N][nPCC]     := Space(Len(aCols[N][nPCC]))
					EndIf
					If nPConta <> 0 .And. nPDEConta <> 0
						aCols[N][nPConta]  := Space(Len(aCols[N][nPConta]))
					EndIf
					If nPItemCta <> 0 .And. nPDEItemCta <> 0
						aCols[N][nPItemCta]:= Space(Len(aCols[N][nPItemCta]))
					EndIf
					If nPCLVL <> 0 .And. nPDECLVL <> 0
						aCols[N][nPCLVL]   := Space(Len(aCols[N][nPCLVL]))
					EndIf
				EndIf
			    If Len(aCols)>1
					nAviso := Aviso(STR0018,STR0046,{STR0008,STR0007,STR0047}) //"Atenção"###"Replicar informações para os demais itens do documento?"###"Sim"###"Não"###"Todos"
					aBkpSDE := aClone(aColsSDE)
					If nAviso == 3
						aColsSDE := {}
					EndIf
					If nAviso <> 2
						For nX := 1 To Len(aCols)
							nItem  	  := aScan(aColsSDE,{|x| x[1] == aCols[nX][nPItemNF]})
							If nItem == 0
								aadd(aColsSDE,{aCols[nX][nPItemNF],aClone(aColsCC)})

								aCols[nX][nPRateio] := "1"

								If lMT103LRAT
									If nPCC <> 0 .And. nPDECC <> 0
										aCols[NX][nPCC]     := Space(Len(aCols[NX][nPCC]))
									EndIf
									If nPConta <> 0 .And. nPDEConta <> 0
										aCols[NX][nPConta]  := Space(Len(aCols[NX][nPConta]))
									EndIf
									If nPItemCta <> 0 .And. nPDEItemCta <> 0
										aCols[NX][nPItemCta]:= Space(Len(aCols[NX][nPItemCta]))
									EndIf
									If nPCLVL <> 0 .And. nPDECLVL <> 0
										aCols[NX][nPCLVL]   := Space(Len(aCols[NX][nPCLVL]))
									EndIf
								EndIf
								If nAviso == 3 .And. lMA103REPRAT
									aColsSDEcpy:=ExecBlock("MA103REPRAT",.F.,.F.,{aHeadSDE,aColsSDE})
									If ValType(aColsSDEcpy) == 'A'
									   aColsSDE:= aColsSDEcpy
									EndIf
								EndIf
							EndIf
							// Executa validacao de bloqueio no SIGAPCO para todos os itens do documento
							// quando for selecionada opcao para replicar rateio para os demais itens
							If aCols[nX][nPItemNF] != cItNfEntr	// Nao executa validacao para a linha da nota que esta posicionada, pois ja foi validada pela funcao NfeRatLok
								cItNfEntr := aCols[nX][nPItemNF]
								nVlrTotal := aCols[nX][nColTotal]
								nLinDoc := aScan(aColsSDE,{|x| x[1] == aCols[nX][nPItemNF]})
								lRetPCO := NfeRatTok(aHeadSDE,aColsCC,nLinDoc,.T.)
								If !lRetPCO
									aColsSDE := aBkpSDE
									Exit
								EndIf
							EndIf
						Next nX
					EndIf
				EndIf
			Else
				If nItem > 0
					aColsSDE[nItem][2]	:= aClone(aColsCC)
				Else
					aadd(aColsSDE,{aCols[N][nPItemNF],aClone(aColsCC)})
				EndIf
				aCols[nSavN][nPRateio] := "2"
				M->D1_RATEIO := "2"
			EndIf
		ElseIf !l103Visual
			If nTotPerc > 0 .And. nItem > 0
				If "D1_RATEIO" $ cCampo
					&cCampo := "1"
				EndIf
				aCols[nSavN][nPRateio] := "1"
			Else
				If "D1_RATEIO" $ cCampo
					&cCampo := "2"
				EndIf
				aCols[nSavN][nPRateio] := "2"
			EndIf
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRotina	:= aClone(aSavaRotina)
N := nSavN
SetKey(VK_F4 ,bSavKeyF4)
SetKey(VK_F5 ,bSavKeyF5)
SetKey(VK_F6 ,bSavKeyF6)
SetKey(VK_F7 ,bSavKeyF7)
SetKey(VK_F8 ,bSavKeyF8)
SetKey(VK_F9 ,bSavKeyF9)
SetKey(VK_F10,bSavKeyF10)
SetKey(VK_F11,bSavKeyF11)
RestArea(aArea)
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³NfeCarCC ³ Autor ³ Wagner Mobile Costa    ³ Data ³21.10.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega as definicoes de rateio externo                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function NfeCarCC(aCols, aHeader, cItem, lPrimeiro)

Local lCusto		:= CtbMovSaldo("CTT")
Local lItem	 		:= CtbMovSaldo("CTD")
Local lCLVL	 		:= CtbMovSaldo("CTH")
Local lMT103PRE     := ExistBlock("MT103PRE")
Local lBloqCTJ      := .F.
Local nPosPerc		:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_PERC" } )
Local nPosItem		:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_ITEM" } )
Local nPosCC		:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CC"} )
Local nPosConta		:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CONTA"} )
Local nPosItemCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_ITEMCTA"} )
Local nPosCLVL		:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CLVL"} )
Local nHeader       := 0
Local aMT103PRE     := {}
Local aEntidades	:= {}
Local nEnt			:= 0
Local nDeb			:= 0

If lPrimeiro
	//-- Se ja foi informado algum rateio, limpar o aCols
	If aCols[Len(aCols)][nPosPerc] <> 0
		aCols := {}
		Aadd(aCols, Array(Len(aHeader) + 1))
		For nHeader := 1 To Len(aHeader)
			If Trim(aHeader[nHeader][2]) <> "DE_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "DE_REC_WT"
				aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
			Endif
		Next
	EndIf
	cItem := Soma1(cItem)
	aCols[Len(aCols)][nPosItem]  := cItem
	aCols[Len(aCols)][Len(aHeader)+1] := .F.
Else
	If CTJ->(FieldPos('CTJ_MSBLQL'))>0
		lBloqCTJ:=IIF(CTJ->CTJ_MSBLQL=="1",.T.,.F.)
	EndIf

	If !lBloqCTJ
		If aCols[Len(aCols)][nPosPerc] = 0
			nCols := Len(aCols)
			cItem := aCols[nCols][nPosItem]
		Else
			If Len(aCols) > 0
				cItem := aCols[Len(aCols)][nPosItem]
			Endif
			Aadd(aCols, Array(Len(aHeader) + 1))
			cItem := Soma1(cItem)
		EndIf

		For nHeader := 1 To Len(aHeader)
			If Trim(aHeader[nHeader][2]) <> "DE_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "DE_REC_WT"
				aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
			EndIf
		Next

		aCols[Len(aCols)][nPosItem] := cItem

		// Interpreto os campos incluida possibilidade de variaveis de memoria
		If !Empty(CTJ->CTJ_DEBITO)
			aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_DEBITO
		Else
			aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_CREDIT
		Endif

		If lCusto
			If ! Empty(CTJ->CTJ_CCD)
				aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCD
			Else
				aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCC
			Endif
		EndIf

		If lItem
			If ! Empty(CTJ->CTJ_ITEMD)
				aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMD
			Else
				aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMC
			Endif
		EndIf

		If lClVl
			If ! Empty(CTJ->CTJ_CLVLDB)
				aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLDB
			Else
				aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLCR
			Endif
		EndIf
		aCols[Len(aCols)][nPosPerc] := CTJ->CTJ_PERCEN
		aCols[Len(aCols)][Len(aHeader) + 1] := .F.

		aEntidades := CtbEntArr()
		For nEnt := 1 to Len(aEntidades)
			For nDeb := 1 to 2
				cCpo := "DE_EC"+aEntidades[nEnt]
				cCTJ := "CTJ_EC"+aEntidades[nEnt]

				If nDeb == 1
					cCpo += "DB"
					cCTJ += "DB"
				Else
					cCpo += "CR"
					cCTJ += "CR"
				EndIf

				nPosHead := aScan(aHeader,{|x| AllTrim(x[2]) == Alltrim(cCpo) } )

				If nPosHead > 0
			   		aCols[Len(aCols)][nPosHead] := CTJ->(&(cCTJ))
				EndIf

			Next nDeb
		Next nEnt

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada que retorna dados dos campos personalizados   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lMT103PRE
			aMT103PRE := ExecBlock( "MT103PRE", .F., .F.,{aHeader,aCols})
			If ( ValType(aMT103PRE) == 'A' )
				aCols := AClone(aMT103PRE)
			EndIf
		EndIf
	Else
		Aviso("A103NFECARCC",STR0112,{"Ok"})
	EndIf
EndIf

Return .T.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRatLok ³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Validacao da linhaok dos itens do rateio dos itens do documen³±±
±±³          ³to de entrada                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a linha esta valida                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a linhaok do rateio dos³±±
±±³          ³itens do documento de entrada                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeRatLOk()

Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "DE_PERC"} )
Local nPCC	    := aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CC"} )
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CONTA"} )
Local nPItemCta := aScan(aHeader,{|x| AllTrim(x[2]) == "DE_ITEMCTA"} )
Local nPCLVL	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_CLVL"} )

Local nEc05Db	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_EC05DB"} )
Local nEc06Db	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_EC06DB"} )
Local nEc07Db	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_EC07DB"} )
Local nEc08Db	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_EC08DB"} )
Local nEc09Db	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_EC09DB"} )

Local lRetorno  := .T.
Local lMt103LOk := Existblock("MT103LOK")
Local nX        := 0
Local nAscan	:= 0
Local lDAmarCt	:= SuperGetMV( "MV_DAMARCT",.F.,.F. )
Local lRatDupl	:= GetNewPar("MV_RATDUPL",.F.)

If lMt103Lok
	lRetorno := Execblock("MT103LOK",.F.,.F.)
Endif

If lRetorno .And. !lRatDupl
	If nEc05Db = 0
		nAscan := Ascan( aCols, { |e| 	e[nPCC] == aCols[n][nPCC] .And. e[nPConta] == aCols[n][nPConta] .And. e[nPItemCta] == aCols[n][nPItemCta] .And.;
												 	e[nPCLVL] == aCols[n][nPCLVL] .And. !e[len(e)] } )
	Elseif nEc09Db > 0
		nAscan := Ascan( aCols, { |e| 	e[nPCC] == aCols[n][nPCC] .And. e[nPConta] == aCols[n][nPConta] .And. e[nPItemCta] == aCols[n][nPItemCta] .And.;
												 	e[nPCLVL] == aCols[n][nPCLVL] .And. !e[len(e)] .And. ;
												 	e[nEc09Db] == aCols[n][nEc09Db] .And. e[nEc08Db] == aCols[n][nEc08Db] .And. e[nEc07Db] == aCols[n][nEc07Db] .And. ;
												 	e[nEc06Db] == aCols[n][nEc06Db] .And. e[nEc05Db] == aCols[n][nEc05Db]} )
	Elseif nEc08Db > 0
		nAscan := Ascan( aCols, { |e| 	e[nPCC] == aCols[n][nPCC] .And. e[nPConta] == aCols[n][nPConta] .And. e[nPItemCta] == aCols[n][nPItemCta] .And.;
												 	e[nPCLVL] == aCols[n][nPCLVL] .And. !e[len(e)] .And. ;
												 	e[nEc08Db] == aCols[n][nEc08Db] .And. e[nEc07Db] == aCols[n][nEc07Db] .And. ;
												 	e[nEc06Db] == aCols[n][nEc06Db] .And. e[nEc05Db] == aCols[n][nEc05Db]} )
	Elseif nEc07Db > 0
		nAscan := Ascan( aCols, { |e| 	e[nPCC] == aCols[n][nPCC] .And. e[nPConta] == aCols[n][nPConta] .And. e[nPItemCta] == aCols[n][nPItemCta] .And.;
												 	e[nPCLVL] == aCols[n][nPCLVL] .And. !e[len(e)] .And. ;
												 	e[nEc07Db] == aCols[n][nEc07Db] .And. ;
												 	e[nEc06Db] == aCols[n][nEc06Db] .And. e[nEc05Db] == aCols[n][nEc05Db]} )
	Elseif nEc06Db > 0
		nAscan := Ascan( aCols, { |e| 	e[nPCC] == aCols[n][nPCC] .And. e[nPConta] == aCols[n][nPConta] .And. e[nPItemCta] == aCols[n][nPItemCta] .And.;
												 	e[nPCLVL] == aCols[n][nPCLVL] .And. !e[len(e)] .And. ;
												 	e[nEc06Db] == aCols[n][nEc06Db] .And. e[nEc05Db] == aCols[n][nEc05Db]} )
	Elseif nEc05Db > 0
		nAscan := Ascan( aCols, { |e| 	e[nPCC] == aCols[n][nPCC] .And. e[nPConta] == aCols[n][nPConta] .And. e[nPItemCta] == aCols[n][nPItemCta] .And.;
												 	e[nPCLVL] == aCols[n][nPCLVL] .And. !e[len(e)] .And. ;
												 	e[nEc05Db] == aCols[n][nEc05Db]} )
	Endif

	If nAscan > 0 .And. n != nAscan
		Help(" ",1,"CCEXIST")// Centro de Custo ja Cadastrado
		lRetorno := .F.
	Endif
Endif

If !aCols[N][Len(aCols[N])]
	If aCols[N][nPPerc] == 0
		Help(" ",1,"A103PERC")
		lRetorno := .F.
	EndIf
EndIf

//Consiste amarração da Conta Contábil X Centro de Custo
If lRetorno .And. !lDAmarCt
	If nPConta <> 0 .And. nPCC>0 .And. nPItemCta <> 0 .And. nPClVl <> 0 .And.;
 	   (!CtbAmarra(aCols[n,nPConta],aCols[n,nPCC],aCols[n,nPItemCTA],aCols[n,nPCLVL]))
	   lRetorno:=.F.
	EndIf
EndIf

If lRetorno .And. CTT->CTT_BLOQ == "1"
	Help('   ',1,"CTA_BLOQ")
	lRetorno:=.F.
Endif

If lRetorno .And. empty(aCols[N][nPCC]) // O Centro de Custo SEMPRE devera ser obrigatorio, Conta Contabil, Item Contabil e Classe Valor nao tem esta necessidade
	Help('   ',1,'A103RATEI')
	lRetorno:=.F.
EndIf

If lRetorno
	nPercRat := 0
	nPercARat:= 0
	For nX	:= 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])]
			nPercRat += aCols[nX][nPPerc]
		EndIf
	Next
	nPercARat := 100 - nPercRat
	If Type("oPercRat")=="O"
		oPercRat:Refresh()
		oPercARat:Refresh()
	Endif
EndIf

If lRetorno
	Do Case
	Case cTipo == "B"
		lRetorno :=	PcoVldLan("000054","11","MATA103",/*lUsaLote*/,/*lDeleta*/, .T./*lVldLinGrade*/)
	Case cTipo == "D"
		lRetorno :=	PcoVldLan("000054","10","MATA103",/*lUsaLote*/,/*lDeleta*/, .T./*lVldLinGrade*/)
	OtherWise
		lRetorno :=	PcoVldLan("000054","09","MATA103",/*lUsaLote*/,/*lDeleta*/, .T./*lVldLinGrade*/)
	EndCase
Endif

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeRatTok ³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Validacao da TudoOk dos itens do rateio dos itens do documen-³±±
±±³          ³to de entrada                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a todas as linhas estao validas             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a tudook do rateio dos ³±±
±±³          ³itens do documento de entrada                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeRatTok(aHeadSDE,aColsSDE,nLinDoc,lReplica)

Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "DE_PERC"})
Local nPCC	    := aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CC"})
Local nPConta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "DE_CONTA"})
Local nPItemCta := aScan(aHeader,{|x| AllTrim(x[2]) == "DE_ITEMCTA"})
Local nPCLVL	:= Ascan(aHeader,{|x| AllTrim(x[2]) == "DE_CLVL"})
Local cEntidade := ""

Local nTotal   := 0
Local nX       := 0
Local lRetorno := .T.
Local lMt103ROk := Existblock("MT103ROK")
Local n_SaveLin
Local lDAmarCt	:= SuperGetMV( "MV_DAMARCT",.F.,.F. )
Local aBkpHead := {}
Local aBkpCols := {}

Default aHeadSDE := {}
Default aColsSDE := {}
Default nLinDoc  := 0
Default lReplica := .F.

If lMt103Rok .And. !lReplica
	lRetorno := Execblock("MT103ROK",.F.,.F.)
Endif

If !lReplica
	For nX	:= 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])] .And. !lDAmarCt
		 	//Consiste amarração da Conta Contábil X Centro de Custo
		 	If (!CtbAmarra(aCols[nX,nPConta],aCols[nX,nPCC],aCols[nX,nPItemCTA],aCols[nX,nPCLVL]))
		 	    lRetorno:=.F.
		 	    Aviso("NfeRatTok",STR0120+" "+aCols[nX,1],{"Ok"})
			    Exit
			EndIf
			nTotal := nTotal + aCols[nX][nPPerc]
		EndIf
		If lRetorno .And. CTT->CTT_BLOQ == "1"
			cEntidade := CTT->CTT_CUSTO
			Help( " " , 1 , "CTA_BLOQ" ,, "CTT" + " :" + cEntidade ,3,0)
			lRetorno:=.F.
		Endif
	Next
EndIf

If lRetorno .And. nTotal > 0 .And. nTotal <> 100 .And. !lReplica
	Help(" ",1,"A103TOTRAT")
	lRetorno := .F.
EndIf

// Executa validacao de bloqueio no SIGAPCO para todos os itens do documento
// quando for selecionada opcao para replicar rateio para os demais itens
If lReplica
	aBkpHead := aHeader
	aBkpCols := aCols
	aHeader  := aHeadSDE
	aCols    := aColsSDE
	nOrigN   := nLinDoc
EndIf

If lRetorno
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se ha bloqueio em algum item do pco qdo valida for por grade ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If PcoBlqFim({{"000054","09"},{"000054","10"},{"000054","11"}}) .Or. lReplica
		n_SaveLin := n
		For nx:=1 to len(aCols)
			If !aCols[nx][Len(aCols[nx])]
			    n := nX
				If lRetorno
					Do Case
					Case cTipo == "B"
						lRetorno	:=	PcoVldLan("000054","11","MATA103",/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
					Case cTipo == "D"
						lRetorno	:=	PcoVldLan("000054","10","MATA103",/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
					OtherWise
						lRetorno	:=	PcoVldLan("000054","09","MATA103",/*lUsaLote*/,/*lDeleta*/, .F./*lVldLinGrade*/)
					EndCase
	            Endif
	            If !lRetorno
	            	Exit
	            EndIf
			EndIf
		Next
		n := n_SaveLin
    EndIf
EndIf

// Retorna aHeader e Acols ao estado original
If lReplica
	aHeader := aBkpHead
	aCols   := aBkpCols
EndIf

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeViewPrd³ Autor ³ Eduardo Riera         ³ Data ³17.12.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Visualizacao da consulta ao historico de compras             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo executar a visualizacao do his-³±±
±±³          ³torico de compra do produto da linha da getdados             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeViewPrd()

Local nPosCod	:= aScan(aHeader,{|x| AllTrim(x[2])=="D1_COD"})

If nPosCod <> 0
	MaFisSave()
	MaFisEnd()
	If !AtIsRotina("MACOMVIEW")
		If !Empty(aCols[n][nPosCod])
			MaComView(aCols[n][nPosCod])
		EndIf
	EndIf
	MaFisRestore()
EndIf
Return
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeTotFin ³ Autor ³ Eduardo Riera         ³ Data ³18.07.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Totalizacao do array financeiro                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: aHeader do array de duplicatas                        ³±±
±±³          ³ExpA2: aCols do array de duplicatas                          ³±±
±±³          ³ExpL3: Habilita o Help (DEFAULT .T.)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: O Documento de entrada esta coerente com as parcelas  ³±±
±±³          ³       financeiras                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo verificar se o somatorio das   ³±±
±±³          ³parcelas eh total de duplicatas do documento de Entrada      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeTotFin(aHeader,aCols,lHelp)

Local aArea    := GetArea()
Local lRetorno := .T.
Local nTotDup  := 0
Local nIRRF    := 0
Local nISS     := 0
Local nINSS    := 0
Local nPIS     := 0
Local nCOFINS  := 0
Local nCSLL    := 0
Local nFethab  := 0
Local nFabov   := 0
Local nFacs    := 0
Local nPValor  := aScan(aHeader,{|x| AllTrim(x[2])=="E2_VALOR"})
Local nPIRRF   := aScan(aHeader,{|x| AllTrim(x[2])=="E2_IRRF"})
Local nPISS    := aScan(aHeader,{|x| AllTrim(x[2])=="E2_ISS"})
Local nPINSS   := aScan(aHeader,{|x| AllTrim(x[2])=="E2_INSS"})
Local nPPIS    := aScan(aHeader,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS := aScan(aHeader,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL   := aScan(aHeader,{|x| AllTrim(x[2])=="E2_CSLL"})
Local nPFETHAB := aScan(aHeader,{|x| AllTrim(x[2])=="E2_FETHAB"})
Local nPFABOV  := aScan(aHeader,{|x| AllTrim(x[2])=="E2_FABOV"})
Local nPFACS   := aScan(aHeader,{|x| AllTrim(x[2])=="E2_FACS"})
Local nX       := 0
Local aRateio  := {0,0,0}
Local lISSNat  := .T.
Local cNatNF   := ""
Local aHlpP    := aHlpE := aHlpS := {}
Local lISSTes	:= SuperGetMv("MV_ISSRETD",.F.,.F.)
Local cINSSAd	:= "0"

If Type("aBaseDup")=="U" .Or. aBaseDup==Nil
	aBaseDup := {0,0}
EndIf

DEFAULT lHelp := .T.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se deve existir o calculo do ISS pela natureza do titulo³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If MaFisFound("NF")
	cNatNF := MaFisRet(,"NF_NATUREZA")
	dbSelectArea("SED")
	If SED->(dbSeek(xFilial("SED")+cNatNF))
		lISSNat := SED->ED_CALCISS <> "N" .Or. lISSTes
	Endif
EndIf

cINSSAd	:=	MaFisScan("NF_VALINA",.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o valor total das duplicatas com o total da NFE     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (INCLUI .Or. ALTERA) .And. lRetorno .And. !Empty(cCondicao) .And. cTipo <> "D"
	dbSelectArea("SE4")
	dbSetOrder(1)
	MsSeek(xFilial("SE4")+cCondicao)
	If SE4->E4_TIPO <> "A"
		For nX := 1 To Len(aCols)
			nTotDup += aCols[nX][nPValor]
			If nPIRRF > 0
				nIRRF += aCols[nX][nPIRRF]
			EndIf
			If nPISS > 0
				nISS += aCols[nX][nPISS]
			EndIf
			If nPINSS > 0
				nINSS += aCols[nX][nPINSS]
			EndIf
			If nPPIS > 0
				nPIS += aCols[nX][nPPIS]
			EndIf
			If nPCOFINS > 0
				nCOFINS += aCols[nX][nPCOFINS]
			EndIf
			If nPCSLL> 0
				nCSLL += aCols[nX][nPCSLL]
			EndIf
			If nPFETHAB > 0
				nFETHAB += aCols[nX][nPFETHAB]
			EndIf
			If nPFABOV > 0
				nFABOV += aCols[nX][nPFABOV]
			EndIf
			If nPFACS > 0
				nFACS += aCols[nX][nPFACS]
			EndIf
			If nPValor > 0 .And. nPIRRF > 0 .And. nPISS > 0 .And. nPCOFINS > 0 .And. nPCSLL > 0 .And. nPPIS > 0 .And. nPINSS > 0
				If aCols[nX][nPValor]>0 .And.  (aCols[nX][nPIRRF]+aCols[nX][nPISS]+aCols[nX][nPINSS]+aCols[nX][nPPIS]+aCols[nX][nPCOFINS]+aCols[nX][nPCSLL]+IIf(nPFETHAB>0,aCols[nX][nPFETHAB],0)+IIf(nPFACS>0,aCols[nX][nPFACS],0)+IIf(nPFABOV>0,aCols[nX][nPFABOV],0))>(aCols[nX][nPValor]-0.01)
					aHlpP	:=	{}
					aHlpE	:=	{}
					aHlpS	:=	{}
					aAdd (aHlpP, STR0086)	//"Verifique o valor da(s) parcela(s) se  "
					aAdd (aHlpP, STR0087)	//"são suficientes para abater os impostos"
					aAdd (aHlpP, STR0088)	//"devidos em cada parcela.               "
					aAdd (aHlpE, STR0086)	//"Verifique o valor da(s) parcela(s) se  "
					aAdd (aHlpE, STR0087)	//"são suficientes para abater os impostos"
					aAdd (aHlpE, STR0088)	//"devidos em cada parcela.               "
					aAdd (aHlpS, STR0086)	//"Verifique o valor da(s) parcela(s) se  "
					aAdd (aHlpS, STR0087)	//"são suficientes para abater os impostos"
					aAdd (aHlpS, STR0088)	//"devidos em cada parcela.               "
					PutHelp ("PA100VALP", aHlpP, aHlpE, aHlpS, .F.)
					//
					aHlpP	:=	{}
					aHlpE	:=	{}
					aHlpS	:=	{}
					aAdd (aHlpP, STR0089)	//"O saldo para cada parcela deve ser     "
					aAdd (aHlpP, STR0090)	//"igual ou superior a 0.01 centavo.      "
					aAdd (aHlpP, STR0091)	//"Faça a manutenção manual no folder de  "
					aAdd (aHlpP, STR0092)	//"duplicatas na(s) parcela(s) com esta   "
					aAdd (aHlpP, STR0093)	//"situação.                              "
					aAdd (aHlpE, STR0089)	//"O saldo para cada parcela deve ser     "
					aAdd (aHlpE, STR0090)	//"igual ou superior a 0.01 centavo.      "
					aAdd (aHlpE, STR0091)	//"Faça a manutenção manual no folder de  "
					aAdd (aHlpE, STR0092)	//"duplicatas na(s) parcela(s) com esta   "
					aAdd (aHlpE, STR0093)	//"situação.                              "
					aAdd (aHlpS, STR0089)	//"O saldo para cada parcela deve ser     "
					aAdd (aHlpS, STR0090)	//"igual ou superior a 0.01 centavo.      "
					aAdd (aHlpS, STR0091)	//"Faça a manutenção manual no folder de  "
					aAdd (aHlpS, STR0092)	//"duplicatas na(s) parcela(s) com esta   "
					aAdd (aHlpS, STR0093)	//"situação.                              "
					PutHelp ("SA100VALP", aHlpP, aHlpE, aHlpS, .F.)
					Help(" ",1,"A100VALP",,,3,0)	//Valor da somatoria dos impostos superior ao valor da parcela.
					lRetorno := .F.
					Exit
				EndIf
			EndIf
		Next nX
		If nTotDup > 0  .Or. !IsInCallStack("MATA103") //caso contrario o sistema calcula o valor automaticamente
			If Abs(xMoeda(MaFisRet(,"NF_BASEDUP")+aBaseDup[2],1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nTotDup) > SuperGetMV("MV_LIMPAG")
				If lHelp .Or. ExistBlock("MT103DUP")
					Help(" ",1,"A100VALDUP",,SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(MaFisRet(,"NF_BASEDUP"),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nTotDup)),3,0)
				EndIf
				lRetorno := .F.
			ElseIf  Abs(MaFisRet(,"NF_BASEDUP")-NoRound(xMoeda(nTotDup,nMoedaCor,1,dDEmissao,Nil,MaFisRet(,"NF_TXMOEDA")),2))>0.01
					aBaseDup := {MaFisRet(,"NF_BASEDUP"),0}
				If nMoedaCor<=1
					MaFisAlt("NF_BASEDUP",NoRound(xMoeda(nTotDup,nMoedaCor,1,dDEmissao,Nil,MaFisRet(,"NF_TXMOEDA")),2))
				EndIf
				aBaseDup[2] := aBaseDup[1]-MaFisRet(,"NF_BASEDUP")
			EndIf

			If nPIRRF > 0
				If Abs(nIRRF - MaFisRet(,"NF_VALIRR"))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"IRF "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(MaFisRet(,"NF_VALIRR"),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nIRRF)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPISS > 0
				If Abs(nISS - IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"ISS "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(IIf(MaFisRet(,"NF_RECISS")=="2".And.lISSNat,MaFisRet(,"NF_VALISS"),0),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nISS)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPINSS > 0
				If Abs(nINSS - (MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0)))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"INSS "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(MaFisRet(,"NF_VALINS")+Iif(cINSSAd<>"0",MaFisRet(,"NF_VALINA"),0),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nINSS)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPPIS > 0
				If Abs(nPIS - MaFisRet(,"NF_VALPIS"))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"PIS "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(MaFisRet(,"NF_VALPIS"),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nPIS)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPCOFINS > 0
				If Abs(nCOFINS - MaFisRet(,"NF_VALCOF"))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"COFINS "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(MaFisRet(,"NF_VALCOF"),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nCOFINS)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPCSLL > 0
				If Abs(nCSLL - MaFisRet(,"NF_VALCSL"))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"CSLL "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(MaFisRet(,"NF_VALCSL"),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nCSLL)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPFETHAB > 0
				If Abs(nFETHAB - IIf(MaFisRet(,"NF_RECFET")=="2",MaFisRet(,"NF_VALFET"),0))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"FETHAB "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(IIf(MaFisRet(,"NF_RECFET")=="2",MaFisRet(,"NF_VALFET"),0),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nFETHAB)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPFACS > 0
				If Abs(nFACS - IIf(MaFisRet(,"NF_RECFAC")=="2",MaFisRet(,"NF_VALFAC"),0))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"FACS "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(IIf(MaFisRet(,"NF_RECFAC")=="2",MaFisRet(,"NF_VALFAC"),0),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nFACS)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If nPFABOV > 0
				If Abs(nFabov - IIf(MaFisRet(,"NF_RECFAB")=="2",MaFisRet(,"NF_VALFAB"),0))>0
					If lHelp
						Help(" ",1,"A100VALDUP",,"FABOV "+SuperGetMV("MV_SIMB"+AllTrim(Str(nMoedaCor)))+" "+Str((xMoeda(IIf(MaFisRet(,"NF_RECFAB")=="2",MaFisRet(,"NF_VALFAB"),0),1,nMoedaCor,dDEmissao,Nil,Nil,MaFisRet(,"NF_TXMOEDA")) - nFabov)),3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf

			If lRetorno .And. nPIRRF*nPISS*nPINSS*nPPIS*nPCOFINS*nPCSLL*IIf(Empty(nPFETHAB),1,nPFETHAB)*IIf(Empty(nPFABOV),1,nPFABOV)*IIf(Empty(nPFACS),1,nPFACS) > 0
				If Abs(nIRRF+nINSS+nISS+nPIS+nCOFINS+nCSLL+nFETHAB+nFabov+nFacs)>nTotDup
					If lHelp
						Help(" ",1,"A100VALDUP",,"IRRF/ISS/INSS/PIS/COFINS/CSLL"+IIf(nPFETHAB>0,"/FETHAB","")+IIf(nPFABOV>0,"/FABOV","")+IIf(nPFACS>0,"/FACS",""),3,0)
					EndIf
		    		lRetorno := .F.
				EndIf
			Else
			If lRetorno .And. nPIRRF*nPISS*nPINSS>0
				If Abs(nIRRF+nINSS+nISS)>nTotDup
					If lHelp
						Help(" ",1,"A100VALDUP",,"IRRF/ISS/INSS",3,0)
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
		EndIf
	EndIf
	EndIf
    //ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Pontos de Entrada 													|
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (ExistBlock("MT103FIN"))
		lRetorno := ExecBlock("MT103FIN",.F.,.F.,{aHeader,aCols,lRetorno})
	EndIf
EndIf
RestArea(aArea)
Return(lRetorno)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103CalcRt³ Autor ³ Sergio Silveira       ³ Data ³17/08/2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Totalizacao do array financeiro                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: aHeader do array de duplicatas                        ³±±
±±³          ³ExpA2: aCols do array de duplicatas                          ³±±
±±³          ³ExpL3: Habilita o Help (DEFAULT .T.)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: O Documento de entrada esta coerente com as parcelas  ³±±
±±³          ³       financeiras                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo verificar se o somatorio das   ³±±
±±³          ³parcelas eh total de duplicatas do documento de Entrada      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A103CalcRt(aColsSE2,aHeadSE2,cModRetPIS,lPccBaixa)

Local aListBox := {}

Local cAnoMes    := ""
Local cAcessRad  := GetNewPar( "MV_AC10925", "1" )

Local nRadio     := Val( cModRetPIS )
Local nOpca      := 0
Local nPosVenc   := GdFieldPos( "E2_VENCTO", aHeadSE2 )
Local nLoop      := 0
Local nTamAnoMes := 0
Local nPPIS      := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS   := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_CSLL"})

Local lProcessa  := .F.

Local oOk        := LoadBitmap( GetResources(), "LBOK" )
Local oNOk       := LoadBitmap( GetResources(), "LBNO" )
Local oDlgRet
Local oList
Local oRadio
Local oBold
Local oBmp
Local oBut1
Local oBut2

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obtem os valores por ano/mes para as parcelas desta nota            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 to Len( aColsSE2 )

	If aColsSE2[ nLoop, nPPIS ] > 0 .Or. aColsSE2[ nLoop, nPCOFINS ] > 0 .Or. aColsSE2[ nLoop, nPCSLL ] > 0

		lProcessa := .T.

		nTamAnoMes := Len( DToC( aColsSE2[ nLoop, nPosVenc ] ) ) - 3
		cAnoMes := DToS( aColsSE2[ nLoop, nPosVenc ] )

		If Empty( nScanMes := AScan( aListBox, { |x| Left( x[2], 6 ) == Left( cAnoMes, 6 ) } ) )
			AAdd( aListBox, { .T., cAnoMes } )
		EndIf

	Endif
Next nLoop

If lProcessa

	ASort( aListBox, , , { |x,y| y[2] > x[2] } )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Converte os valores para exibicao em tela                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	AEval( aListBox, { |x| x[2] := Right( DToC( SToD( x[2] ) ), nTamAnoMes ) } )

	DEFINE MSDIALOG oDlgRet TITLE STR0031 FROM 09,0 TO 33.8,60 OF oMainWnd // "Calculo de retencao"

	DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD

	@  0, -25 BITMAP oBmp RESNAME "PROJETOAP" oF oDlgRet SIZE 55, 1000 NOBORDER WHEN .F. PIXEL

	@ 03, 40 SAY STR0032 FONT oBold PIXEL // "Modalidade de retencao do PIS/COFINS/CSLL"

	@ 14, 30 TO 16 ,400 LABEL '' OF oDlgRet   PIXEL

	@ 25, 40 RADIO oRadio VAR nRadio 3D SIZE 70, 11 PROMPT STR0033,STR0034,STR0035 of oDlgRet PIXEL // "Calculado pelo sistema","Efetua retencao", "Nao efetua retencao"

	oRadio:SetEnable( cAcessRad == "1" .And. !lPccBaixa )
	oList := TWBrowse():New( 65, 40, 190, 96,,{ STR0036, STR0037 },,oDlgRet,,,,,,,,,,,,.F.,,.T.,,.F.,,,) // "Retencao", "Mes / Ano"

	oList:SetArray(aListBox)
	oList:bLine := { || { If( aListBox[oList:nAT,1], oOk, oNOK ), aListBox[oList:nAT,2] } }

	DEFINE SBUTTON oBut1 FROM 168, 169 TYPE 1 ACTION ( nOpca := 1, oDlgRet:End() )  ENABLE of oDlgRet
	DEFINE SBUTTON oBut2 FROM 168, 202 TYPE 2 ACTION ( nOpca := 0, oDlgRet:End() )  ENABLE of oDlgRet

	oRadio:bChange := { || A103Radio( aColsSE2,aHeadSE2,@oList,@aListBox,nRadio ) }
	Eval( oRadio:bChange )

	ACTIVATE MSDIALOG oDlgRet CENTERED

	If nOpca == 1
		cModRetPIS := Str( nRadio, 1 )
	EndIf

	// Ponto de Entrada para identificar a opção de retenção marcada pelo usuário no momento de inclusão da nota
	If ExistBlock( "MT103RET" )
		ExecBlock("MT103RET", , ,{nRadio,nOpca})
	EndIf

Endif

Return( .T. )


/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A103Radio ³ Autor ³ Sergio Silveira       ³ Data ³17/08/2004 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Controle do radio button                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: aHeader do array de duplicatas                        ³±±
±±³          ³ExpA2: aCols do array de duplicatas                          ³±±
±±³          ³ExpO1: Habilita o Help (DEFAULT .T.)                         ³±±
±±³          ³ExpA3: Habilita o Help (DEFAULT .T.)                         ³±±
±±³          ³ExpN1: Habilita o Help (DEFAULT .T.)                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo verificar se o somatorio das   ³±±
±±³          ³parcelas eh total de duplicatas do documento de Entrada      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A103Radio( aColsSE2,aHeadSE2,oList,aListBox,nRadio )

Do Case
Case nRadio == 1
	A103Recal(aColsSE2,aHeadSE2,@oList,@aListBox)
Case nRadio == 2
	AEval( aListBox, { |x| x[1] := .T. } )
	bLine := oList:bLine
	oList:SetArray(aListBox)
	oList:bLine := bLine
Case nRadio == 3
	AEval( aListBox, { |x| x[1] := .F. } )
	bLine := oList:bLine
	oList:SetArray(aListBox)
	oList:bLine := bLine
EndCase

oList:Refresh()

Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A103Recal ³ Autor ³Sergio Silveira        ³ Data ³05/08/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua o calculo do valor de titulos financeiros que        ³±±
±±³          ³calcularam a retencao do PIS / COGINS / CSLL e nao          ³±±
±±³          ³criaram os titulos de abatimento                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico    - .T. item do pedido sera faturado, .F. nao sera  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpD1 - Data de referencia                                  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A103Recal( aColsSE2, aHeadSE2, oList, aList )

Local aAreaSE2  := SE2->( GetArea() )
Local aDadosMes := {}
Local aStruct   := {}
Local aCampos   := {}
Local aProp     := {}
Local aFil10925 := {}

Local cQuery    := ""
Local cIndex    := ""
Local cAliasQry := ""
Local cSepNeg   := If("|"$MV_CPNEG,"|",",")
Local cSepProv  := If("|"$MVPROVIS,"|",",")
Local cSepRec   := If("|"$MVPAGANT,"|",",")
Local cAnoMes   := ""
Local cModTot   := GetNewPar( "MV_MT10925", "1" )
Local cQryFil   := ""

Local dDataIni  := CToD( "" )
Local dDataFim  := CToD( "" )

Local nLoop     := 0
Local nLoop2    := 0
Local nIndex    := 0
Local nPosVenc  := GdFieldPos( "E2_VENCTO", aHeadSE2 )
Local nPosValor := GdFieldPos( "E2_VALOR" , aHeadSE2 )
Local nMinRet   := GetNewPar( "MV_VL10925", 5000 )
Local nScanMes  := 0
Local nAdic     := 0
Local nValTot   := 0
Local nBasePis  := MaFisRet(,"NF_BASEPIS")
Local nBaseCof  := MaFisRet(,"NF_BASECOF")
Local nBaseCsl  := MaFisRet(,"NF_BASECSL")
Local nProp     := 0
Local nSaldoProp:= 0
Local nPropPis  := 0
Local nPropCof  := 0
Local nPropCsl  := 0
Local nX        := 0
Local nPPIS     := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_PIS"})
Local nPCOFINS  := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_COFINS"})
Local nPCSLL    := aScan(aHeadSE2,{|x| AllTrim(x[2])=="E2_CSLL"})

//Chamado SDFPWW
Local cAglutFil := SuperGetMV("MV_PCCAGLU",,"1")
Local aAreaSM0  := {}
Local cCGCSM0   := ""
Local cEmpAtu   := ""

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica valor total das duplicatas                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

For nX := 1 to Len(aColsSE2)
	nValTot += aColsSE2[ nX, nPosValor ]
Next

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula proporcao                                                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nSaldoProp := 1

For nX := 1 to Len(aColsSE2)
	If nX == Len(aColsSE2)
		nProp := nSaldoProp
	Else
		nProp := Round( aColsSE2[ nX, nPosValor ] / nValTot,6)
		nSaldoProp -= nProp
	EndIf
   AAdd( aProp, nProp )
Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obtem os valores por ano/mes para as parcelas desta nota            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 to Len( aColsSE2 )

	cAnoMes	:= Left( DToS( aColsSE2[ nLoop, nPosVenc ] ), 6 )
	nScanMes := AScan( aDadosMes, { |x| x[1] == cAnoMes } )

   //Caso as parcelas sejam do mesmo mes, deve somar o valor das parcelas para aplicar ou nao a cumulatividade
	If aColsSE2[ nLoop, nPPIS ] > 0 .Or. aColsSE2[ nLoop, nPCOFINS ] > 0 .Or. aColsSE2[ nLoop, nPCSLL ] > 0 .Or. nScanMes > 0

		If nScanMes == 0
			AAdd( aDadosMes, { cAnoMes, 0,0,0,0 } )
			nScanMes := Len( aDadosMes )
		EndIf

		nPropPis := NoRound(nBasePis * aProp[nLoop],6)
		nPropCof := NoRound(nBaseCof * aProp[nLoop],6)
		nPropCsl := NoRound(nBaseCsl * aProp[nLoop],6)

		aDadosMes[ nScanMes, 2 ] += aColsSE2[ nLoop, nPosValor ]
		aDadosMes[ nScanMes, 3 ] += nPropPis
		aDadosMes[ nScanMes, 4 ] += nPropCof
		aDadosMes[ nScanMes, 5 ] += nPropCsl

    EndIf

Next nLoop

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ordena o array de ano / mes                                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ASort( aDadosMes, , , { |x,y| y[1] > x[1] } )

dDataIni := CToD( "01/" + Right( aDadosMes[ 1, 1 ], 2 ) + "/" + Left( aDadosMes[ 1, 1 ], 4 ) )
dDataFim := LastDay( CToD( "15/" + Right( aDadosMes[ Len( aDadosMes ), 1 ], 2 ) + "/" + Left( aDadosMes[ Len( aDadosMes ), 1 ], 4 ) ) )

//ÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada MT103FRT para tratamento de Filiais com o mesmo CNPJ ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

aFil10925 := {}
aAreaSM0  := SM0->(GetArea())
cEmpAtu   := SM0->M0_CODIGO
cCGCSM0   := SM0->M0_CGC
SM0->(DbSetOrder(1))
SM0->(MsSeek(cEmpAnt))

//Se parametro "MV_PCCAGLU" existe com conteudo diferente de 1
If cAglutFil == "2" .Or. cAglutFil == "3"
	Do While !SM0->(Eof()) .And. SM0->M0_CODIGO == cEmpAtu
		//Verifica se a filial tem o mesmo CGC/Raiz de CGC
		If (cAglutFil == "2" .And. cCGCSM0 == SM0->M0_CGC) .Or. (cAglutFil == "3" .And. Left(cCGCSM0,8) == Left(SM0->M0_CGC,8))
			AAdd(aFil10925,FWGETCODFILIAL)
		EndIf
		SM0->(DbSkip())
	EndDo

ElseIf ExistBlock( "MT103FRT" )
	aFil10925 := ExecBlock( "MT103FRT", .F., .F. )
Else
	aFil10925 := { xFilial( "SE2" ) }
EndIf
SM0->(RestArea(aAreaSM0))


aCampos := { "E2_VALOR","E2_VENCREA","E2_PIS","E2_COFINS","E2_CSLL","E2_ISS","E2_INSS","E2_IRRF","E2_VRETPIS","E2_VRETCOF","E2_VRETCSL" }
aStruct := SE2->( dbStruct() )

SE2->( dbCommit() )

  	cAliasQry := GetNextAlias()

cQuery := "SELECT E2_VALOR,E2_VENCREA,E2_PIS,E2_COFINS,E2_CSLL,E2_ISS,E2_INSS,E2_IRRF,E2_PRETPIS,E2_PRETCOF,E2_PRETCSL,E2_VRETPIS,E2_VRETCOF,E2_VRETCSL,R_E_C_N_O_ RECNO "

cQuery += ",E2_BASEPIS,E2_BASECOF,E2_BASECSL "
Aadd(aCampos,"E2_BASEPIS")
Aadd(aCampos,"E2_BASECOF")
Aadd(aCampos,"E2_BASECSL")

cQuery += ",E2_PRETIRF,E2_VRETIRF "
AAdd(aCampos,"E2_PRETIRF")
AAdd(aCampos,"E2_VRETIRF")

cQuery += " FROM "+ RetSqlName( "SE2" ) + " SE2 "
cQuery += "WHERE "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Carrega as filiais do filtro                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
cQryFil := "("

For nLoop := 1 to Len( aFil10925 )
	cQryFil += "E2_FILIAL='" + aFil10925[ nLoop ] + "' OR "
Next nLoop

cQryFil := Left( cQryFil, Len( cQryFil ) - 3 )

cQryFil  += ") AND "

cQuery += cQryFil

cQuery += "E2_FORNECE='"  + cA100For            + "' AND "
cQuery += "E2_LOJA='"     + cLoja               + "' AND "
cQuery += "E2_VENCREA>='" + DToS( dDataIni )     + "' AND "
cQuery += "E2_VENCREA<='" + DToS( dDataFim )     + "' AND "
cQuery += "E2_TIPO NOT IN " + FormatIn(MVABATIM,"|") + " AND "
cQuery += "E2_TIPO NOT IN " + FormatIn(MV_CPNEG,cSepNeg)  + " AND "
cQuery += "E2_TIPO NOT IN " + FormatIn(MVPROVIS,cSepProv) + " AND "
cQuery += "E2_TIPO NOT IN " + FormatIn(MVPAGANT,cSepRec)  + " AND "

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o modo de totalizacao                                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cModTot == "2"
	cQuery += "(E2_PIS<>0 OR E2_COFINS<>0 OR E2_CSLL<>0 ) AND "
EndIf

cQuery += "D_E_L_E_T_=' '"

cQuery := ChangeQuery( cQuery )

dbUseArea( .T., "TOPCONN", TcGenQry(,,cQuery), cAliasQry, .F., .T. )

For nLoop2 := 1 To Len( aStruct )
	If !Empty( AScan( aCampos, AllTrim( aStruct[nLoop2,1] ) ) )
		TcSetField( cAliasQry, aStruct[nLoop2,1], aStruct[nLoop2,2],aStruct[nLoop2,3],aStruct[nLoop2,4])
	EndIf
Next nLoop2

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Obtem os valores por ano/mes para as parcelas desta nota            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While !( cAliasQRY )->( Eof())

	cAnoMes := Left( DToS( ( cAliasQRY )->E2_VENCREA ), 6 )

	If Empty( nScanMes := AScan( aDadosMes, { |x| x[1] == cAnoMes } ) )
		AAdd( aDadosMes, { cAnoMes, 0, 0, 0, 0 } )
		nScanMes := Len( aDadosMes )
	EndIf

	nAdic := 0

      nAdic += ( ( cAliasQRY )->E2_VALOR + ( cAliasQRY )->E2_ISS + ( cAliasQRY )->E2_INSS  )

	nAdic += If( Empty( ( cAliasQRY )->E2_VRETIRF ), ( cAliasQRY )->E2_IRRF, ( cAliasQRY )->E2_VRETIRF )

	If Empty( ( cAliasQRY )->E2_PRETPIS )
		nAdic += If( Empty( ( cAliasQRY )->E2_VRETPIS ), ( cAliasQRY )->E2_PIS, ( cAliasQRY )->E2_VRETPIS )
	EndIf

	If Empty( ( cAliasQRY )->E2_PRETCOF )
		nAdic += If( Empty( ( cAliasQRY )->E2_VRETCOF ), ( cAliasQRY )->E2_COFINS, ( cAliasQRY )->E2_VRETCOF )
	EndIf

	If Empty( ( cAliasQRY )->E2_PRETCSL )
		nAdic += If( Empty( ( cAliasQRY )->E2_VRETCSL ), ( cAliasQRY )->E2_CSLL, ( cAliasQRY )->E2_VRETCSL )
	EndIf

	aDadosMes[ nScanMes, 2 ] += nAdic

	If ( cAliasQRY )->E2_BASEPIS > 0 .Or. ( cAliasQRY )->E2_BASECOF > 0 .Or. ( cAliasQRY )->E2_BASECSL > 0
		aDadosMes[nScanMes, 3] += ( cAliasQRY )->E2_BASEPIS
		aDadosMes[nScanMes, 4] += ( cAliasQRY )->E2_BASECOF
		aDadosMes[nScanMes, 5] += ( cAliasQRY )->E2_BASECSL
	Else
		aDadosMes[nScanMes, 3] += nAdic
		aDadosMes[nScanMes, 4] += nAdic
		aDadosMes[nScanMes, 5] += nAdic
	EndIf

	( cAliasQRY )->( dbSkip())

   EndDo

// Fecha a area de trabalho da query

   ( cAliasQRY )->( dbCloseArea() )
   dbSelectArea( "SE2" )

ASort( aDadosMes, , , { |x,y| y[1] > x[1] } )

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se supera o valor para retencao                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 To Len( aDadosMes )
	aList[ nLoop, 1 ] := ( aDadosMes[ nLoop, 3 ] > nMinRet .Or.aDadosMes[ nLoop, 4 ] > nMinRet .Or. aDadosMes[ nLoop, 5 ] > nMinRet   )
Next nLoop

bLine := oList:bLine
oList:SetArray(aList)
oList:bLine := bLine

SE2->( RestArea( aAreaSE2 ) )

Return( .T. )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³NfeComplFF ³ Autor ³Marcos V. Ferreira    ³ Data ³24/10/2005³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Rotina utilizada para gerar requisicao valorizada 'RE6'    ³±±
±±³          ³ sempre que for incluida  uma nota complementar com o custo ³±±
±±³          ³ Fifo ativado, onde a nota origem esta no periodo anterior. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1 - Alias do arquivo SD1                                ³±±
±±³          ³ExpL1 - Informa se esta utilizando Custo Fifo				  |±±
±±³          ³ExpN1 - nTipo = 1 - Gera requisicao valorizada			  |±±
±±³          ³        nTipo = 2 - Pesquisa Lote Original        		  |±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico - .T. se localizou o lote original nota complementar ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function NfeComplFF(cAlias,lCusFifo,nTipo)
Local lAjNfCompl  := SuperGetMV("MV_AJUSNFC",.F.,.F.)
Local dDtLimite	:= SuperGetMV("MV_ULMES",.F.)+1
Local aAreaAnt	:= GetArea()
Local aAreaSF4  := SF4->(GetArea())
Local aQtdLote	:= {}
Local lGrava	:= .F.
Local lRet		:= .F.
Local nProporc  := 0

Default cAlias  := "SD1"
Default lCusFifo:= .F.
Default nTipo   := 1

dbSelectArea("SF4")
dbSetOrder(1)
MsSeek(xFilial("SF4")+(cAlias)->D1_TES)

If lAjNfCompl .And. lCusFifo .And. (cAlias)->D1_TIPO == 'C' .And. SF4->F4_ESTOQUE == 'S'
	dbSelectArea("SD8")
	dbSetOrder(3)
		If MsSeek(xFilial("SD8")+(cAlias)->D1_NFORI+(cAlias)->D1_SERIORI+(cAlias)->D1_ITEMORI) .And. SD8->D8_DTPROC < dDtLimite
		dbSelectArea("SBD")
		dbSetOrder(2)
		If MsSeek(xFilial("SBD")+SD8->D8_SEQ)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//| BD_STATUS == ' ' Lote Fifo Aberto    |
			//| BD_STATUS == 'Z' Lote Fifo Encerrado |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nTipo == 1 .And. SBD->BD_STATUS == ' '
				aQtdLote := CalcEstFF( (cAlias)->D1_COD,(cAlias)->D1_LOCAL,dDtLimite,Nil,Nil,SBD->BD_SEQ)
				If aQtdLote[1] == SBD->BD_QUANT
                      lGrava := .F. //Qtde do Lote Fifo ainda nao utilizada
				Else
					//Formula: Qtde Inicial do Lote - Qtde Atual do Lote / Qtde Inicial do Lote
					nProporc := (SBD->BD_QUANT-aQtdLote[1])/SBD->BD_QUANT
					lGrava   := .T.
				EndIf
			ElseIf nTipo == 1 .And. SBD->BD_STATUS == 'Z'
				nProporc := 1
				lGrava   := .T.
			ElseIf nTipo == 2
				lRet := .T.
			EndIf
		EndIf
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Ponto de Entrada para validar a gravacao da requisicao valorizada |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (ExistBlock("M103NFC"))
		lGrava := ExecBlock("M103NFC",.F.,.F.,{lGrava .And. nTipo == 1,nProporc})
	EndIf

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Gravacao da requisicao valorizada para consumir o custo da nota   |
//| de complemento de preco.                                          |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lGrava .And. nTipo == 1
	RecLock("SD3",.T.)
	SD3->D3_FILIAL	:= xFilial("SD3")
	SD3->D3_COD		:= (cAlias)->D1_COD
	SD3->D3_QUANT	:= (cAlias)->D1_QUANT
	SD3->D3_TM		:= "999"
	SD3->D3_OP		:= (cAlias)->D1_OP
	SD3->D3_LOCAL	:= (cAlias)->D1_LOCAL
	SD3->D3_DOC		:= (cAlias)->D1_DOC
	SD3->D3_EMISSAO	:= (cAlias)->D1_DTDIGIT
	SD3->D3_NUMSEQ	:= (cAlias)->D1_NUMSEQ
	SD3->D3_UM		:= (cAlias)->D1_UM
	SD3->D3_GRUPO	:= (cAlias)->D1_GRUPO
	SD3->D3_TIPO	:= (cAlias)->D1_TP
	SD3->D3_SEGUM	:= (cAlias)->D1_SEGUM
	SD3->D3_CONTA	:= (cAlias)->D1_CONTA
	SD3->D3_CF		:= "RE6"
	SD3->D3_QTSEGUM	:= (cAlias)->D1_QTSEGUM
	SD3->D3_USUARIO	:= CUSERNAME
	SD3->D3_CUSTO1	:= (cAlias)->D1_CUSTO  * nProporc
	SD3->D3_CUSTO2	:= (cAlias)->D1_CUSTO2 * nProporc
	SD3->D3_CUSTO3	:= (cAlias)->D1_CUSTO3 * nProporc
	SD3->D3_CUSTO4	:= (cAlias)->D1_CUSTO4 * nProporc
	SD3->D3_CUSTO5	:= (cAlias)->D1_CUSTO5 * nProporc
	SD3->D3_NUMLOTE	:= (cAlias)->D1_NUMLOTE
	SD3->D3_LOTECTL	:= (cAlias)->D1_LOTECTL
	SD3->D3_DTVALID	:= (cAlias)->D1_DTVALID
	SD3->D3_POTENCI := (cAlias)->D1_POTENCI
	dbSelectArea("SB2")
	B2AtuComD3({SD3->D3_CUSTO1,SD3->D3_CUSTO2,SD3->D3_CUSTO3,SD3->D3_CUSTO4,SD3->D3_CUSTO5})
EndIf

RestArea(aAreaSF4)
RestArea(aAreaAnt)
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103GCDisp³ Autor ³ Sergio Silveira       ³ Data ³ 03/03/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Indica se o produto gestao de contratos esta disponivel      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Indicao disponibilidade                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³              ³        ³      ³                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A103GCDisp()

Local lRet := .F.


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se possui um registro na tabela de contratos            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lRet := !Empty( CN9->( LastRec() ) )

Return( lRet )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103ChWhen³ Autor ³Rodrigo de A Sartorio  ³ Data ³ 12/06/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Checa when dos campos de cabecalho da Pre-Nota e Nota        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ChWhen(cCampo,cConteudo,lClassif)
LOCAL lRet:=.T.
LOCAL lExistBlock:=ExistBlock("MT103CWH")
// Ponto de Entrada que permite alterar o WHEN
If lExistBlock
	lRet:=Execblock("MT103CWH",.F.,.F.,{cCampo,cConteudo,lClassif})
	If ValType(lRet) # "L"
		lRet:=.T.
	EndIf
EndIf
RETURN lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldNfe ³Autor  ³ Mary Hergert          ³ Data ³10/07/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de tratamento do folder da nota fiscal eletronica     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela que sera disponibilizado os Get      ³±±
±±³          ³ExpA2: Array com os gets da NF-e                             ³±±
±±³          ³ExpA3: Array com as posicoes dos gets da NF-e                ³±±
±±³          ³Expb4: Codeblock para atualizaco dos dados do Folder         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldNfe(oDlg,aNFEletr,aPosGet,bRefresh)

Local aObjetos	:= Array(Len(aNFEletr))
Local nHRes     := oMainWnd:nClientWidth

If cPaisLoc == "BRA"
	@ 09,aPosGet[1,1] SAY OemToAnsi(STR0057) Of oDlg PIXEL SIZE 48,12
	@ 08,aPosGet[1,2] MSGET aObjetos[01] VAR aNFEletr[01] ;
		PICTURE PesqPict("SF1","F1_NFELETR") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_NFELETR");
		VALID CheckSX3("F1_NFELETR",aNFEletr[01]);
		SIZE 50,09 HASBUTTON
	aObjetos[01]:cSX1Hlp := "F1_NFELETR"


	@ 26,aPosGet[1,1] SAY OemToAnsi(STR0058) Of oDlg PIXEL SIZE 48,12
	@ 25,aPosGet[1,2] MSGET aObjetos[03] VAR aNFEletr[03] ;
		PICTURE PesqPict("SF1","F1_EMINFE") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_EMINFE");
		VALID A103NFe('EMINFE',aNFEletr) .And. CheckSX3("F1_EMINFE",aNFEletr[03]);
		SIZE 60,09 HASBUTTON
	aObjetos[03]:cSX1Hlp := "F1_EMINFE"

	@ 26,IIF(nHRes <= 800, aPosGet[1,3]+10, aPosGet[1,3]) SAY OemToAnsi(STR0059) Of oDlg PIXEL SIZE 48,12
	@ 25,IIF(nHRes <= 800, aPosGet[1,4]+15, aPosGet[1,4]) MSGET aObjetos[04] VAR aNFEletr[04] ;
		PICTURE PesqPict("SF1","F1_HORNFE") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_HORNFE");
		VALID CheckSX3("F1_HORNFE",aNFEletr[04]);
		SIZE 80,9	HASBUTTON
	aObjetos[04]:cSX1Hlp := "F1_HORNFE"

	@ 43,aPosGet[1,1] SAY OemToAnsi(STR0061) Of oDlg PIXEL SIZE 48,12
	@ 42,aPosGet[1,2] MSGET aObjetos[05] VAR aNFEletr[05] ;
		PICTURE PesqPict("SF1","F1_CREDNFE") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_CREDNFE");
		VALID A103NFe('CREDNFE',aNFEletr) .And. CheckSX3("F1_CREDNFE",aNFEletr[05]);
		SIZE 60,09 HASBUTTON
	aObjetos[05]:cSX1Hlp := "F1_CREDNFE"

	@ 43,IIF(nHRes <= 800, aPosGet[1,3]+10, aPosGet[1,3]) SAY OemToAnsi(STR0063) Of oDlg PIXEL SIZE 48,12
	@ 42,IIF(nHRes <= 800, aPosGet[1,4]+15, aPosGet[1,4]) MSGET aObjetos[06] VAR aNFEletr[06] ;
		PICTURE PesqPict("SF1","F1_NUMRPS") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_NUMRPS");
		VALID CheckSX3("F1_NUMRPS",aNFEletr[06]);
		SIZE 80,09 HASBUTTON
	aObjetos[06]:cSX1Hlp := "F1_NUMRPS"

	@ 43,IIF(nHRes <= 800, aPosGet[1,3]+10, aPosGet[1,5]) SAY OemToAnsi(STR0060) Of oDlg PIXEL SIZE 48,12
   	@ 42,IIF(nHRes <= 800, aPosGet[1,4]+15, aPosGet[1,6]) MSGET aObjetos[02] VAR aNFEletr[02] ;
		PICTURE PesqPict("SF1","F1_CODNFE") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_CODNFE");
		VALID CheckSX3("F1_CODNFE",aNFEletr[02]);
		SIZE IIF(nHRes <= 800, 95, 185),09 HASBUTTON
	aObjetos[02]:cSX1Hlp := "F1_CODNFE"

 		@ 09,IIF(nHRes <= 800, aPosGet[1,5]+30, aPosGet[1,5]) SAY OemToAnsi(STR0104) Of oDlg PIXEL SIZE 48,12
	@ 08,IIF(nHRes <= 800, aPosGet[1,6]+30, aPosGet[1,6]) MSGET aObjetos[07] VAR aNFEletr[07] ;
		PICTURE PesqPict("SF1","F1_MENNOTA") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_MENNOTA");
		SIZE IIF(nHRes <= 800, 95, 185),09 HASBUTTON
	aObjetos[07]:cSX1Hlp := "F1_MENNOTA"

	@ 26,IIF(nHRes <= 800, aPosGet[1,5]+30, aPosGet[1,5]) SAY OemToAnsi(STR0105) Of oDlg PIXEL SIZE 48,12
	@ 25,IIF(nHRes <= 800, aPosGet[1,6]+30, aPosGet[1,6]) MSGET aObjetos[08] VAR aNFEletr[08] ;
		PICTURE PesqPict("SF1","F1_MENPAD") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_MENPAD");
		VALID VALIDSM4(aNFEletr);
	    F3 "SM4";
		SIZE 20,09 HASBUTTON
	aObjetos[08]:cSX1Hlp := "F1_MENPAD"

Endif

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A103NFe   ³ Autor ³Mary C. Hergert        ³ Data ³29/06/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Valida campos da Nota Fiscal Eletronica de Sao Paulo        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A103NFe(cExp01,aExp01)                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cExp01: Campo a ser validado                                ³±±
±±³          ³aExp01: Array com as variaveis de memoria                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103NFe(cCampo,aNFEletr)

Local lRet := .T.

If cPaisLoc == "BRA"
	If cCampo == "EMINFE"
		If !Empty(aNFEletr[03]) .And. aNFEletr[03] < dDEmissao
			Help("",1,"A100NFEDT")
			lRet := .F.
		Endif
	ElseIf cCampo == "CREDNFE"
		If aNFEletr[05] < 0
			Help("",1,"A100NFECR")
			lRet := .F.
		Endif
	Endif
Endif

Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³a103xLAICMS³ Autor ³ Gustavo G. Rueda      ³ Data ³05/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para montagem do GETDADOS do folder de lancamentos   ³±±
±±³          ³ fiscais.                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³oLancApICMS -> Objeto criado pelo MSNEWGETDADOS             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³oDlg -> Objeto pai onde o GETDADOS serah criado.            ³±±
±±³          ³aPos -> posicoes de criacao do objeto.                      ³±±
±±³          ³aHeadCDA -> array com o HEADER da tabela CDA                ³±±
±±³          ³aColsCDA -> array com o ACOLS da tabela CDA                 ³±±
±±³          ³lVisual -> Flag de visualizacao                             ³±±
±±³          ³lInclui -> Flag de inclusao                                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a103xLAICMS(oDlg,aPos,aHeadCDA,aColsCDA,lVisual,lInclui)
Local	oLancApICMS
Local	bCond		:=	{||.T.}
Local	bSkip		:=	{|| CDA->CDA_TPREG == "NA" }
Local	cVisual		:=	Iif(lVisual,"'1'","'2'")
Local	cFormulBkp	:=	cFormul
Local	aCmpsCDA	:=	{"CDA_NUMITE","CDA_CODLAN","CDA_BASE","CDA_ALIQ","CDA_VALOR"}
Local aArea		:= GetArea()
Local cSerieId  := SerieNfId("SD1",4,"D1_SERIE",dDEmissao,cEspecie,cSerie)
//Campo criado pelo compatibilizador UPDFIS
aAdd(aCmpsCDA,"CDA_IFCOMP")
//Campo complemento para registro 0460 campo 3
If CDA->(ColumnPos("CDA_CLANC"))>0
	aAdd(aCmpsCDA,"CDA_CLANC")
EndIf

aMHead("CDA","CDA_TPMOVI/CDA_ESPECI/CDA_FORMUL/CDA_NUMERO/CDA_SERIE/CDA_CLIFOR/CDA_LOJA/",@aHeadCDA)
If lVisual
	dbSelectArea("CDA")
	CDA->(dbSetOrder(1))
	If !CDA->(MsSeek(xFilial("CDA")+"E"+cEspecie+cFormul+cNFiscal+cSerieId+cA100For+cLoja)) .And. cFormul=="N"	//tratamento implementado devido ao default do mata103 para o cformul ser "N", porem as tabelas para N podem gravar branco ou N.
		cFormul	:=	" "
	CDA->(MsSeek(xFilial("CDA")+"E"+cEspecie+cFormul+cNFiscal+cSerieId+cA100For+cLoja))
	EndIf
	bCond	:=	{||xFilial("CDA")+"E"+cEspecie+cFormul+cNFiscal+cSerieId+cA100For+cLoja==CDA->(CDA_FILIAL+CDA_TPMOVI+CDA_ESPECI+CDA_FORMUL+CDA_NUMERO+CDA_SERIE+CDA_CLIFOR+CDA_LOJA)}
EndIf
aMAcols(lVisual,"CDA",@aColsCDA,aHeadCDA,bCond,bSkip)

oLancApICMS	:=	MsNewGetDados():New(aPos[1],aPos[2],aPos[4],aPos[3],Iif(lVisual,0,GD_UPDATE+GD_INSERT+GD_DELETE),"a103xLOk","a103xLOk","+CDA_SEQ",aCmpsCDA,/*freeze*/,9999,/*fieldok*/,/*superdel*/,"LancDel("+cVisual+")",oDlg,@aHeadCDA,@aColsCDA)

cFormul	:=	cFormulBkp

RestArea(aArea)

Return oLancApICMS
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³aMHead    ³ Autor ³ Gustavo G. Rueda      ³ Data ³05/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para montagem do HEADER do GETDADOS                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cAlias -> Alias da tabela base para montagem do HEADER      ³±±
±±³          ³cNCmps -> Campos que nao serao considerados no HEADER       ³±±
±±³          ³aH -> array no qual o HEADER serah montado                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function aMHead(cAlias,cNCmps,aH)
Local	lRet	:=	.T.
Local	cValid	:=	""
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Integridade dos campos de Bancos de Dados            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
dbSeek(cAlias)
While !Eof() .And. (X3_ARQUIVO==cAlias)
	IF X3USO(X3_USADO) .And. cNivel >= X3_NIVEL .and. !(AllTrim(X3_CAMPO)+"/"$cNCmps)

		If AllTrim(X3_CAMPO)=="CDA_NUMITE"
			cValid	:=	"LancCpIt().And.LancCps()"
		Else
			cValid	:=	AllTrim(X3_VALID)+Iif(Empty(AllTrim(X3_VALID)),"",".And.")+"LancCps()"
		EndIf

		AADD(aH,{ Trim(X3Titulo()), ;
			AllTrim(X3_CAMPO),;
			X3_PICTURE,;
			X3_TAMANHO,;
			X3_DECIMAL,;
			cValid,;
			X3_USADO,;
			X3_TIPO,;
			X3_F3,;
			X3_CONTEXT,;
			X3_CBOX,;
			X3_RELACAO})
	Endif
	dbSkip()
Enddo
Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³aMAcols   ³ Autor ³ Gustavo G. Rueda      ³ Data ³05/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para montagem do ACOLS do GETDADOS                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³nOpc -> Opcao do AROTINA                                    ³±±
±±³          ³cAlias -> Alias da tabela base para montagem do HEADER      ³±±
±±³          ³aC -> array no qual o ACOLS serah montado                   ³±±
±±³          ³aH -> array no qual o HEADER serah montado                  ³±±
±±³          ³bCond -> Condicao de loop do while                          ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function aMAcols(lVisual,cAlias,aC,aH,bCond,bSkip)
Local	lRet	:=	.T.
Local	nI		:=	0

DEFAULT bSkip 	:= {|| .F. }

dbSelectArea(cAlias)
dbSetOrder(1)
If lVisual .And. !Eof()
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Monta o array aCols com os itens                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aC	:=	{}
	While !Eof() .And. Eval(bCond)
		IF Eval(bSkip)
			dbSkip()
			Loop
		EndIf
		aAdd(aC,Array(Len(aH)+1))
		For nI := 1 To Len(aH)
			aC[Len(aC),nI] := FieldGet(FieldPos(aH[nI,2]))
		Next
		aC[Len(aC),Len(aH)+1] := .F.
		dbSkip()
	End
Else
	aC				:=	{Array(Len(aH)+1)}
	aC[1,Len(aH)+1]	:=	.F.
	For nI := 1 To Len(aH)
		If aH[nI,10]#"V"
			aC[1,nI]	:=	CriaVar(aH[nI,2])
		EndIf

		If "_SEQ"$aH[nI,2]
			aC[1,nI]	:=	StrZero(1,aH[nI,4])
		EndIf
	Next
EndIf
Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³LancDel   ³ Autor ³ Gustavo G. Rueda      ³ Data ³13/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para validar a delecao do lancamento fiscal do docu- ³±±
±±³          ³ mento criado pelo sistema.                                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T. ou .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cVisual -> indica se a nota esta sendo visualizada. 1=Sim,  ³±±
±±³          ³ 2=Nao                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function LancDel(cVisual)
Local	lRet	:=	.T.
Local	nPosCalc:=	0
Local	nPosIt	:=	0
Local 	nPosItD1:= 	0
Local	nPos	:=	0

If Type("oLancApICMS")=="O" .And. cVisual=="2"
	nPosCalc:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_CALPRO"})
	nPosIt	:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_NUMITE"})

	If nPosCalc>0 .And. oLancApICMS:aCols[oLancApICMS:nAT,nPosCalc]=="1"
		//Registros calculados pelo sistema não poderão ser excluídos, pois serão utilizados como log da rotina.
		//Caso seja necessário alterar este cálculo, basta inserir novos itens nesta opção de ajuste ou utitlizar a funcionalidade de Gerenciamento dos Lançamentos Fiscais de ICMS. Vale ressaltar que na Apuração de ICMS será considerada a sequência maior de cada lançamento fiscal do documento.
		Help("  ",1,"LAICMSDEL1")
		lRet	:=	.F.

	ElseIf nPosCalc>0 .And. oLancApICMS:aCols[oLancApICMS:nAT,nPosCalc]=="2" .And. Type("aColsD1")=="A" .And. Type("aHeadD1")="A"
		nPosItD1:= 	aScan(aHeadD1,{|aX| aX[2]==PadR("D1_ITEM",Len(SX3->X3_CAMPO))})

		If nPosItD1>0 .And. nPosIt>0
			nPos	:=	aScan(aColsD1,{|aX|PadR(aX[nPosItD1],TamSx3("CDA_NUMITE")[1])==oLancApICMS:aCols[oLancApICMS:nAT,nPosIt].And.!aX[Len(aColsD1[1])]})
			If nPos==0
				//Este registro não pode ser recuperado, pois o mesmo encontra-se excluído juntamente com seu respectivo item do documento fiscal.
				//Para se recuperar este registro é necessário que se tenha o respectivo item deste documento fiscal ativado.
				Help("  ",1,"LAICMSDEL2")
				lRet	:=	.F.
			EndIf
		EndIf
	EndIf
EndIf
Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³LancCpIt  ³ Autor ³ Gustavo G. Rueda      ³ Data ³13/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para validar o item digitado no lancamento fiscal com³±±
±±³          ³ os itens do documento fiscal.                              ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T. ou .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function LancCpIt()
Local	lRet	:=	.T.
Local	nPosCalc:=	0
Local	nPosItD1:=	0

If Type("oLancApICMS")=="O"

	nPosCalc:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_CALPRO"})

	If nPosCalc>0 .And. oLancApICMS:aCols[oLancApICMS:nAT,nPosCalc]=="2" .And. Type("aColsD1")=="A" .And. Type("aHeadD1")="A"
		nPosItD1:= 	aScan(aHeadD1,{|aX| aX[2]==PadR("D1_ITEM",Len(SX3->X3_CAMPO))})
		If nPosItD1>0
			nPos	:=	aScan(aColsD1,{|aX|aX[nPosItD1]==M->CDA_NUMITE.And.!aX[Len(aColsD1[1])]})
			If nPos==0
				//Número do item é inválido para este lançamento fiscal.
				//Deve-se informar um número de item existente no respectivo documento fiscal.
				Help("  ",1,"LAICMSCMP1")
				lRet	:=	.F.
			EndIf
		EndIf
	EndIf
EndIf
Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³LancCps   ³ Autor ³ Gustavo G. Rueda      ³ Data ³13/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para validar os campos alimentados pelo sistema que  ³±±
±±³          ³ nao poderao ser alterados.                                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T. ou .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function LancCps()
Local	lRet	:=	.T.
Local	nPosCalc:=	0

If Type("oLancApICMS")=="O"
	nPosCalc:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_CALPRO"})
	If nPosCalc>0 .And. oLancApICMS:aCols[oLancApICMS:nAT,nPosCalc]=="1"
		//Registros calculados pelo sistema não poderão ser alterados, pois serão utilizados como log da rotina.
		//Caso seja necessário alterar este cálculo, basta inserir novos itens nesta opção de ajuste ou utitlizar a funcionalidade de Gerenciamento dos Lançamentos Fiscais de ICMS. Vale ressaltar que na Apuração de ICMS será considerada a sequência maior de cada lançamento fiscal do documento.
		Help("  ",1,"LAICMSCMP2")
		lRet	:=	.F.
	EndIf
EndIf

Return lRet
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³a103xLOk  ³ Autor ³ Gustavo G. Rueda      ³ Data ³13/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para validar a linha do acols de lancamentos         ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T. ou .F.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a103xLOk()
Local	lRet	:=	.T.
Local	nPosLanc:=	0
Local	nPosVlr	:=	0
Local	nNumIte	:=	0

If Type("oLancApICMS")=="O"
	nPosLanc:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_CODLAN"})
	nPosVlr:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_VALOR"})
	nNumIte:=	aScan(oLancApICMS:aHeader,{|aX|aX[2]=="CDA_NUMITE"})

	If !oLancApICMS:aCols[oLancApICMS:nAT,Len(oLancApICMS:aCols[oLancApICMS:nAT])] .And.;
		!Empty(oLancApICMS:aCols[oLancApICMS:nAT,nNumIte])

		If nPosLanc>0 .And. Empty(oLancApICMS:aCols[oLancApICMS:nAT,nPosLanc])
			Help(1," ","OBRIGAT",,"CDA_CODLAN"+Space(30),3,0)
			lRet	:=	.F.
		EndIf

		If lRet .And. nPosLanc>0 .And. Empty(oLancApICMS:aCols[oLancApICMS:nAT,nPosVlr])
			Help(1," ","OBRIGAT",,"CDA_VALOR"+Space(30),3,0)
			lRet	:=	.F.
		EndIf
	EndIf
EndIf
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFlddIV ³Autor  ³ Microsiga S/A         ³ Data ³09/09/2008 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de tratamento do folder para informacoes diversas     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Janela que sera disponibilizado os Get      ³±±
±±³          ³ExpA1: Array com as posicoes dos gets da NF-e                ³±±
±±³          ³ExpB1: Codeblock para atualizaco dos dados do Folder         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldDiv(oDlg,aPosGet,bRefresh)
Local lDigChv := GetNewPar("MV_DCHVNFE",.F.)
Local aObjetos	:= Array(Len(aNFEDanfe))
Local nrFolder  := 9		//posicao do folder
Local nTamGetFor:= (TamSX3("A2_COD")[1])
Local aCombo	:= CarregaTipoFrete()
Local aCombo1	:= {}
Local aCombo2	:= {}
Local aComboCTE := {}
Local aComboMod := {}
Local cCar      := "QWERTYUIOPASDFGHJKLZXCVBNM0123456789"
Local nPosLojaRet := 0
Local nCT       := 0
Local nMod		:= 0
Local nPsTpcTe  := 0
Local cChvEspe  := ""
Local cCompara  := "|SPED|CTE|NFA|"

If lDigChv
	cChvEspe := SuperGetMV( "MV_CHVESPE" , .F. , "" )
	cChvEspe := StrTran(cChvEspe,",","|")
	cChvEspe := StrTran(cChvEspe,";","|")

	If !Empty( cChvEspe )
		cCompara += cChvEspe + "|"
	EndIf
EndIF

// Caso a aba "Lançamentos da Apuração de ICMS" esteja ativa a posição da aba Danfe e modificada para 10
If cPaisLoc == "BRA" .And. Type('l103Class')=="L" .And.;
   l103Class .And. AliasInDic("CDA")
	nrFolder  := 10
EndIf

If TamSX3("A2_COD")[1]< 9
	nTamGetFor:=(6*TamSX3("A2_COD")[1])
ElseIf TamSX3("A2_COD")[1]< 15
	nTamGetFor:=(4.8*TamSX3("A2_COD")[1])
Else
	nTamGetFor:=(4*TamSX3("A2_COD")[1])
EndIf

aCombo1:=x3CboxToArray("F1_TPCTE")[1]
aSize(aComboCte,Len(aCombo1)+1)
For nCT:=1 to Len(aComboCte)
	aComboCte[nCT]:=IIf(nCT==1," ",aCombo1[nCT-1])
Next nCT

If !Empty(aNFEDanfe[18])
	nPsTpcTe := ascan(aComboCte ,{|x| Substr(x,1,1) == aNFEDanfe[18]})
EndIf
If nPsTpcTe == 0
	nPsTpcTe := 1
EndIf


aCombo2:=x3CboxToArray("F1_MODAL")[1]
aSize(aComboMod,Len(aCombo2)+1)
For nMod:=1 to Len(aComboMod)
	aComboMod[nMod]:=IIf(nMod==1," ",aCombo2[nMod-1])
Next nMod

If Type("aNFEDanfe") == "A"

	@ 05,aPosGet[1,1]-5 SAY STR0074 Of oDlg PIXEL SIZE 32,12    // Cod. Transp
	@ 04,aPosGet[1,2]-15 MSGET aObjetos[01] VAR aNFEDanfe[01] ;
		PICTURE X3Picture("F1_TRANSP") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_TRANSP");
	   	VALID IIF(Len(Trim(aNFEDanfe[01]))>0,CheckSX3("F1_TRANSP",aNFEDanfe[01]),.T.);
	   	F3 "SA4";
		SIZE 50,08 HASBUTTON
	aObjetos[01]:cSX1Hlp    := "F1_TRANSP"
	aObjetos[01]:bLostFocus := { || IIf( Len(Trim(aNFEDanfe[01]))>0 .And. CheckSX3("F1_TRANSP",aNFEDanfe[01]),{oFolder:nOption := nrFolder},"")}

	@ 05,aPosGet[1,3]-15 SAY STR0075 Of oDlg PIXEL SIZE 30,12   // Placa
	@ 04,aPosGet[1,4]-20 MSGET aObjetos[12] VAR aNFEDanfe[12] ;
		PICTURE X3Picture("F1_PLACA") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_PLACA") ;
		VALID CheckSX3("F1_PLACA",aNFEDanfe[12]) .And. A103VldCpo(aNFEDanfe[12],cCar,1);
		SIZE 30,08 HASBUTTON
	aObjetos[12]:cSX1Hlp := "F1_PLACA"
	aObjetos[12]:bLostFocus := { || IIf(!A103VldCpo(aNFEDanfe[12],cCar,1),{oFolder:nOption := nrFolder},"")}

	@ 17,aPosGet[1,1]-5 SAY STR0078 Of oDlg PIXEL SIZE 32,12  // Especie 1
	@ 16,aPosGet[1,2]-15 MSGET aObjetos[04] VAR aNFEDanfe[04] ;
		PICTURE X3Picture("F1_ESPECI1") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_ESPECI1");
		VALID CheckSX3("F1_ESPECI1",aNFEDanfe[04]);
		SIZE 50,08 HASBUTTON
	aObjetos[04]:cSX1Hlp := "F1_ESPECI1"

	@ 17,aPosGet[1,3]-15 SAY STR0082 Of oDlg PIXEL SIZE 32,12   // Volume 1
	@ 16,aPosGet[1,4]-20 MSGET aObjetos[05] VAR aNFEDanfe[05] ;
		PICTURE X3Picture("F1_VOLUME1") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VOLUME1");
		VALID CheckSX3("F1_VOLUME1",aNFEDanfe[05]);
		SIZE 50,08 HASBUTTON
	aObjetos[05]:cSX1Hlp := "F1_VOLUME1"

	@ 29,aPosGet[1,1]-5 SAY STR0079 Of oDlg PIXEL SIZE 32,12  // Especie 2
	@ 28,aPosGet[1,2]-15 MSGET aObjetos[06] VAR aNFEDanfe[06] ;
		PICTURE X3Picture("F1_ESPECI2") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_ESPECI2");
		VALID CheckSX3("F1_ESPECI2",aNFEDanfe[06]);
		SIZE 50,08 HASBUTTON
	aObjetos[06]:cSX1Hlp := "F1_ESPECI2"

	@ 29,aPosGet[1,3]-15 SAY STR0083 Of oDlg PIXEL SIZE 32,12  // Volume 2
	@ 28,aPosGet[1,4]-20 MSGET aObjetos[07] VAR aNFEDanfe[07] ;
		PICTURE X3Picture("F1_VOLUME2") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VOLUME2");
		VALID CheckSX3("F1_VOLUME2",aNFEDanfe[07]);
		SIZE 50,08 HASBUTTON
	aObjetos[07]:cSX1Hlp := "F1_VOLUME2"

	@ 41,aPosGet[1,1]-5 SAY STR0080 Of oDlg PIXEL SIZE 32,12  // Especie 3
	@ 40,aPosGet[1,2]-15 MSGET aObjetos[08] VAR aNFEDanfe[08] ;
		PICTURE X3Picture("F1_ESPECI3") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_ESPECI3");
		VALID CheckSX3("F1_ESPECI3",aNFEDanfe[08]);
		SIZE 50,08 HASBUTTON
	aObjetos[08]:cSX1Hlp := "F1_ESPECI3"

	@ 41,aPosGet[1,3]-15 SAY STR0084 Of oDlg PIXEL SIZE 32,12  // Volume 3
	@ 40,aPosGet[1,4]-20 MSGET aObjetos[09] VAR aNFEDanfe[09] ;
		PICTURE X3Picture("F1_VOLUME3") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VOLUME3");
		VALID CheckSX3("F1_VOLUME3",aNFEDanfe[09]);
		SIZE 50,08 HASBUTTON
	aObjetos[09]:cSX1Hlp := "F1_VOLUME3"

	@ 53,aPosGet[1,1]-5 SAY STR0081 Of oDlg PIXEL SIZE 32,12   // Especie 4
	@ 52,aPosGet[1,2]-15 MSGET aObjetos[10] VAR aNFEDanfe[10] ;
		PICTURE X3Picture("F1_ESPECI4") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_ESPECI4");
		VALID CheckSX3("F1_ESPECI4",aNFEDanfe[10]);
		SIZE 50,08 HASBUTTON
	aObjetos[10]:cSX1Hlp := "F1_ESPECI4"

	@ 53,aPosGet[1,3]-15 SAY STR0085 Of oDlg PIXEL SIZE 32,12  // Volume 4
	@ 52,aPosGet[1,4]-20 MSGET aObjetos[11] VAR aNFEDanfe[11] ;
		PICTURE X3Picture("F1_VOLUME4") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VOLUME4");
		VALID CheckSX3("F1_VOLUME4",aNFEDanfe[11]);
		SIZE 50,08 HASBUTTON
	aObjetos[11]:cSX1Hlp := "F1_VOLUME4"

	@ 05,aPosGet[1,5]-45 SAY STR0111 Of oDlg PIXEL SIZE 32,12  // Chave NFE
	@ 04,aPosGet[1,6]-64 MSGET aObjetos[13] VAR aNFEDanfe[13] ;
		PICTURE X3Picture("F1_CHVNFE") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual.And. VisualSX3("F1_CHVNFE") .and. IIF(lDigChv, (cFormul == "N" .And. "|" + AllTrim(cEspecie) + "|" $ cCompara) ,.T.) ;
		VALID (If(A103ConsNfeSef(),,(aNFEDanfe[13] := Space(44),aObjetos[13]:refresh())),.T.);
		SIZE 165,08 HASBUTTON
	aObjetos[13]:cSX1Hlp := "F1_CHVNFE"

	@ 05,aPosGet[1,8]+41 SAY STR0114 Of oDlg PIXEL SIZE 40,12   // Valor do Pedagio
	@ 04,aPosGet[1,8]+29 MSGET aObjetos[15] VAR aNFEDanfe[15] ;
		PICTURE X3Picture("F1_VALPEDG") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VALPEDG");
		VALID CheckSX3("F1_VALPEDG",aNFEDanfe[15]);
		SIZE 62,08 HASBUTTON
	aObjetos[15]:cSX1Hlp := "F1_VALPEDG"

	@ 17,aPosGet[1,5]-15 SAY STR0077 Of oDlg PIXEL SIZE 32,12  // Peso Bruto
	@ 16,aPosGet[1,6]-20 MSGET aObjetos[03] VAR aNFEDanfe[03] ;
		PICTURE X3Picture("F1_PBRUTO") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_PBRUTO");
		VALID CheckSX3("F1_PBRUTO",aNFEDanfe[03]);
		SIZE 50,08 HASBUTTON
	aObjetos[03]:cSX1Hlp := "F1_PBRUTO"

	@ 29,aPosGet[1,5]-15 SAY STR0076 Of oDlg PIXEL SIZE 32,12    // Peso Liquido
	@ 28,aPosGet[1,6]-20 MSGET aObjetos[02] VAR aNFEDanfe[02] ;
		PICTURE X3Picture("F1_PLIQUI") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_PLIQUI");
		VALID CheckSX3("F1_PLIQUI",aNFEDanfe[02]);
		SIZE 50,08 HASBUTTON
	aObjetos[02]:cSX1Hlp := "F1_PLIQUI"

 	@ 41,aPosGet[1,5]-15 SAY OemToAnsi(IIF(cTipo$"DB","STR0163","STR0115")) Of oDlg PIXEL SIZE 40,12
	@ 40,aPosGet[1,6]-20 MSGET aObjetos[16] VAR aNFEDanfe[16] ;
		PICTURE X3Picture("F1_FORRET") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_FORRET");
		VALID CheckSX3("F1_FORRET",aNFEDanfe[16]) .And. NfeFornece(cTipo,@aNFEDanfe[16],@aNFEDanfe[17]);
		F3 CpoRetF3("F1_FORRET");
		SIZE nTamGetFor,08 HASBUTTON
	aObjetos[16]:cSX1Hlp := "F1_FORRET"

	nPosLojaRet := aPosGet[1,6] + nTamGetFor -15
	@ 40,nPosLojaRet MSGET aObjetos[17] VAR aNFEDanfe[17] ;
		PICTURE X3Picture("F1_LOJARET") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_LOJARET");
		VALID CheckSX3("F1_LOJARET",aNFEDanfe[17]) .And. NfeFornece(cTipo,@ aNFEDanfe[16],@ aNFEDanfe[17]);
		F3 CpoRetF3("F1_LOJARET");
		SIZE 02,08 HASBUTTON
	aObjetos[17]:cSX1Hlp := "F1_LOJARET"

	@ 53,aPosGet[1,5]-15 SAY OemToAnsi(IIF(cTipo$"DB","STR0164","STR0123")) Of oDlg PIXEL SIZE 40,12
	@ 52,aPosGet[1,6]-20 MSGET aObjetos[19] VAR aNFEDanfe[19] ;
		PICTURE X3Picture("F1_FORENT") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_FORENT");
		VALID CheckSX3("F1_FORENT",aNFEDanfe[19]) .And. NfeFornece(cTipo,@aNFEDanfe[19],@aNFEDanfe[20]);
		F3 CpoRetF3("F1_FORENT");
		SIZE nTamGetFor,08 HASBUTTON
	aObjetos[19]:cSX1Hlp := "F1_FORENT"

	nPosLojaRet := aPosGet[1,6] + nTamGetFor -15
	@ 52,nPosLojaRet MSGET aObjetos[20] VAR aNFEDanfe[20] ;
		PICTURE X3Picture("F1_LOJAENT") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_LOJAENT");
		VALID CheckSX3("F1_LOJAENT",aNFEDanfe[20]) .And. NfeFornece(cTipo,@ aNFEDanfe[19],@ aNFEDanfe[20]);
		F3 CpoRetF3("F1_LOJAENT");
		SIZE 02,08 HASBUTTON
	aObjetos[20]:cSX1Hlp := "F1_LOJAENT"

	@ 17,aPosGet[1,7]+25 SAY STR0113 OF oDlg PIXEL SIZE 035,008 // "Tp. Frete"
	@ 16,aPosGet[1,8]+10 MSCOMBOBOX aObjetos[14] VAR aNFEDanfe[14] ITEMS aCombo WHEN !l103Visual SIZE 075,028 OF oDlg PIXEL

	@ 29,aPosGet[1,7]+25 SAY STR0116 OF oDlg PIXEL SIZE 035,008 // "Tipo Ct-e"
	@ 28,aPosGet[1,8]+10 MSCOMBOBOX aObjetos[18] VAR aNFEDanfe[18] ITEMS aComboCTE;
  	WHEN !l103Visual .And. VisualSX3("F1_TPCTE") .And. If(Upper(Trim(cEspecie))=="CTE",.T.,(aObjetos[18]:NAT := nPsTpcTe ,aObjetos[18]:refresh(),.F.));
	VALID A103ConsCTE(aNFeDanfe[18]);
	SIZE 075,028 OF oDlg PIXEL

	@ 41,aPosGet[1,7]+25 SAY "Modalidade" OF oDlg PIXEL SIZE 035,008 // "Modalidade"
	@ 40,aPosGet[1,8]+10 MSCOMBOBOX aObjetos[23] VAR aNFEDanfe[23] ITEMS aComboMod;
  	WHEN !l103Visual .And. VisualSX3("F1_MODAL") .And. If(Upper(Trim(cEspecie))=="CTE",.T.,(aNFEDanfe[23]:=aComboMod[1],aObjetos[23]:refresh(),.F.));
	VALID A103VldMod(aNFeDanfe[23]);
	SIZE 075,028 OF oDlg PIXEL

	@ 61,aPosGet[1,7]+25 SAY STR0124 Of oDlg PIXEL SIZE 40,12
	@ 59,aPosGet[1,7]+49 MSGET aObjetos[21] VAR aNFEDanfe[21] ;
		PICTURE X3Picture("F1_NUMAIDF") ;
		OF oDlg PIXEL ;
		WHEN VisualSX3("F1_NUMAIDF");
		F3 CpoRetF3("F1_NUMAIDF");
		SIZE nTamGetFor-3,08 HASBUTTON
	aObjetos[21]:cSX1Hlp := "F1_NUMAIDF"

	@ 61,aPosGet[1,8]+37 SAY STR0125 Of oDlg PIXEL SIZE 40,12
	@ 59,aPosGet[1,8]+61 MSGET aObjetos[22] VAR aNFEDanfe[22] ;
		PICTURE X3Picture("F1_ANOAIDF") ;
		OF oDlg PIXEL ;
		WHEN VisualSX3("F1_ANOAIDF");
		F3 CpoRetF3("F1_ANOAIDF");
		SIZE 02,08 HASBUTTON
	aObjetos[22]:cSX1Hlp := "F1_ANOAIDF"

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada utilizado para habilitar o botão Mais Info. na aba DANFE |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("MT103DCF")
		@ 16,aPosGet[1,8] + 87 BUTTON STR0009 SIZE 30 ,11 FONT oDlg:oFont ACTION A103CompDanfe() OF oDlg PIXEL
	EndIf
EndIf
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103DescMun |Autor ³João Victor Pellegrini³ Data ³06/12/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Preenche a descricao do Municipio                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cCodMun  = Codigo do Municipio                              ³±±
±±³          ³oDescMun = Objeto da descricao ddo Municipio                ³±±
±±³          ³cDescMun = Descricao do Municipio                           ³±±
±±³          ³cUF      = UF do Municipio                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103DescMun(cCodMun,oDescMun,cDescMun,cUF)

Local lRet := .T.
Local aAreaSA2 := SA2->(GetArea())
DEFAULT cUF := ""

If Empty(cUF) .And. (Type("cA100For")== "C" .And. !Empty(cA100For)) .And. (Type("cLoja")== "C" .And. !Empty(cLoja))
	cUF := Posicione("SA2",1, xFilial("SA2") + cA100For + cLoja , "A2_EST" )
EndIf

If !Empty(cCodMun)
	If cUf == ""
		CC2->(dbSetOrder(3))
		lRet := CC2->(MsSeek(xFilial("CC2")+cCodMun))
	Else
		CC2->(dbSetOrder(1))
		lRet := CC2->(MsSeek(xFilial("CC2")+cUF+cCodMun))
	EndIf

	If lRet
		cDescMun:= CC2->CC2_MUN
		oDescMun:Refresh()
	Else
	   If !Empty(cCodMun)
			Help( " " , 1 , "ISSINV" )
			cDescMun := ""
		EndIf
	EndIf
EndIf
RestArea(aAreaSA2)
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeFldAdic³Autor  ³ João Victor Pellegrini³ Data ³05/12/2013 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de tratamento do folder para informacoes adicionais   ³±±
±±³          ³do documento                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³oDlg: Objeto da Janela que sera disponibilizado os Get       ³±±
±±³          ³aPosGet: Array com as posicoes dos gets das Infos. Adicionais³±±
±±³          ³aInfAdic: Array com as informacoes adicionais do docto.      ³±±
±±³          ³oDescMun: Objeto da Descrição do Município                   ³±±
±±³          ³cDescMun: Descricao do Municipio                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeFldAdic(oDlg,aPosGet,aInfAdic,oDescMun,cDescMun,l103Visual)

Local aObjetos := Array(Len(aInfAdic))

Local cMotRet  := CriaVar("DHI_CODIGO",.F.)
Local cDescRet := CriaVar("DHI_DESCRI",.F.)
Local cHistRet := CriaVar("F1_HISTRET",.F.)
Local oMemoRet
Local nTamGetFor:=TamSX3("A1_COD")[1]
Local nTamLoja :=TamSX3("A1_LOJA")[1]
Local nPosLoja := 0
Local aCombo := {"","1=Sim","2=Não"}

Default l103Visual := .F.

If l103Visual
	cMotRet  := SF1->F1_MOTRET
	cDescRet := Posicione("DHI",1,xFilial("DHI")+cMotRet,"DHI_DESCRI")
	cHistRet := SF1->F1_HISTRET
EndIf

If SF1->(FieldPos("F1_INCISS")) > 0
	@ aPosGet[1,1],aPosGet[1,2] SAY STR0151 Of oDlg PIXEL SIZE 48,12
	@ aPosGet[1,1] - 1,aPosGet[1,2] + 40 MSGET aObjetos[01] VAR aInfAdic[01] ;
		PICTURE PesqPict("SF1","F1_INCISS") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_INCISS") .And. !SuperGetMV("MV_ISSXMUN",.F.,.F.) ;
		F3 CpoRetF3("F1_INCISS");
		VALID A103DescMun(@aInfAdic[01], @oDescMun, @cDescMun, CC2->CC2_EST);
		SIZE 40,09 HASBUTTON
	aObjetos[01]:cSX1Hlp := "F1_INCISS"

	@ aPosGet[1,1] - 1,aPosGet[1,2] + 80 MSGET oDescMun VAR cDescMun WHEN .F. OF oDlg PIXEL SIZE 130,006
EndIf

If SF1->(FieldPos("F1_VEICUL1")) > 0
	@ aPosGet[1,1], aPosGet[1,2] + 230 SAY STR0156 Of oDlg PIXEL SIZE 32,12    // Veiculo 1
	@ aPosGet[1,1] - 1,aPosGet[1,2] + 260 MSGET aObjetos[02] VAR aInfAdic[02] ;
		PICTURE X3Picture("F1_VEICUL1") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VEICUL1");
    	VALID CheckSX3("F1_VEICUL1",aInfAdic[02]);
		SIZE 50,08 HASBUTTON
	aObjetos[02]:cSX1Hlp    := "F1_VEICUL1"
EndIf

If SF1->(FieldPos("F1_VEICUL2")) > 0
	@ aPosGet[1,1], aPosGet[1,2] + 330 SAY STR0157 Of oDlg PIXEL SIZE 32,12    // Veiculo 2
	@ aPosGet[1,1] - 1,aPosGet[1,2] + 360 MSGET aObjetos[03] VAR aInfAdic[03] ;
		PICTURE X3Picture("F1_VEICUL2") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VEICUL2");
    	VALID CheckSX3("F1_VEICUL2",aInfAdic[03]);
		SIZE 50,08 HASBUTTON
	aObjetos[03]:cSX1Hlp    := "F1_VEICUL2"
EndIf

If SF1->(FieldPos("F1_VEICUL3")) > 0
	@ aPosGet[1,1], aPosGet[1,2] + 430 SAY STR0158 Of oDlg PIXEL SIZE 32,12    // Veiculo 3
	@ aPosGet[1,1] - 1,aPosGet[1,2] + 460 MSGET aObjetos[04] VAR aInfAdic[04] ;
		PICTURE X3Picture("F1_VEICUL3") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_VEICUL3");
    	VALID CheckSX3("F1_VEICUL3",aInfAdic[04]);
		SIZE 50,08 HASBUTTON
	aObjetos[04]:cSX1Hlp    := "F1_VEICUL3"
EndIf

If SF1->(ColumnPos("F1_DTCPISS")) > 0
	@ aPosGet[1,1] +15,aPosGet[1,2] SAY "Data de Competência" Of oDlg PIXEL SIZE 80,12
	@ aPosGet[1,1] +14,aPosGet[1,2] + 80 MSGET aObjetos[05] VAR aInfAdic[05] ;
		PICTURE "" ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_DTCPISS") ;
		SIZE 80,09 HASBUTTON
	aObjetos[05]:cSX1Hlp := "F1_DTCPISS"

EndIf

If SF1->(ColumnPos("F1_SIMPNAC")) > 0 .And. SuperGetMV("MV_MT103SN",.F.,.F.)
	@ aPosGet[1,1], aPosGet[1,2] + 520 SAY "Opt Simp Nac" Of oDlg PIXEL SIZE 35,20   // Simples Nacional
	@ aPosGet[1,1] - 1,aPosGet[1,2] + 560 MSCOMBOBOX aObjetos[06] VAR aInfAdic[06] ITEMS aCombo ;
	WHEN !l103Visual .And. VisualSX3("F1_SIMPNAC") ;//criar parametro
	VALID CheckSX3("F1_SIMPNAC",aInfAdic[06]);
	SIZE 055,08 OF oDlg PIXEL
	aObjetos[06]:cSX1Hlp    := "F1_SIMPNAC"
EndIf

If SF1->(ColumnPos("F1_CLIDEST")) > 0
	@ aPosGet[1,1]+15, aPosGet[1,2] + 210 SAY "Cliente de Entrega" Of oDlg PIXEL SIZE 80,12
	@ aPosGet[1,1] +14,aPosGet[1,2] + 260 MSGET aObjetos[07] VAR aInfAdic[07] ;
		PICTURE X3Picture("F1_CLIDEST") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_CLIDEST") .And. (AllTrim(cEspecie) $ "CTR/CTE/CTA/CA/CTF" .Or. "NFST"$AllTrim(cEspecie));
		F3 CpoRetF3("F1_CLIDEST");
		VALID CheckSX3("F1_CLIDEST",aInfAdic[07]) .And. (existcpo("SA1") .Or. Vazio());
		SIZE nTamGetFor,08 HASBUTTON
	aObjetos[07]:cSX1Hlp := "F1_CLIDEST"
EndIf

If SF1->(ColumnPos("F1_LOJDEST"))>0
	nPosLoja := aPosGet[1,2] + 300
	@ aPosGet[1,1] +14,nPosLoja MSGET aObjetos[08] VAR aInfAdic[08] ;
		PICTURE X3Picture("F1_LOJDEST") ;
		OF oDlg PIXEL ;
		WHEN !l103Visual .And. VisualSX3("F1_LOJDEST") .And. (AllTrim(cEspecie) $ "CTR/CTE/CTA/CA/CTF" .Or. "NFST"$AllTrim(cEspecie));
		F3 CpoRetF3("F1_LOJDEST");
		VALID CheckSX3("F1_LOJDEST",aInfAdic[08]);
		SIZE nTamLoja,08 HASBUTTON
	aObjetos[08]:cSX1Hlp := "F1_LOJDEST"
EndIf

If SF1->(FieldPos("F1_MOTRET")) > 0 .And. l103Visual

	If !Empty(cMotRet)
		@ aPosGet[1,1]+16,aPosGet[1,2]     SAY RetTitle("F1_MOTRET")   Of oDlg PIXEL
		@ aPosGet[1,1]+15,aPosGet[1,2]+40  MSGET cMotRet  SIZE  95, 10 Of oDlg PIXEL When .F.

		@ aPosGet[1,1]+32,aPosGet[1,2]     SAY RetTitle("DHI_DESCRI")   Of oDlg PIXEL
		@ aPosGet[1,1]+31,aPosGet[1,2]+40  MSGET cDescRet SIZE 180, 10 Of oDlg PIXEL When .F.

		@ aPosGet[1,1]+16,aPosGet[1,2]+230 SAY RetTitle("F1_HISTRET")  Of oDlg PIXEL
		@ aPosGet[1,1]+15,aPosGet[1,2]+260 GET oMemoRet VAR cHistRet   Of oDlg MEMO  When .F. size 285,37 PIXEL
	EndIf

EndIf

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeVincOri³Autor  ³ Marcelo Custodio      ³ Data ³15/12/2008 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Permite consultar as notas de saida de devolucao do produto  ³±±
±±³          ³para vincular no documento de entrada - Projeto Oleo e Gas - ³±±
±±³          ³Pilar 1                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Informa o codigo do fornecedor                        ³±±
±±³          ³ExpC2: Informa codigo da loja                                ³±±
±±³          ³ExpC3: Informa o codigo do produto                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeVincOri(cCodForn,cCodLoja,cCodProd)
Local cQuery     := ""
Local cAlias     := ""
Local aColsSD2   := {}
Local aHeaderSD2 := {}
Local aNoFields  := {"D2_CLIENTE","D2_LOJA"}
Local nPosCod	 := aScan(aHeader,{|x| AllTrim(x[2])=='D1_COD'})
Local aSize      := MsAdvSize( .F. )
Local aObjects   := {}
Local aInfo      := {}
Local aArea      := GetArea()
Local aAreaSB1   := SB1->(GetArea())
Local aAreaSA2   := SA2->(GetArea())
Local aOrdem     := {AllTrim(RetTitle("F2_DOC"))+"+"+AllTrim(RetTitle("F2_SERIE")),AllTrim(RetTitle("F2_EMISSAO"))}
Local aChave     := {"D2_DOC+D2_SERIE","D2_EMISSAO"}
Local aPesq      := {{Space(Len(SD1->D1_DOC+SD1->D1_SERIE)),"@!"},{Ctod(""),"@!"}}
Local aSavHead   := aClone(aHeader)
Local lContinua  := .T.
Local aHeadTrb   := {}
Local aStruTrb   := {}
Local cNomeTrb   := ""
Local cAliasTRB  := ""
Local aNomInd    := {}
Local nPosNfVinc := aScan(aHeader,{|x| AllTrim(x[2])=='D1_NFVINC'})
Local nPosSeVinc := aScan(aHeader,{|x| AllTrim(x[2])=='D1_SERVINC'})
Local nPosItVinc := aScan(aHeader,{|x| AllTrim(x[2])=='D1_ITMVINC'})
Local cFilSD2    := xFilial("SD2")
Local cFilSF4    := xFilial("SF4")
Local oGetDb
Local nX
Local oPanel
Local oDlg
Local oCombo
Local cCombo
Local oGet
Local xPesq
Local nOpca

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Preenche os filtros com os valores definidos na nota |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DEFAULT cCodForn := cA100For
DEFAULT cCodLoja := cLoja
DEFAULT cCodProd := aCols[n][nPosCod]

lContinua := (!Empty(cCodForn) .AND. !Empty(cCodLoja) .AND. !Empty(cCodProd) .And. !Empty(nPosNfVinc) .And. !Empty(nPosSeVinc) .And. !Empty(nPosItVinc))

If lContinua
	SB1->(dbSetOrder(1))
	SA2->(dbSetOrder(1))

	lContinua := (SB1->(dbSeek(xFilial("SB1")+cCodProd)) .And. SA2->(dbSeek(xFilial("SA2")+cCodForn+cCodLoja)))

	If lContinua

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Monta estrutura do arquivo temporario                |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SX3")
		dbSetOrder(1)
		MsSeek("SD2")
		While !Eof() .And. SX3->X3_ARQUIVO == "SD2"
			If ( X3USO(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL .And. SX3->X3_CONTEXT<>"V" .And. SX3->X3_TIPO<>"M" .And. !(SX3->X3_CAMPO $ "D2_CLIENTE,D2_LOJA") ) .OR. (AllTrim(SX3->X3_CAMPO) $ "D2_DOC,D2_SERIE,D2_EMISSAO")
				Aadd(aHeadTrb,{ TRIM(X3Titulo()),;
					SX3->X3_CAMPO,;
					SX3->X3_PICTURE,;
					SX3->X3_TAMANHO,;
					SX3->X3_DECIMAL,;
					SX3->X3_VALID,;
					SX3->X3_USADO,;
					SX3->X3_TIPO,;
					SX3->X3_ARQUIVO,;
					SX3->X3_CONTEXT,;
					IIf(AllTrim(SX3->X3_CAMPO)$"D2_DOC,D2_SERIE,D2_ITEM,D2_COD","00",SX3->X3_ORDEM) })
				aadd(aStruTRB,{SX3->X3_CAMPO,SX3->X3_TIPO,SX3->X3_TAMANHO,SX3->X3_DECIMAL,IIf(AllTrim(SX3->X3_CAMPO)$"D2_DOC,D2_SERIE,D2_ITEM,D2_COD","00",SX3->X3_ORDEM)})
			EndIf
			dbSelectArea("SX3")
			dbSkip()
		EndDo

		aHeadTrb := aSort(aHeadTrb,,,{|x,y| x[11] < y[11]})
		aStruTrb := aSort(aStruTrb,,,{|x,y| x[05] < y[05]})

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Gera arquivo temporario          |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cAliasTRB := GetNextAlias()
		cNomeTrb := CriaTrab(aStruTRB,.T.)
		dbUseArea(.T.,__LocalDrive,cNomeTrb,cAliasTRB,.F.,.F.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Gera indices temporarios    |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea(cAliasTRB)
		For nX := 1 To Len(aChave)
			aadd(aNomInd,SubStr(cNomeTrb,1,7)+chr(64+nX))
			IndRegua(cAliasTRB,aNomInd[nX],aChave[nX])
		Next nX

		dbClearIndex()
		For nX := 1 To Len(aNomInd)
			dbSetIndex(aNomInd[nX])
		Next nX

		PRIVATE aHeader := aHeadTRB
		xPesq := aPesq[(cAliasTRB)->(IndexOrd())][1]

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Filtra notas de devolucao do fornecedor e produto informados  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cQuery := "SELECT SD2.R_E_C_N_O_ AS RECNO "
		cQuery += "  FROM " + RetSQLName("SD2") + " SD2, " + RetSQLName("SF2") + " SF2, " + RetSQLName("SF4") + " SF4 "
		cQuery += " WHERE SD2.D2_FILIAL  = '" + xFilial("SD2") + "'"
		cQuery += "   AND SF2.F2_FILIAL  = '" + xFilial("SF2") + "'"
		cQuery += "   AND SF4.F4_FILIAL  = '" + xFilial("SF4") + "'"
		cQuery += "   AND SD2.D2_DOC     = SF2.F2_DOC    "
		cQuery += "   AND SD2.D2_TES     = SF4.F4_CODIGO "
		cQuery += "   AND SD2.D2_COD     = '" + SB1->B1_COD + "'"
		cQuery += "   AND SF2.F2_CLIENTE = '" + SA2->A2_COD + "'"
		cQuery += "   AND SF2.F2_LOJA    = '" + SA2->A2_LOJA + "'"
		cQuery += "   AND (SF4.F4_PODER3 = 'D' OR SF2.F2_TIPO = 'D')"
		cQuery += "   AND SD2.D_E_L_E_T_ = ' ' "
		cQuery += "   AND SF2.D_E_L_E_T_ = ' ' "
		cQuery += "   AND SF4.D_E_L_E_T_ = ' '"

		cAlias := GetNextAlias()
		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAlias,.T.,.T.)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Preenche arquivo temporario  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		While !(cAlias)->(Eof())
			SD2->(MsGoto((cAlias)->RECNO))

			If !SD2->(Eof())
				RecLock(cAliasTRB,.T.)
				For nX := 1 To Len(aStruTRB)
					(cAliasTRB)->(FieldPut(nX,SD2->(FieldGet(FieldPos(aStruTRB[nX][1])))))
				Next nX
				MsUnlock()
			EndIf

			(cAlias)->(dbSkip())
		EndDo

		If !(cAliasTRB)->(Eof())
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//| Calcula dimensoes da tela    |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			aSize[1] /= 1.5
			aSize[2] /= 1.5
			aSize[3] /= 1.5
			aSize[4] /= 1.3
			aSize[5] /= 1.5
			aSize[6] /= 1.3
			aSize[7] /= 1.5

			AAdd( aObjects, { 100, 020,.T.,.F.,.T.} )
			AAdd( aObjects, { 100, 060,.T.,.T.} )
			AAdd( aObjects, { 100, 020,.T.,.F.} )
			aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
			aPosObj := MsObjSize( aInfo, aObjects,.T.)

			DEFINE MSDIALOG oDlg TITLE STR0065 FROM aSize[7],000 TO aSize[6],aSize[5] OF oMainWnd PIXEL //"Vinculo - Documento de Saída"
			@ aPosObj[1,1],aPosObj[1,2] MSPANEL oPanel PROMPT "" SIZE aPosObj[1,3],aPosObj[1,4] OF oDlg CENTERED LOWERED
			cTexto1 := AllTrim(RetTitle("F2_CLIENTE"))+"/"+AllTrim(RetTitle("F2_LOJA"))+": "+SA2->A2_COD+"/"+SA2->A2_LOJA+"  -  "+RetTitle("A2_NOME")+": "+SA2->A2_NOME
			@ 002,005 SAY cTexto1 SIZE aPosObj[1,3],008 OF oPanel PIXEL
			cTexto2 := AllTrim(RetTitle("B1_COD"))+": "+SB1->B1_COD+"/"+SB1->B1_DESC
			@ 012,005 SAY cTexto2 SIZE aPosObj[1,3],008 OF oPanel PIXEL

			oGetDb := MsGetDB():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],1,"Allwaystrue","allwaystrue","",.F., , ,.F., ,cAliasTRB)

			DEFINE SBUTTON FROM aPosObj[3,1]+000,aPosObj[3,4]-030 TYPE 1 ACTION (nOpcA := 1,oDlg:End()) ENABLE OF oDlg
			DEFINE SBUTTON FROM aPosObj[3,1]+012,aPosObj[3,4]-030 TYPE 2 ACTION (nOpcA := 0,oDlg:End()) ENABLE OF oDlg

			@ aPosObj[3,1]+00,aPosObj[3,2]+00 SAY STR0066 PIXEL //"Pesquisar por:"
			@ aPosObj[3,1]+12,aPosObj[3,2]+00 SAY STR0067 PIXEL //"Localizar"
			@ aPosObj[3,1]+00,aPosObj[3,2]+40 MSCOMBOBOX oCombo VAR cCombo ITEMS aOrdem SIZE 100,044 OF oDlg PIXEL ;
				VALID ((cAliasTRB)->(dbSetOrder(oCombo:nAt)),(cAliasTRB)->(dbGotop()),xPesq := aPesq[(cAliasTRB)->(IndexOrd())][1],.T.)
			@ aPosObj[3,1]+12,aPosObj[3,2]+40 MSGET oGet VAR xPesq Of oDlg PICTURE aPesq[(cAliasTRB)->(IndexOrd())][2] PIXEL ;
				VALID ((cAliasTRB)->(MsSeek(Iif(ValType(xPesq)=="C",AllTrim(xPesq),xPesq),.T.)),.T.).And.IIf(oGetDb:oBrowse:Refresh()==Nil,.T.,.T.)
			ACTIVATE MSDIALOG oDlg CENTERED

			If nOpca == 1
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//| Carrega documento selecionado|
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				aCols[n,nPosNfVinc] := (cAliasTRB)->D2_DOC
				aCols[n,nPosSeVinc] := (cAliasTRB)->D2_SERIE
				aCols[n,nPosItVinc] := (cAliasTRB)->D2_ITEM
			EndIf
		Else
			Aviso(STR0018,STR0068,{"OK"}) //"Atenção"###"Não existe devolução para o fornecedor/produto informado"
		EndIf

		dbSelectArea(cAliasTRB)
		dbCloseArea()
	EndIf
Else
	Aviso(STR0018,STR0069,{"OK"}) //"Atenção"###"Informe o fornecedor e o produto"
EndIf

aHeader   := aClone(aSavHead)

RestArea(aAreaSA2)
RestArea(aAreaSB1)
RestArea(aArea)

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³NfeVldVinc³Autor  ³ Marcelo Custodio      ³ Data ³15/12/2008 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Valida o documento de saida informado no vinculo             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Informa o campo a ser validado                        ³±±
±±³          ³       1 - Documento                                         ³±±
±±³          ³       2 - Serie                                             ³±±
±±³          ³       3 - Item                                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function NfeVldVinc(nFld)
Local cValor     := &(ReadVar())
Local nPosNfVinc := aScan(aHeader,{|x| AllTrim(x[2])=='D1_NFVINC'})
Local nPosSeVinc := aScan(aHeader,{|x| AllTrim(x[2])=='D1_SERVINC'})
Local nPosProd   := aScan(aHeader,{|x| AllTrim(x[2])=='D1_COD'})
Local lRet       := .T.

SD2->(DbSetOrder(3))

Do Case
	Case nFld==1//Valida documento
		lRet := SD2->(dbSeek(xFilial("SD2")+cValor))
	Case nFld==2//Valida Serie
		lRet := SD2->(dbSeek(xFilial("SD2")+aCols[n,nPosNfVinc]+cValor))
	Case nFld==3//Valida Item
		lRet := SD2->(dbSeek(xFilial("SD2")+aCols[n,nPosNfVinc]+aCols[n,nPosSeVinc]+cA100For+cLoja+aCols[n][nPosProd]+cValor))
EndCase

If lRet//Valida TES de devolucao
	SF4->(dbSetOrder(1))
	lRet := (SF4->(dbSeek(xFilial("SF4")+SD2->D2_TES)) .And. (SF4->F4_PODER3 == "D" .OR. SD2->D2_TIPO == "D"))
EndIf

If !lRet
	Aviso(STR0018,STR0070,{"OK"}) //"Atenção"###"Documento de saída inválido"
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103LCF   ³ Autor ³ Julio C Guerato       ³ Data ³22.01.2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que aplica ponto de entrada para manipular o bloqueio³±±
±±³          ³ou desbloqueio de campos. 								  ³±±
±±³          ³Nao existindo o campo no ponto de entrada, sera retornado   ³±±
±±³          ³.T. a fim de que o programa continue operando normalmente.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Nome do Campo 				                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL:  Retorna .F. ou .T. 					              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA103X                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103LCF(cCampo)

Local lRet103 	:= .T.
Local aArea    	:= GetArea()
Local aAreaSX3 	:= SX3->(GetArea())

DbSelectArea('SX3')
DbSetOrder(2)

// Se não houver o ponto de entrada que determina o bloqueio ou a edição de um campo,
// a função retornará o que estiver no SX3.

If MsSeek(cCampo)
	If( SX3->X3_VISUAL=="V" .OR. (IIF(ALLTRIM(SX3->X3_WHEN) == '',.F.,ALLTRIM(SX3->X3_WHEN))))
		lRet103	:=	.F.
	EndIf
EndIf

If cCampo != Nil
	If ExistBlock("MT103LCF")
		lRet103 := ExecBlock("MT103LCF",.F.,.F.,{cCampo})
		If!ValType(lRet103)=="L"
			lRet103 := .T.
		Endif
	EndIf
EndIf

RestArea(aAreaSX3)
RestArea(aArea)
Return(lRet103)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103VLDCPO³ Autor ³ Julio C Guerato       ³ Data ³11/12/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para verificar se um determinado caracter existe em  ³±±
±±³          ³uma variável				 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Variável com conteudo que será validado              ³±±
±±³			 ³ExpC2: Caracter a ser procurado na String                   ³±±
±±³			 ³ExpN1: Tipo de verificação				                  ³±±
±±³			 ³  	 0 = Verifica se existe algum caracterer de ExpC2 que ³±±
±±³			 ³		   	 que não é permitido em ExpC1					  ³±±
±±³			 ³		 1 = Verifica se todos os caracteres de ExpC1 existem ³±±
±±³			 ³		   	 em ExpC2										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL:  Retorna .F. ou .T. 					              ³±±
±±³		     ³.F. = Caracter Não Existe / .T. = Caracter Existe           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA103X                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103VldCpo(cValor, cCarac, nTipo)

Local lRet := .F.
Local nX   := 0
Local nCT  := 0
Default nTipo:=0

If Len(cValor)>0 .And. Len(cCarac)>0
	If nTipo==0
	    For nX:=1 To len(cCarac)
    	     if RAT(SUBSTR(cCarac,nX,1),cValor)>0 .And. !lRet
        	    lRet:= .T.
	         EndIf
    	Next nX
 	Else
 	    For nX:=1 To len(Trim(cValor))
    	     if RAT(SUBSTR(cValor,nX,1),cCarac)=0
    	     	nCT++
	         EndIf
    	Next nX
    	lRet:=iif(nCT>0,.F.,.T.)
  	EndIf
EndIF

Return (lRet)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A103VLDNFO³ Autor ³ Julio C Guerato       ³ Data ³30/12/2009³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para validar todos os Documentos vinculados aos itens³±±
±±³          ³de uma nota fiscal		 								  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nItem = Número do Item no Acols                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL:  Retorna .F. ou .T. 					              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³MATA103X                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103VldNFO(n)

Local lRet  	 := .T.
Local cItem 	 := ""
Local nPosItmOri := aScan(aHeader,{|x| AllTrim(x[2])=="D1_ITEMORI"})

If cTipo$"DCPI"
    cItem:=IIf(Empty(aCols[n][nPosItmOri]),"x",aCols[n][nPosItmOri])
    lRet:=A103ITDEV(cItem)
EndIf

Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RatPed2NF ºAutor  ³Microsiga           º Data ³  06/18/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Carrega automaticamente o rateio do item da Nota fiscal    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function RatPed2NF(aHeadSDE,aColsSDE,cItem,nRecSC7)
Local aArea      := GetArea()
Local nPosItem   := Ascan(aHeadSDE,{|x| AllTrim(x[2]) == "DE_ITEM"} )
Local nPosPerc   := Ascan(aHeadSDE,{|x| AllTrim(x[2]) == "DE_PERC"} )
Local nPosCC     := Ascan(aHeadSDE,{|x| AllTrim(x[2]) == "DE_CC"} )
Local nPosConta  := Ascan(aHeadSDE,{|x| AllTrim(x[2]) == "DE_CONTA"} )
Local nPosItCta  := Ascan(aHeadSDE,{|x| AllTrim(x[2]) == "DE_ITEMCTA"} )
Local nPosCLVL   := Ascan(aHeadSDE,{|x| AllTrim(x[2]) == "DE_CLVL"} )
Local nPosACols	 := Ascan(aColsSDE,{|x| AllTrim(x[1]) == Alltrim(cItem) } )
Local nCt        := 0
Local nLinha	 := 0

Local aEntidades	:= {}
Local nEnt			:= 0
Local nDeb			:= 0
Local nTamItem	:= TamSX3("DE_ITEM")[1]

SC7->(MsGoTo(nRecSC7))
dbSelectArea("SCH")
SCH->(dbSetOrder(1))//CH_FILIAL+CH_PEDIDO+CH_FORNECE+CH_LOJA+CH_ITEMPD+CH_ITEM
If SCH->(dbSeek(SC7->( C7_FILIAL + C7_NUM + C7_FORNECE + C7_LOJA + C7_ITEM ) ))
	While SCH->(!Eof()) .And. SCH->(CH_FILIAL + CH_PEDIDO + CH_FORNECE+ CH_LOJA+ CH_ITEMPD) == SC7->( C7_FILIAL + C7_NUM + C7_FORNECE + C7_LOJA + C7_ITEM  )
		If nCt == 0
			If nPosACols <= 0
				aAdd(aColsSDE,{ cItem,{} } )
				nPosACols := Len(aColsSDE)
				nCt+=1
			EndIf
		EndIF
		nLinha++
  		If len(aColsSDE[nPosACols][2]) < nLinha
			aAdd(aColsSDE[nPosACols][2],Array( Len(aHeadSDE) + 1 ) )
		EndIf
		aColsSDE[nPosACols][2][nLinha][nPosItem]  := RetAsc(Str(nLinha),nTamItem,.T.)
		aColsSDE[nPosACols][2][nLinha][nPosPerc]   	:= SCH->CH_PERC
		aColsSDE[nPosACols][2][nLinha][nPosCC]   	:= SCH->CH_CC
		aColsSDE[nPosACols][2][nLinha][nPosConta]   := SCH->CH_CONTA
		aColsSDE[nPosACols][2][nLinha][nPosItCta]  	:= SCH->CH_ITEMCTA
		aColsSDE[nPosACols][2][nLinha][nPosCLVL]   	:= SCH->CH_CLVL
		aColsSDE[nPosACols][2][nLinha][Len(aHeadSDE) + 1] := .F.


		aEntidades := CtbEntArr()
		For nEnt := 1 to Len(aEntidades)
			For nDeb := 1 to 2
				cCpo := "DE_EC"+aEntidades[nEnt]
				cSCH := "CH_EC"+aEntidades[nEnt]

				If nDeb == 1
					cCpo += "DB"
					cSCH += "DB"
				Else
					cCpo += "CR"
					cSCH += "CR"
				EndIf

				nPosHead := aScan(aHeadSDE,{|x| AllTrim(x[2]) == Alltrim(cCpo) } )

				If nPosHead > 0
					aColsSDE[nPosACols][2][nLinha][nPosHead] := SCH->(&(cSCH))
				EndIf

			Next nDeb
		Next nEnt

		SCH->(dbSkip())
	EndDo
EndIf

RestArea(aArea)
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103ValNatºAutor  ³TOTVS			     º Data ³  14/10/2010 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validacoes na Natureza									  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A103ValNat(cNatureza)
Local aArea:= GetArea()
Local lRet := .T.
If !Empty(cNatureza)
	DbSelectArea("SED")
	DbSetOrder(1)
	DbSeek (xFilial("SED")+cNatureza)
	If !Eof() .And. ED_TIPO == "1"
        Help("  ",1,"A103VLDNAT")
     	lRet:= .F.
	EndIf
	//Valida se a natureza pode ser utilizada pelo compras
	If lRet
	   lRet:=FinVldNat(.F.,cNatureza,2)
	EndIf
EndIf
RestArea(aArea)
Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103ValFrete ºAutor  ³TOTVS		     º Data ³  23/02/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida Campo Tipo de Frete / Aba: DANFE					  º±±
±±º		     ³ O conteudo somente podera ser preenchido quando nao existirº±±
±±º		     ³ nenhum pedido vinculado ao pedido de compras				  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ValFrete()
Local aArea	   := GetArea()
Local nPosPc   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_PEDIDO"})
Local nPosItPc := aScan(aHeader,{|x| AllTrim(x[2])=="D1_ITEMPC"})
Local nX       := 0
Local lPed     := .F.
Local lRet     := .T.
Local lvldFret := SuperGetMV("MV_VALFRET",.F.,.F.)

For nX:=1 to Len(aCols)
	If nPosPc>0
		lPed:=IIF(Empty(aCols[nX][nPosPc]),.F.,.T.)
	EndIf
	If nPosItPc>0 .And. !lPed
		lPed:=IIF(Empty(aCols[nX][nPosPc]),.F.,.T.)
	EndIf
	If lPed
	   Exit
	EndIf
Next nX

IF Len(aNfeDanfe)>0
    If !lvldFret .And. lPed .And. Len(Trim(aNFEDanfe[14]))>0   //Tem PC vinculado a Nota e Tipo de Frete esta preenchido
    	lRet:=.F.
    EndIf
EndIf

If !lRet
	Help('',1,'A103FRETE')
EndIf

RestArea(aArea)
Return (lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103ValEstNegºAutor  ³TOTVS		     º Data ³  25/02/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida se irá permitir estoque negativo					  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ValEstNeg(cProd,cAliasSd1)
Local aArea	     := GetArea()
Local lMT103ENEG := ExistBlock("MT103ENEG")
Local lRet	     := .F.

//Ponto de Entrada que permite o saldo negativo mesmo o parâmetro MV_ESTNEG estando como N
//Produto não poderá ter lote ou localizacao
If lMT103ENEG
	If !(Rastro(cProd) .And. !Localiza(cProd))
		lRet:=ExecBlock("MT103ENEG",.F.,.F.,{cAliasSD1})
		If ValType(lRet)<>"L"
			lRet:=.F.
		EndIf
	EndIf
Else
	Aviso(STR0018,STR0019 + AllTrim((cAliasSD1)->D1_COD)+"/"+(cAliasSD1)->D1_LOCAL + STR0023 + AllTrim(Str(nSaldoB2))+") ",{STR0025}) //"Atencao" //"O Saldo do Prod/Loc "###" ficara negativo apos a Exclusao ("###"Aborta"
	lRet:=.F.
EndIf

RestArea(aArea)
Return (lRet)
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103CompDanfeºAutor  ³TOTVS		     º Data ³  13/06/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Campos complementares aba DANFE	             			  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103CompDanfe()
Local aCompDanfe:={}

aCompDanfe:=execblock("MT103DCF",.F.,.F.,{INCLUI,ALTERA,L103VISUAL,aDanfeComp})
If Valtype(aCompDanfe)=="A"
	aDanfeComp:=aClone(aCompDanfe)
EndIf

Return .T.

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A103LockPC ºAutor  ³TOTVS              º Data ³  30/08/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Bloqueia Pedidos utilizados no Acols				    	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                               		      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103LockPC(aCabec, aItens)
Local nPed		:= aScan(aCabec,{|x| Alltrim(x[2]) == "D1_PEDIDO"})
Local nItPed	:= aScan(aCabec,{|x| Alltrim(x[2]) == "D1_ITEMPC"})
Local nXp		:= 0
Local nBlq		:= 0
Local cUnico   := ""
Local lRet		:= .T.
Local aAreaAtu	:= GetArea()

aRegsLock:={}

If nPed>0 .And. nItPed>0 .And. Len(aItens)>0
	DbSelectArea("SX2")
	DbSetOrder(1)
	DbSeek("SC7")
	If !Eof()
		cUnico:= Alltrim(X2_UNICO)
	EndIf

	If Len(AllTrim(cUnico))>0
		DbSelectArea("SC7")
		DbSetOrder(1)
		For nXp:=1 to Len(aItens)
			If !Empty(aItens[nXp][nPed]) .And. !Empty(aItens[nXp][nItPed])
				If DbSeek(xFilial("SC7")+aItens[nXp][nPed]+aItens[nXp][nItPed])
					If !MultLock("SC7",{&cUnico},1,.F.,.T.)
						nBlq++
						Exit
					Else
						aaDD(aRegsLock,{"SC7",Recno()})
						If DbSeek(xFilial("SC7")+aItens[nXp][nPed]+aItens[nXp][nItPed])
							If	!(MA103CkAIC(SC7->C7_FORNECE,SC7->C7_LOJA,SC7->C7_PRODUTO))
								If ( !(C7_QUANT-C7_QUJE-IIF(l103Class,0,C7_QTDACLA))>0 .Or. C7_RESIDUO$'S' .Or. C7_ENCER$'E' ) .And. C7_ORIGEM <> 'EICPO400'
									Help(" ",1,"QTDLIBMAI")
									lRet := .F.
									nBlq++
									Exit
								EndIf
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
	   Next nXp
	EndIf
EndIf

If nBlq>0
	A103UnlkPC()
	lRet := .F.
EndIf

RestArea(aAreaAtu)

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A103LockPC ºAutor  ³TOTVS              º Data ³  30/08/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Desbloqueia Pedidos utilizados no Acols			    	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                               		      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103UnlkPC
	SC7->(MsUnLockAll())
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A103ChamaHelp ºAutor  ³TOTVS           º Data ³  03/10/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para exibir os Helps do campo F1_CHVNFE ao finalizarº±±
±±º          | o documento de entrada                                     º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                               		      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ChamaHelp()

Local lDigChv := GetNewPar("MV_DCHVNFE",.F.)
Local lRetorno 	  := .T.


DbselectArea("SX3")
DbSetOrder(2)

If lDigChv
	If (cFormul == "N" .and. AllTrim(cEspecie) == "SPED") .or. (cFormul == "N" .and. AllTrim(cEspecie) == "CTE")
		If Type("aNFEDanfe[13]")<>"U"
			M->F1_CHVNFE 	:= IIF(!EMPTY(M->F1_CHVNFE),M->F1_CHVNFE,aNFEDanfe[13])
		EndIf
		If SX3->(dbSeek("F1_CHVNFE") .And. SX3->X3_VISUAL == "V")
		 	Help(" ",1,"CHVALTERAR")
   			lRetorno := .F.
   		ElseIf Empty(M->F1_CHVNFE)
			Help(" ",1,"DCHVNFE")
			lRetorno := .F.
		ElseIf len(Alltrim(M->F1_CHVNFE)) < 44
			Help(" ",1,"CHVMENOR")
			lRetorno := .F.
		EndIf
         EndIf
EndIf

Return lRetorno

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A103ConsNfeSef ºAutor  ³TOTVS          º Data ³  03/10/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Consulta a chave da NFe digitada na Sefaz                  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                               		      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ConsNfeSef(cVarChvNfe)

Local lConChv 	:= GetNewPar("MV_CHVNFE",.F.)
Local lDigChv 	:= GetNewPar("MV_DCHVNFE",.F.)
Local lBlqChv		:= GetNewPar("MV_BCHVNFE",.F.)
Local lRet	  	:= .F.
Local cURL      := PadR(GetNewPar("MV_SPEDURL","http://"),250)
Local cIdEnt   	:= ""
Local cChaveNFe := ""
Local cCodRet	:= "Codigo de retorno: "
Local cMensRet  := "Mensagem de retorno: "
Local cProt		:= "Protocolo: "
Local cVar		:= "M->F1_CHVNFE"
Local cChvAuto	:= ""
Local nPos			:= ""

local lUsaGesEmp	:= .F.
local lEnvCodEmp	:= .F.

Private oWS

Default cVarChvNfe	:= ""

If (lDigChv .and. cFormul == "N" .and. AllTrim(cEspecie) == "SPED") .Or. (lDigChv .and. cFormul == "N" .and. AllTrim(cEspecie) == "CTE")
	If Empty(cVarChvNfe)
		M->F1_CHVNFE 	:= &(ReadVar())
		cChaveNFe  		:= M->F1_CHVNFE
	Else
		cChaveNFe  		:= cVarChvNfe
	EndIF

	If Type("l103Auto") == "U"
		Private l103Auto := .F.
	EndIf

	If l103Auto
		nPos := aScan(aAutoCab,{|x| AllTrim(x[1]) == "F1_CHVNFE"})
		If nPos > 0
			cChvAuto := aAutoCab[nPos,2]
		Endif

		If !Empty(cChvAuto) .And. cChvAuto <> cChaveNFe
			M->F1_CHVNFE	:= cChvAuto
			cChaveNFe		:= M->F1_CHVNFE
		Endif
	Endif

    If lConChv
    	If IsReady(cURL)
	    	lEnvCodEmp	:= getNewPar("MV_ENVCDGE",.F.)
	    	lUsaGesEmp	:= iif(findFunction("FWFilialName") .And. findFunction("FWSizeFilial") .And. FWSizeFilial() >= 2,.T.,.F.)

	    	//Obtem o codigo da entidade
			oWS := WsSPEDAdm():New()
			oWS:cUSERTOKEN := "TOTVS"
			oWS:oWSEMPRESA:cCNPJ       := IIF(SM0->M0_TPINSC==2 .Or. Empty(SM0->M0_TPINSC),SM0->M0_CGC,"")
			oWS:oWSEMPRESA:cCPF        := IIF(SM0->M0_TPINSC==3,SM0->M0_CGC,"")
			oWS:oWSEMPRESA:cIE         := SM0->M0_INSC
			oWS:oWSEMPRESA:cIM         := SM0->M0_INSCM
			oWS:oWSEMPRESA:cNOME       := SM0->M0_NOMECOM
			oWS:oWSEMPRESA:cFANTASIA   := iif(lUsaGesEmp,FWFilialName(),Alltrim(SM0->M0_NOME))
			oWS:oWSEMPRESA:cENDERECO   := FisGetEnd(SM0->M0_ENDENT)[1]
			oWS:oWSEMPRESA:cNUM        := FisGetEnd(SM0->M0_ENDENT)[3]
			oWS:oWSEMPRESA:cCOMPL      := FisGetEnd(SM0->M0_ENDENT)[4]
			oWS:oWSEMPRESA:cUF         := SM0->M0_ESTENT
			oWS:oWSEMPRESA:cCEP        := SM0->M0_CEPENT
			oWS:oWSEMPRESA:cCOD_MUN    := SM0->M0_CODMUN
			oWS:oWSEMPRESA:cCOD_PAIS   := "1058"
			oWS:oWSEMPRESA:cBAIRRO     := SM0->M0_BAIRENT
			oWS:oWSEMPRESA:cMUN        := SM0->M0_CIDENT
			oWS:oWSEMPRESA:cCEP_CP     := Nil
			oWS:oWSEMPRESA:cCP         := Nil
			oWS:oWSEMPRESA:cDDD        := Str(FisGetTel(SM0->M0_TEL)[2],3)
			oWS:oWSEMPRESA:cFONE       := AllTrim(Str(FisGetTel(SM0->M0_TEL)[3],15))
			oWS:oWSEMPRESA:cFAX        := AllTrim(Str(FisGetTel(SM0->M0_FAX)[3],15))
			oWS:oWSEMPRESA:cEMAIL      := UsrRetMail(RetCodUsr())
			oWS:oWSEMPRESA:cNIRE       := SM0->M0_NIRE
			oWS:oWSEMPRESA:dDTRE       := SM0->M0_DTRE
			oWS:oWSEMPRESA:cNIT        := IIF(SM0->M0_TPINSC==1,SM0->M0_CGC,"")
			oWS:oWSEMPRESA:cINDSITESP  := ""
			oWS:oWSEMPRESA:cID_MATRIZ  := ""

			if( lUsaGesEmp .and. lEnvCodEmp )
				oWS:oWSEMPRESA:CIDEMPRESA:= FwGrpCompany()+FwCodFil()
			endif

			oWS:oWSOUTRASINSCRICOES:oWSInscricao := SPEDADM_ARRAYOFSPED_GENERICSTRUCT():New()
			oWS:_URL := AllTrim(cURL)+"/SPEDADM.apw"

			If oWs:ADMEMPRESAS()
				cIdEnt  := oWs:cADMEMPRESASRESULT
			Else
				Aviso("SPED",IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3)),{"OK"},3)
			EndIf

			oWs:= WsNFeSBra():New()
			oWs:cUserToken   := "TOTVS"
			oWs:cID_ENT      := cIdEnt
			ows:cCHVNFE		 := cChaveNFe
			oWs:_URL         := AllTrim(cURL)+"/NFeSBRA.apw"

			If oWs:ConsultaChaveNFE()
				If Type ("oWs:oWSCONSULTACHAVENFERESULT:cPROTOCOLO") == "U" .OR. Empty (oWs:oWSCONSULTACHAVENFERESULT:cPROTOCOLO)
					If AllTrim(oWs:oWSCONSULTACHAVENFERESULT:cCODRETNFE) == "731" .or. AllTrim(oWs:oWSCONSULTACHAVENFERESULT:cCODRETNFE) == "526"
						If MsgNoYes(cCodRet+oWs:oWSCONSULTACHAVENFERESULT:cCODRETNFE+CRLF+;
									cMensRet+oWs:oWSCONSULTACHAVENFERESULT:cMSGRETNFE+CRLF+;
									"Verificar se o Ano-Mês da Chave de Acesso está com atraso"+CRLF+;
									"superior a 6 meses em relação ao Ano-Mês atual."+CRLF+CRLF+CRLF+;
									"Deseja inserir a chave mesmo assim?")
							lRet := .T.
						else
							M->F1_CHVNFE := ""
							lRet := .F.
						endIf
					else
						MsgAlert("A chave digitada não foi encontrada na Sefaz, favor verificar")
						M->F1_CHVNFE := ""
						lRet := .F.
					endIf
				Else
					lRet := .T.
					MsgAlert(cCodRet+oWs:oWSCONSULTACHAVENFERESULT:cCODRETNFE+CRLF+;
					         cMensRet+oWs:oWSCONSULTACHAVENFERESULT:cMSGRETNFE+CRLF+;
					         cProt+oWs:oWSCONSULTACHAVENFERESULT:cPROTOCOLO)
				EndIf
			Else
				Aviso("SPED",IIf(Empty(GetWscError(3)),GetWscError(1),GetWscError(3)),{"OK"},3)
				If len(Alltrim(M->F1_CHVNFE)) > 0 .and. len(Alltrim(M->F1_CHVNFE)) < 44
					If GetRemoteType() == -1 //Job
						lRet := .T.
					Else
						If MsgNoYes("A chave informada é menor que o permitido e impossibilita a consulta na Sefaz."+CRLF+CRLF+;
									"Deseja APAGAR o conteúdo do campo para inserir uma nova chave?")
							M->F1_CHVNFE := ""
							lRet := .F.  //Limpa o campo caso tenha uma chave menor
						Else
							lRet := .T.
						EndIf
					Endif
				ElseIf    lBlqChv .And. !Empty(GetWscError(3)) //"Falha no retorno da SEFAZ"
				  	M->F1_CHVNFE := ""
					lRet := .F.
				Else
					lRet := .T.
				EndIf
			EndIf
		Else
			Help(" ",1,"TSSINATIVO")
			lRet := .F.
		EndIf
	Else
		lRet := .T.
	EndIf
Else
	lRet := .T.
EndIf

Return  lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ IsReady ºAutor  ³TOTVS                 º Data ³  03/10/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Verifica se a conexao com o TSS pode ser estabelecida      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                               		      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function IsReady(cURLTss)

Local oWS
Local lRetorno := .F.

If !Empty(cURLTss) .And. !PutMV("MV_SPEDURL",cURLTss)
	RecLock("SX6",.T.)
	SX6->X6_FIL     := xFilial( "SX6" )
	SX6->X6_VAR     := "MV_SPEDURL"
	SX6->X6_TIPO    := "C"
	SX6->X6_DESCRIC := "URL SPED NFe"
	MsUnLock()
	PutMV("MV_SPEDURL",cURL)
EndIf

SuperGetMv() //Limpa o cache de parametros - nao retirar

DEFAULT cURLTss  := PadR(GetNewPar("MV_SPEDURL","http://"),250)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o servidor da Totvs esta no ar                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
oWs := WsSpedCfgNFe():New()
oWs:cUserToken := "TOTVS"
oWS:_URL := AllTrim(cURLTss)+"/SPEDCFGNFe.apw"

If oWs:CFGCONNECT()
	lRetorno := .T.
EndIf

Return lRetorno


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ A103VldEsp ºAutor  ³Leandro Paulino    º Data ³  28/12/11  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida as especies permitidas quando a integração com o    º±±
±±º			 ³	TOTVSGEF estiver habilitada                           	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                               		      º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function A103VldEsp ()
Local lRet			:= .T.

If ("CTR" $ cEspecie .Or. "CTE" $ cEspecie .Or. "NFST" $ cEspecie ) .And. (!( FWIsInCallStack( "FWUMESSAGE" ) .OR. FWIsInCallStack( "FWFORMEAI" ) ))
	If MsgYesNo(STR0121 + Chr(13) + STR0122,STR0018) //"Com a integração ativa entre o ERP Protheus e o TOTVSGFE, os documentos de Transporte devem ser lançados pelo TOTVSGFE! "/"Confirma o lançamento? ")
	Else
		lRet := .F.
	EndIF
EndIf

Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103ConsCTEºAutor  ³TOTVS S.A.		 º Data ³  29/12/2011 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Consiste o Tipo CTE		   						          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA103                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ConsCTE(cTpCTE)
Local lRet :=.T.

If Type("cEspecie")<>"U" .And. AllTrim(cEspecie) == "CTE"
	If Empty(trim(cTPCTE))
	    Aviso(STR0014 + " " + RetTitle("F1_TPCTE"),STR0118,{STR0038})
		lRet := .F.
	EndIf
EndIf
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³ MATA103X_V ³ Autor ³ TOTVS S.A           ³ Data ³ 04/01/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao utilizada para verificar a ultima versao do fonte   ³±±
±±³			 ³ MATA103X aplicado no rpo do cliente, verificando assim a   ³±±
±±³			 ³ necessidade de uma atualizacao neste fonte.		    	  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ EST/PCP/FAT/COM	                                          ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA103X_V
Local nRet := 20120104 // 04 de janeiro de 2012
Return nRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³M103GrvSE5³ Autor ³ Aline S Damasceno     ³ Data ³ 26/07/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Gravacao de registros do SE5 na exclusao C.Pagar			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ F050GrvSE5()		 										  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA103										    		  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MT103GrvSE5()
Local aAreaGrv	:= GetArea()
Local oModelMov 	:= NIL
Local oSubFK5
Local oSubFKA
Local oSubFK2
Local cCamposE5	:= ""
Local lRet 		:= .T.

//Limpa chaves de relacionamento (SE5)
SE5->(dbSetOrder(7))
If SE5->(dbSeek(xFilial("SE5")+SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)))
	While SE5->(!Eof()) .And. xFilial("SE5") == SE5->E5_FILIAL .And. ;
			SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_FORNECE+E5_LOJA) == ;
			SE2->(E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO+E2_FORNECE+E2_LOJA)

		cCamposE5 := ""

		cCamposE5 += "{"
		cCamposE5 += "{'E5_KEY'		, SE5->(E5_PREFIXO+E5_NUMERO+E5_PARCELA+E5_TIPO+E5_FORNECE+E5_LOJA)	}"
		cCamposE5 += ",{'E5_PREFIXO', ''																			}"
		cCamposE5 += ",{'E5_NUMERO'	, ''																			}"
		cCamposE5 += ",{'E5_PARCELA', ''																			}"
		cCamposE5 += ",{'E5_TIPO'	, ''																			}"
		//Manda o campo LA com o valor de 2 Caracteres, para manter a gravação original na E5
		cCamposE5 += ",{'E5_LA'		, 'S"  + SubStr( SE5->E5_LA, 2, 1 ) + "'										}"
		cCamposE5 += "}"

		If SE5->E5_TABORI == "FK5"
			oModelMov := FWLoadModel("FINM030") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
			oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5
			oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

			//Posiciona a FKA com base no IDORIG da SE5 posicionada
			oSubFKA := oModelMov:GetModel( "FKADETAIL" )
			oSubFKA:SeekLine( { {"FKA_IDORIG", SE5->E5_IDORIG } } )

			//Dados Contábeis
			oSubFK5 := oModelMov:GetModel("FK5DETAIL")
			oSubFK5:SetValue( "FK5_LA", "S" ) //Salva apenas 1 caractere (S ou N) nas FKs

			If oModelMov:VldData()
				oModelMov:CommitData()
		   		oModelMov:DeActivate()
			Else
				lRet := .F.
				cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[6])
				Help( ,,"M030VALID",,cLog, 1, 0 )
    		Endif
		ElseIf SE5->E5_TABORI == "FK2"
			oModelMov := FWLoadModel("FINM020") //Recarrega o Model de movimentos para pegar o campo do relacionamento (SE5->E5_IDORIG)
			oModelMov:SetOperation( MODEL_OPERATION_UPDATE ) //Alteração
			oModelMov:Activate()
			oModelMov:SetValue( "MASTER", "E5_GRV", .T. ) //Habilita gravação de SE5
			oModelMov:SetValue( "MASTER", "E5_CAMPOS", cCamposE5 ) //Informa os campos da SE5 que serão gravados indepentes de FK5

			//Posiciona a FKA com base no IDORIG da SE5 posicionada
			oSubFKA := oModelMov:GetModel( "FKADETAIL" )
			oSubFKA:SeekLine( { {"FKA_IDORIG", SE5->E5_IDORIG } } )

			//Dados Contábeis
			oSubFK2 := oModelMov:GetModel("FK2DETAIL")
			oSubFK2:SetValue( "FK2_LA", "S" ) //Salva apenas 1 caractere (S ou N) nas FKs

			If oModelMov:VldData()
				oModelMov:CommitData()
		   		oModelMov:DeActivate()
			Else
				lRet := .F.
				cLog := cValToChar(oModelMov:GetErrorMessage()[4]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[5]) + ' - '
				cLog += cValToChar(oModelMov:GetErrorMessage()[6])
				Help( ,,"M020VALID",,cLog, 1, 0 )
	    	Endif
		EndIf

	SE5->(dbSkip())
	Enddo
Endif

RestArea(aAreaGrv)
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FillCTBEntºAutor  ³ Andre Anjos		 º Data ³ 02/08/12    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Inicaliza campos das entidades contabeis de acordo com a   º±±
±±º          ³ origem.                                                    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA103                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function FillCTBEnt(cOrigem,nItem)
Local aCTBEnt := CTBEntArr()
Local nX	  := 0

For nX := 1 To Len(aCTBEnt)
	If GDFieldPos("D1_EC"+aCTBEnt[nX]+"CR",aHeader) > 0 .And. (cOrigem)->(FieldPos(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"CR")) > 0
		aCols[nItem,GDFieldPos("D1_EC"+aCTBEnt[nX]+"CR")] := (cOrigem)->&(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"CR")
	EndIf
	If GDFieldPos("D1_EC"+aCTBEnt[nX]+"DB",aHeader) > 0 .And. (cOrigem)->(FieldPos(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"DB")) > 0
		aCols[nItem,GDFieldPos("D1_EC"+aCTBEnt[nX]+"DB")] := (cOrigem)->&(Substr(cOrigem,2)+"_EC"+aCTBEnt[nX]+"DB")
	EndIf
Next nX

Return

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    |ISSFldDiv ³Autor  ³ Vitor Felipe          ³ Data ³06/06/2012 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Desc.     ³ Rotina tratamento do folder para informacoes do ISS e INSS. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oDlg: Objeto da Janela que sera disponibilizado os Get.     ³±±
±±³          ³ aPosGet: Array com as posicoes dos gets da NF-e.            ³±±
±±³          ³ aObjetos: Codeblock para atualizaco dos dados do Folder.    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                      ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Fiscal.                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ISSFldDiv(oDlg,aPosGet,aObjetos,aInfISS,aFldCBAtu,nInfISS)

Local nrFolder:= Len(ofolder:adialogs)
Local aCombo1 := {STR0126,STR0127} //"1=Sim","2=Nao"
Local nX      := 0
Local nY	  := 0
Local lEditMun:= .F.

PRIVATE M->F1_ESTPRES := ""

@ 04,03 TO 23 ,630 LABEL "" OF oDlg PIXEL
@ 05,aPosGet[1,1] SAY STR0128 Of oDlg PIXEL SIZE 50,50	// "Dados do Município:"

@ 010,aPosGet[1,2]    SAY STR0131 OF oDlg PIXEL SIZE 100,100 //"UF:"
@ 009,aPosGet[1,2]+15 MSGET aObjetos[01,03] VAR aInfISS[01,03] PICTURE X3Picture("CC2_EST") ;
WHEN !l103Visual ;
VALID ExistCpo("SX5","12" + aInfISS[01,03]) .And. Eval( {|| M->F1_ESTPRES := aInfISS[01,03] , lEditMun:= .T. } ) .And. ;
MaFisAlt("NF_UFPREISS",aInfISS[01,03],) .And. aObjetos[1,1]:SetFocus() ;
F3 "12" OF oDlg PIXEL SIZE 10,08 HASBUTTON

@ 010,aPosGet[1,10]+10 SAY STR0129 Of oDlg PIXEL SIZE 100,100 //"Codigo Mun:"
@ 009,aPosGet[1,10]+45 MSGET aObjetos[01,01] VAR aInfISS[01,01] PICTURE PesqPict('SA2','A2_COD_MUN');
WHEN !l103Visual .And. lEditMun  ;
VALID A103DescMun( aInfISS[01,01] , @aObjetos[01,02] , @aInfISS[01,02] , aInfISS[01,03] ) .And. ;
MaFisAlt("NF_CODMUN",aInfISS[01,01],) ;
F3 "CC2SF1" OF oDlg PIXEL SIZE 30,08 HASBUTTON

@ 010,aPosGet[1,10]+088 SAY STR0130 Of oDlg PIXEL SIZE 100,100 //"Desc. Mun:"
@ 009,aPosGet[1,10]+115 MSGET aObjetos[01,02] VAR aInfISS[01,02] PICTURE X3Picture("CC2_MUN");
WHEN .F. OF oDlg PIXEL SIZE 60,08 HASBUTTON

@ 10,aPosGet[1,5] SAY STR0132 Of oDlg PIXEL SIZE 100,100	   		// "Ded Mat:"
@ 09,aPosGet[1,13] MSCOMBOBOX aObjetos[01,04] VAR aInfISS[01,04];
	ITEMS aCombo1 SIZE 25,08;
	WHEN .F.;
	OF oDlg PIXEL
@ 10,aPosGet[1,7] SAY STR0133 Of oDlg PIXEL SIZE 100,100		// "Ded Serv:"
@ 09,aPosGet[1,14] MSCOMBOBOX aObjetos[01,05] VAR aInfISS[01,05];
	ITEMS aCombo1 SIZE 25,08;
	WHEN .F.;
	OF oDlg PIXEL
@ 10,aPosGet[1,8] SAY STR0134 Of oDlg PIXEL SIZE 100,100	   		// "%Ded. Mat.:"
@ 09,aPosGet[1,15] MSGET aObjetos[01,06] VAR aInfISS[01,06] PICTURE X3Picture("CC2_PERMAT");
SIZE 35,08 HASBUTTON;
WHEN .F.;
OF oDlg PIXEL
@ 10,aPosGet[1,9] SAY STR0135 Of oDlg PIXEL SIZE 100,100		// "%Ded. Ser.:"
@ 09,aPosGet[1,16] MSGET aObjetos[01,07] VAR aInfISS[01,07] PICTURE X3Picture("CC2_PERSER");
	SIZE 35,08 HASBUTTON;
	WHEN .F.;
	OF oDlg PIXEL

@ 24,03 TO 43 ,630 LABEL "" OF oDlg PIXEL
@ 25,aPosGet[1,1] SAY STR0136 Of oDlg PIXEL SIZE 100,100		// "ISS Apurado:"
@ 30,aPosGet[1,2] SAY STR0137 Of oDlg PIXEL SIZE 100,100		// "Valor dos Sericos:"
@ 29,aPosGet[1,10] MSGET aObjetos[02,01] VAR aInfISS[02,01];
	PICTURE X3Picture("D1_TOTAL") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON
@ 30,aPosGet[1,3] SAY STR0138 Of oDlg PIXEL SIZE 100,100		// "Sericos:"
@ 29,aPosGet[1,11] MSGET aObjetos[02,02] VAR aInfISS[02,02] ;
	PICTURE X3Picture("D1_ABATISS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON
@ 30,aPosGet[1,4] SAY STR0139 Of oDlg PIXEL SIZE 100,100		// "Materiais:"
@ 29,aPosGet[1,17] MSGET aObjetos[02,03] VAR aInfISS[02,03] ;
	PICTURE X3Picture("D1_ABATMAT") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON
@ 30,aPosGet[1,5] SAY STR0140 Of oDlg PIXEL SIZE 100,100	// "B. Cálculo:"
@ 29,aPosGet[1,18] MSGET aObjetos[02,04] VAR aInfISS[02,04] ;
	PICTURE X3Picture("D1_BASEISS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON
@ 30,aPosGet[1,6] SAY STR0141 Of oDlg PIXEL SIZE 100,100		// "Val. ISS:"
@ 29,aPosGet[1,19] MSGET aObjetos[02,05] VAR aInfISS[02,05] ;
	PICTURE X3Picture("D1_VALISS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON

@ 44,03 TO 63 ,630 LABEL "" OF oDlg PIXEL
@ 45,aPosGet[1,1] SAY STR0142 Of oDlg PIXEL SIZE 100,100	// "INSS Apurado:"
@ 50,aPosGet[1,2] SAY STR0143 Of oDlg PIXEL SIZE 100,100	// "Valor Serviço:"
@ 49,aPosGet[1,10] MSGET aObjetos[03,01] VAR aInfISS[03,01] ;
	PICTURE X3Picture("D1_TOTAL") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON

@ 50,aPosGet[1,3] SAY STR0144 Of oDlg PIXEL SIZE 100,100		// "Recolhido:"
@ 49,aPosGet[1,11] MSGET aObjetos[03,02] VAR aInfISS[03,02] ;
	PICTURE X3Picture("D1_ABATINS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON

@ 50,aPosGet[1,4] SAY STR0138 Of oDlg PIXEL SIZE 100,100		// "Servicos:"
@ 49,aPosGet[1,17] MSGET aObjetos[03,03] VAR aInfISS[03,03] ;
	PICTURE X3Picture("D1_AVLINSS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON
@ 50,aPosGet[1,5] SAY STR0146 Of oDlg PIXEL SIZE 100,100	// "B. Cálculo:"
@ 49,aPosGet[1,18] MSGET aObjetos[03,04] VAR aInfISS[03,04] ;
	PICTURE X3Picture("D1_BASEINS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON
@ 50,aPosGet[1,6] SAY STR0147 Of oDlg PIXEL SIZE 100,100		// "Val. INSS:"
@ 49,aPosGet[1,19] MSGET aObjetos[03,05] VAR aInfISS[03,05] ;
	PICTURE X3Picture("D1_VALINS") ;
	OF oDlg PIXEL ;
	WHEN .F. HASBUTTON

aFldCBAtu[nInfISS] := {|| ISSRFldTot(aObjetos,@aInfISS)}

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |ISSRFldTotºAutor  ³ Vitor Felipe       º Data ³ 19/06/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Roda validacoes e atualiza para o ISS x Municipio.         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºParametros³ aObjetos: Array contento os Objetos do Folder.             º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function ISSRFldTot(aObjetos,aInfISS)

Local nX		:= 0
Local nY		:= 0
Local nPosCod 	:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_COD"} )

If Len(aCols) > 0 .And. !Empty(aCols[01,nPosCod])

	aInfISS[1,1] := MaFisRet(,"NF_CODMUN")
	aInfISS[1,3] := MaFisRet(,"NF_UFPREISS")

	//BUSCA O MUNICIPIO NA TABELA CC2 (MUNICIPIOS) E CARREGA O RESTANTE DOS CAMPOS
	dbSelectArea("CC2")
	dbSetOrder(1)
	If CC2->(MsSeek(xFilial("CC2")+aInfISS[1,3]+aInfISS[1,1]))
		aInfISS[1,2] := AllTrim(CC2->CC2_MUN)
		aInfISS[1,4] := CC2->CC2_MDEDMA
		aInfISS[1,5] := CC2->CC2_MDEDSR
		aInfISS[1,6] := CC2->CC2_PERMAT
		aInfISS[1,7] := CC2->CC2_PERSER
	EndIf

	If INCLUI .Or. ALTERA .Or. l103Visual
		aInfISS[2,2] := 0 ; aInfISS[2,3] := 0 ; aInfISS[3,2] := 0 ; aInfISS[3,3] := 0
		//ATUALIZA OS ARRAYS DO FOLDER - ISS
		aInfISS[2,1] := MaFisRet(,"NF_TOTAL")		//Valor Total
		aInfISS[2,2] := MaFisRet(,"NF_ISSABSR")	//Abatimentos de Sericos
		aInfISS[2,3] := MaFisRet(,"NF_ISSABMT")	//Abatimentos de Materiais
		aInfISS[2,4] := MaFisRet(,"NF_BASEISS")	//Base do ISS
		aInfISS[2,5] := MaFisRet(,"NF_VALISS")		//Valor do ISS
		//ATUALIZA OS ARRAYS DO FOLDER - INSS
		aInfISS[3,1] := MaFisRet(,"NF_TOTAL")		//Valor Total
		aInfISS[3,2] := MaFisRet(,"NF_INSABSR")	//Abatimentos de Sericos
		aInfISS[3,3] := MaFisRet(,"NF_INSABMT")	//Abatimentos de Materiais
		aInfISS[3,4] := MaFisRet(,"NF_BASEINS")	//Base de Calculo do INSS
		aInfISS[3,5] := MaFisRet(,"NF_VALINS")		//Valor do INSS
	EndIf

	//Atualiza os Objetos.
	For nX := 1 to Len(aObjetos)
		For nY := 1 To Len(aObjetos[nX])
			aObjetos[nX,nY]:Refresh()
		Next nY
	Next nX

	If aObjetos[01,03] <> Nil
		aObjetos[01,03]:lReadOnly := !MaFisFound("IT",1)
		aObjetos[01,03]:Refresh()
	EndIf

EndIF

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³ A103VLDITO ³Autor  ³ Carlos Capeli       ³ Data ³ 29/10/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para validar os itens da nota fiscal original	na	  ³±±
±±³          ³ classificacao de uma nota de devolucao                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A103VLDITO()	 										      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA103X										    		  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103VLDITO()

Local nPosItOri	:= 0
Local nX		:= 0
Local cItem		:= ""
local lClass	:= Iif(Type('l103Class')=='L',l103Class,.F.)
Local nBkp		:= n

If lClass
	If (nPosItOri := aScan(aHeader,{|x| Trim(x[2])=="D1_ITEMORI"} )) > 0
		For nX := 1 To Len(aCols)
			cItem := aCols[nX][nPosItOri]
			n := nX
			If !Empty(cItem)
				A103ItDev(cItem)
			EndIf
		Next nX
		n := nBkp
	EndIf
EndIf

Return

/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³a103RatPCnf| Autor ³Aline S Damasceno      ³ Data ³ 08/01/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para a funcao AdmRatExt e refresh no       ³±±
±±³          ³ objeto.  							                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oGetDad = Objeto MSSelect				                   ³±±
±±³ 	     ³ aHeadSde= Cabecalho SDE  				                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA103                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function a103RatPCnf(aHeadSde,oGetDad)

 AdmRatExt(aHeadSde,oGetDad:aCols,{ |x,y,z,w| NfeCarCC(x,y,@z,w) })

If ValType(oGetDad) == "O"
	oGetDad:oBrowse:Refresh()
EndIf

Return .T.

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A103CODRSEF³ Autor ³ TOTVS                 ³ Data ³ 01/02/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Busca código de retorno SEFAZ da Nota Original			   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A103CODRSEF()	 										   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA103										    		   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103CODRSEF(aHeader,aCols)
Local aAreaSF3	:= SF3->(GetArea())
Local nPosNfOri := aScan(aHeader,{|x| AllTrim(x[2]) == "D1_NFORI"} )
Local nPosSerOri:= aScan(aHeader,{|x| AllTrim(x[2]) == "D1_SERIORI"} )
Local lRet		:= .T.

// Verifica se a nota original foi transmitida à SEFAZ (F3_CODRSEF = 100), caso contrário não permite incluir a devolução
If nPosNfOri > 0 .And. nPosSerOri > 0
	DbSelectArea("SF3")
	DbSetOrder(4)
	If MsSeek(xFilial("SF3")+cA100For+cLoja+aCols[1][nPosNfOri]+aCols[1][nPosSerOri])
		If SF3->F3_CODRSEF!="100"
			Aviso(STR0018,STR0148,{STR0038})
			lRet := .F.
		EndIf
	EndIf
EndIf

RestArea(aAreaSF3)
Return lRet

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o	 ³A103VencSE2³ Autor ³ Carlos Capeli         ³ Data ³ 13/10/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Recalcula IR ao alterar vencimento do título na aba Duplic. ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe	 ³ A103VencSE2()	 										   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso		 ³ MATA103										    		   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A103VencSE2()

Local cCampo	:= ReadVar()
Local nPosIrrf	:= aScan(aHeader,{|x| AllTrim(x[2])=="E2_IRRF"})
Local nPosVenc	:= aScan(aHeader,{|x| AllTrim(x[2])=="E2_VENCTO"})
Local lRet		:= .T.
Private aIrrfNew:= {}

If cCampo == "M->E2_VENCTO" .And. nPosIrrf > 0 .And. N == 1
	If Type("bIRRefresh")=="B"
		Eval(bIRRefresh)
	EndIf
	If Len(aIrrfNew) >= 1
		aCols	:= aIrrfNew
		dNewVenc:= aIrrfNew[1][nPosVenc]
	EndIf
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA103TROPºAutor  ³Microsiga           º Data ³  08/24/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funçao para automatizar digitacao de tipos de operacoes na º±±
±±º          ³ Classificacao da Nota de Entrada                           º±±
±±º          ³                                                            º±±
±±º          ³ Parametro: nItem - Linha do acols que esta posicionado     º±±
±±º          ³                                                            º±±
±±º          ³ Incluido na validacao do campo D1_OPER                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTA103TROP(nItem)

Local nPosOpe	:= 0
Local nPosTes	:= 0
Local nPosCod	:= 0
Local nVezes	:= 0
Local lValOp	:= IIf( Type('mv_par22')=='N' .And. mv_par22 == 1, .T., .F. )
Local cTpOpAtu	:= M->D1_OPER
Local lTrocAll	:= .F.
Local lAtualiz	:= .F.
Local lFirst	:= .T.
Local nItemOri	:= n

Default nItem	:= 0

If Type('l103Class')=="L" .And. l103Class .And. lValOp .And. nItem >= 1

	If nItem < Len(aCols) .and. ( nPosOpe:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'D1_OPER'}) ) > 0
    	cTpOpAtu	:= M->D1_OPER
		nPosTes:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'D1_TES' })
		nPosCod:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'D1_COD' })

		For nVezes	:= nItem to Len(aCols)

			// Se está na linha do item que está sendo digitado, pula
			If nVezes == nItemOri
				Loop
			EndIf

			// Substituo o valor do item do aCols para atualizaçoes na função MaTesInt()
			n	:= nVezes

			// Se é um item válido
			If !aCols[nVezes][Len(aHeader)+1]

				// Se não sobrepõe todos e está preenchido, confirma substituição
				If !lTrocAll .and. !Empty(aCols[nVezes][nPosOpe])
            		If lFirst
	            		lTrocAll := IIf( nItemOri < Len(aCols), MsgYesNo(STR0152+cTpOpAtu+'?', STR0153), .F. )
	            		lFirst	:= .F.
    				EndIf
				// Se não está preenchido ou solicitou trocar todos
				Else
					lAtualiz := .T.

				EndIf

				// Realiza atualização
				If lAtualiz	.or. lTrocAll
			    	aCols[nVezes][nPosOpe]	:= cTpOpAtu
					aCols[nVezes][nPosTes]	:= MaTesInt(1,aCols[nVezes][nPosOpe],cA100For,cLoja,If(cTipo$"DB","C","F"),aCols[nVezes][nPosCod],"D1_TES")
					lAtualiz := .F.
				EndIf

				// Se já perguntou e não irá trocar os demais, sai do loop
           		If !lFirst .and. !lTrocAll
           			Exit
           		EndIf

			EndIf

		Next

	EndIf

EndIf
n	:= nItemOri
Return(.T.)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA103OPERºAutor  ³Microsiga           º Data ³  08/24/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funcao para automatizar digitacao de tipos de operacoes na º±±
±±º          ³ Digitação da Nota Fiscal de Entrada                        º±±
±±º          ³                                                            º±±
±±º          ³ Parametro: nItem - Linha do acols que esta posicionado     º±±
±±º          ³                                                            º±±
±±º          ³ Incluído na validação do campo D1_TOTAL                    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTA103OPER(nItem)

Local lRet	:= .T.
Local nPosOpe	:= 0
Local nPosTes	:= 0
Local nPosCod	:= 0
Local lValOp	:= .F.

Default nItem	:= 0
If INCLUI
	lValOp	:= GetNewPar("MV_A103OPE",.F.)
	If lValOp .and. nItem > 1
		If ( nPosOpe:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'D1_OPER'}) ) > 0
	    	aCols[nItem][nPosOpe]	:= aCols[nItem-1][nPosOpe]

			nPosTes:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'D1_TES'})
			nPosCod:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'D1_COD'})

			aCols[nItem][nPosTes]	:= MaTesInt(1,aCols[nItem][nPosOpe],cA100For,cLoja,If(cTipo$"DB","C","F"),aCols[nItem][nPosCod],"D1_TES")

		EndIf
	EndIf
EndIf

Return(lRet)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³RetModCTE ºAutor  ³Carlos Capeli		 º Data ³  20/02/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Retorna a Modalidade do Transporte				          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA103                                                     º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function RetModCTE(cMod)
Local aCombo1  :={}
Local aComboMod:={}
Local cModCte  := ""
Local nMod      := 0

aCombo1:=x3CboxToArray("F1_MODAL")[1]
aSize(aComboMod,Len(aCombo1)+1)
For nMod:=1 to Len(aComboMod)
	aComboMod[nMod]:=IIf(nMod==1," ",aCombo1[nMod-1])
Next nMod
nMod:=Ascan(aComboMod, {|x| Substr(x,1,2) == cMod})
If nMod>0
	cModCte:=aComboMod[nMod]
EndIf

Return cModCte

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103VldMod ºAutor  ³Carlos Capeli		 º Data ³  20/02/2014 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Validacao Modalidade Transporte					          º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³MATA103X                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103VldMod(cModCTE)

Local cOpcao := Substr(cModCTE,1,2)

If !Empty(MafisScan("NF_MODAL",.F.)) .And. (cOpcao $ "  |01|02|03|04|05|06")
	MaFisRef("NF_MODAL","MT100",cOpcao)
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A103ChkInfAdicºAutor  ³TOTVS		     º Data ³  03/10/2014  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Cria Array com Estrutura dos Campos da Aba de Informacoes    º±±
±±º          ³Adicionais												   º±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nTipo: 1 - Inclusao										   ³±±
±±³					  2 - Visualizacao / Exclusao						   ³±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A103ChkInfAdic(nTipo)

Local aAreaInfAdic := GetArea()

DEFAULT nTipo := 1

// Para ativar a aba de Informacoes Adicionais e necessario possuir pelo menos um dos campos abaixo:
// F1_INCISS  - Criado pelo UPDFIS
// F1_VEICUL1 - Criado pelo NFEP11R1 -> NFE11R164
// F1_VEICUL2 - Criado pelo NFEP11R1 -> NFE11R164
// F1_VEICUL3 - Criado pelo NFEP11R1 -> NFE11R164

aInfAdic := {}
DbSelectArea("SF1")

If FieldPos("F1_INCISS") > 0	// Grava municipio de incidencia do ISS para apresentar este dado quando o município da prestacao do servico nao for o do cliente, fornecedor ou SIGAMAT
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_INCISS"), SF1->F1_INCISS ))
	lFldInfAdic := .T.
EndIf

If FieldPos("F1_VEICUL1") > 0	// Grava dados do veiculo para transmissao do Manifesto Eletronico de Documentos Fiscais
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_VEICUL1"), SF1->F1_VEICUL1 ))
	lFldInfAdic := .T.
EndIf

If FieldPos("F1_VEICUL2") > 0	// Grava dados do veiculo para transmissao do Manifesto Eletronico de Documentos Fiscais
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_VEICUL2"), SF1->F1_VEICUL2 ))
	lFldInfAdic := .T.
EndIf

If FieldPos("F1_VEICUL3") > 0	// Grava dados do veiculo para transmissao do Manifesto Eletronico de Documentos Fiscais
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_VEICUL3"), SF1->F1_VEICUL3 ))
	lFldInfAdic := .T.
EndIf

If ColumnPos("F1_DTCPISS") > 0	// Data de execução do serviço
    AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_DTCPISS"), SF1->F1_DTCPISS ))
	lFldInfAdic := .T.
EndIf

If ColumnPos("F1_SIMPNAC") > 0	// Grava dados do do Simples Nacional
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_SIMPNAC"), SF1->F1_SIMPNAC ))
	lFldInfAdic := .T.
EndIf

If ColumnPos("F1_CLIDEST") > 0
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_CLIDEST"), SF1->F1_CLIDEST ))
	lFldInfAdic := .T.
EndIf

If ColumnPos("F1_LOJDEST") > 0
	AADD(aInfAdic, IIF(nTipo==1, CriaVar("F1_LOJDEST"), SF1->F1_LOJDEST ))
	lFldInfAdic := .T.
EndIf


RestArea(aAreaInfAdic)

Return


//-------------------------------------------------------------------
/*/{Protheus.doc} A103LimpIT()
Limpa itens ao trocar o tipo da nota no pré documento de entrada
@author taniel.silva
@since 17/10/2014
@version P12
/*/
//-------------------------------------------------------------------
Function A103LimpIT(Tipo,cFornece,cLoja)
Local nY := 0

cFornece	:= CriaVar("F1_FORNECE",.F.)
cLoja	:= CriaVar("F1_LOJA",.F.)
aCols	:= {}

aadd(aCols,Array(Len(aHeader)+1))

	For ny := 1 to Len(aHeader)
	If Trim(aHeader[ny][2]) == "D1_ITEM"
		aCols[1][ny] 	:= StrZero(1,Len(SD1->D1_ITEM))
	Else
		If Trim(aHeader[ny][2]) <> "D1_ALI_WT".And. Trim(aHeader[nY][2]) <> "D1_REC_WT"
			aCols[1][ny] := CriaVar(aHeader[ny][2])
	    EndIf
	EndIf
	aCols[1][Len(aHeader)+1] := .F.
Next nY


If bGdRefresh<>Nil
	Eval(bGDRefresh)
EndIf

If bRefresh<>Nil
	Eval(bRefresh)
EndIf

Return .T.


Function A103VldInss()

Local lRet     := .T.
Local cINSS	 := SX3->X3_WHEN

If !Empty(cINSS) .And. Valtype(cINSS) == "C"
   If  RAT(  ("M->"),cinss ) == 0
	   lRet:= &(cINSS)
   Endif
Endif

Return(lRet)

//-------------------------------------------------------------------
/*/{Protheus.doc} VALIDSM4
Rotina que irá fazer a validação do campo F1_MENPAD na tabela SM4.
@author Allan Santos da Silva
@since 10/04/2015
@version 11.90
/*/
//-------------------------------------------------------------------

Static Function VALIDSM4(aNFEletr)

Local lRet := .F.

If SM4->(DbSeek(xFilial("SM4")+aNFEletr[8])) .Or. Empty(aNFEletr[8])
	lRet := .T.
Else
	Alert("Código Invalido ou Não Cadastrado!!!")
EndIf

Return(lRet)

//-------------------------------------------------------------------
/*/{Protheus.doc} A103CIAP()
Realiza a geração de CIAP ou Exclusão
@author Leonardo Quintania
@since 27/10/2014
@version 1.0
/*/
//-------------------------------------------------------------------
Function A103CIAP(nOpc,cAliasSD1,nQtdReq,cRotina)
Local aAreaAnt   := GetArea()
Local nQtdD1     := 1
Local nVlrICMS   := 0
Local nDIfDec    := 0
Local nX         := 0
Local nValFrete  := 0
Local nTotalNF   := If(Int((cAliasSD1)->D1_QUANT) > 0, Int((cAliasSD1)->D1_QUANT), 1)
Local nLaco      := 1
#IFDEF TOP
	Local cQuery   := ""
#ENDIF
Local cEstado    := GetNewPar("MV_ESTADO", "")
Local cSimpNac   := ""
Local cCIAP      := ""
Local cCIAPIni   := ""
Local cNum       := ""
Local cDaCiap    := GetNewPar("MV_DACIAP",'S') //Utilizado para calc. ICMS no CIAP. Se S= Considera valor de dif. aliquota se N= Nao considera dif. aliquota
Local cSTCiap    := GetNewPar("MV_STCIAP","N") //Utilizado para calc. ICMS no CIAP. Se S= Considera valor de ICMS ST se N= Nao considera ICMS ST.
Local cFTCiap    := GetNewPar("MV_FTCIAP","N") //Utilizado para calc. ICMS no CIAP. Se S= Considera valor de ICMS FRETE se N= Nao considera ICMS FRETE.
Local cAnCiap    := GetNewPar("MV_ANCIAP","N") //Utilizado para calc. ICMS no CIAP. Se S= Considera valor de ICMS ST Anterior se N= Nao considera ICMS ST Anterior.
Local cSf9CC     := GetNewPar("MV_F9CC", "")
Local cSf9PL     := GetNewPar("MV_F9PL", "")
Local cSf9Prod   := GetNewPar("MV_F9PROD", "")
Local cSf9Esp    := GetNewPar("MV_F9ESP", "")
Local cUfFor     := ""
Local lPzDifRS   := .F.
Local lDelFisico := SuperGetMV("MV_DELCIAP",.T.,1) == 1  //Se = 1 Deleta SFA e SF9 Fisicamente se = 2 Deleta logicamente
Local lF9DtIni   := SF9->(FieldPos("F9_DTINIUT")) > 0
Local lF9VldBAtv := SF9->(FieldPos("F9_VLDBATV")) > 0
Local lSpedFisc  := (SF9->(FieldPos("F9_VALFRET")) > 0 .And. SF9->(FieldPos("F9_VALICST")) > 0 .And. ;
						SF9->(FieldPos("F9_VALICCO")) > 0 .And. SF9->(FieldPos("F9_VALICMP")) > 0)
Local lCodLivre  := .F.

Default nQtdReq  := 0

If nOpc == 1 //Inclusão SF9
	SA2->(MsSeek(xFilial("SA2")+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA))
	cSimpNac := Iif(SA2->(FieldPos("A2_SIMPNAC")) > 0,SA2->A2_SIMPNAC,"")
	cUfFor	 := SA2->A2_EST

	SB1->(dbSetOrder(1))
	SB1->(MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))

	//-- Desmembra itens no ativo
	If SF4->F4_BENSATF == "1"
		If ((cAliasSD1)->D1_TIPO <> "P") .And. ((cAliasSD1)->D1_TIPO <> "C")
			If !Empty(nQtdReq)
				nLaco := nQtdReq
			Else
				nLaco := Int((cAliasSD1)->D1_QUANT)
			EndIf
			nQtdD1 := 1
		Else
			If !Empty(nQtdReq)
				nQtdD1 := nQtdReq
			Else
				nQtdD1 := If(Int((cAliasSD1)->D1_QUANT) > 0, Int((cAliasSD1)->D1_QUANT), 1)
			EndIf
		EndIf
	Else
		If !Empty(nQtdReq)
			nQtdD1 := nQtdReq
		Else
			nQtdD1 := If(Int((cAliasSD1)->D1_QUANT) > 0, Int((cAliasSD1)->D1_QUANT), 1)
		EndIf
	EndIf

	nVlrICMS := (cAliasSD1)->D1_VALICM

	//Minas Gerais - Decreto 45.776, 21/11/2011 DOE/MG Art. 206
	//Simples nacional/Livro O ou Z/ICMS Complementar
	If (cEstado=="MG" .AND. cSimpNac=="1" .And. SF4->F4_LFICM$"OZ" .And. SF4->F4_COMPL=="S")
		nVlrICMS := IIf(AllTrim(cDACiap)=="S", 0, (cAliasSD1)->D1_ICMSCOM)
	Endif
	nDIfDec	:= 0

	DbSelectArea("SF9")
	DbSetOrder(1)		// F9_FILIAL + F9_CODIGO

	For nX := 1 To nLaco
		// Verifica codigo utilizado para previnir erro de chave duplicada
		lCodLivre := .F.
		While !lCodLivre
			cNum := CriaVar("F9_CODIGO",.T.)
			If MsSeek(xFilial("SF9")+cNum)
				ConfirmSX8()
			Else
				lCodLivre := .T.
			EndIf
		EndDo

		cCIAP := cNum
		If nX == 1
			cCIAPIni := cCIAP
		Endif
		nValFrete := Iif(SF4->F4_DESPICM$"S/1/5",(cAliasSD1)->(D1_VALFRE*D1_PICM)/100,0)
		RecLock("SF9",.T.)
		SF9->F9_FILIAL := xFilial("SF9")
		SF9->F9_CODIGO := cCIAP
		SF9->F9_DESCRI := SB1->B1_DESC
		SF9->F9_FORNECE:= (cAliasSD1)->D1_FORNECE
		SF9->F9_LOJAFOR:= (cAliasSD1)->D1_LOJA
		SF9->F9_DOCNFE := (cAliasSD1)->D1_DOC
		SF9->F9_SERNFE := (cAliasSD1)->D1_SERIE
		SF9->F9_ITEMNFE:= (cAliasSD1)->D1_ITEM
		SF9->F9_PROPRIO:= IIF(Empty((cAliasSD1)->D1_FORMUL),"N",(cAliasSD1)->D1_FORMUL)
		SF9->F9_DTENTNE:= (cAliasSD1)->D1_DTDIGIT
		SF9->F9_DTEMINE:= (cAliasSD1)->D1_EMISSAO

		//POR PADRÃO IRÁ CONSIDERAR DATA DE INÍCIO DE UTILIZAÇÃO A DATA DE ENTRADA DO BEM
		IF lF9DtIni
			SF9->F9_DTINIUT := (cAliasSD1)->D1_DTDIGIT
		EndIF

		//Verifica parametro MV_DACIAP, MV_STCIAP e MV_FTCIAP para calculo do valor de icms no registro Ciap
		If Alltrim(cDACiap) == "N" .And. AllTrim(cSTCiap) == "N" .And. AllTrim(cFTCiap) == "N" .And. AllTrim(cAnCiap) == "N"
			SF9->F9_VALICMS:= NoRound((nVlrICMS / nTotalNF) * nQtdD1,2)
			//Acumula valores a partir da 3 casa decimal
			nDIfDec	+= (nVlrICMS / nQtdD1) - NoRound((nVlrICMS /  nTotalNF) * nQtdD1,2)
		Else
			//ALTERACAO PARA CONTROLE DO VALOR DO ICMS
			SF9->F9_VALICMS := NoRound((nVlrICMS/ nTotalNF) * nQtdD1,2)
			nDIfDec	+=	((nVlrICMS/ nTotalNF) * nQtdD1) - NoRound((nVlrICMS/ nTotalNF) * nQtdD1,2)
			If AllTrim(cDACiap) == "S"
				SF9->F9_VALICMS += NoRound(((cAliasSD1)->D1_ICMSCOM / nTotalNF) * nQtdD1,2)
				//Acumula valores a partir da 3 casa decimal
				nDIfDec	+= (((cAliasSD1)->D1_ICMSCOM/ nTotalNF) * nQtdD1) - NoRound(((cAliasSD1)->D1_ICMSCOM/ nTotalNF) * nQtdD1,2)
			EndIf
			If AllTrim(cSTCiap) == "S"
				SF9->F9_VALICMS += NoRound(((cAliasSD1)->D1_ICMSRET/ nTotalNF) * nQtdD1,2)
				//Acumula valores a partir da 3 casa decimal
				nDIfDec	+= (((cAliasSD1)->D1_ICMSRET/ nTotalNF) * nQtdD1) -NoRound(((cAliasSD1)->D1_ICMSRET/ nTotalNF) * nQtdD1,2)
			EndIf
			If AllTrim(cFTCiap) == "S"
				SF9->F9_VALICMS += NoRound((nValFrete/ nTotalNF) * nQtdD1,2)
				//Acumula valores a partir da 3 casa decimal
				nDIfDec	+= ((nValFrete/ nTotalNF) * nQtdD1) - NoRound((nValFrete/ nTotalNF) * nQtdD1,2)
			EndIf
			If AllTrim(cAnCiap) == "S"
				//-- ICMS ST informado no campo ICMS ST Operacao Anterior (D1_ICMNDES)
				SF9->F9_VALICMS += NoRound(((cAliasSD1)->D1_ICMNDES/ nTotalNF) * nQtdD1,2)
				//Acumula valores a partir da 3 casa decimal
				nDIfDec	+= (((cAliasSD1)->D1_ICMNDES/ nTotalNF) * nQtdD1) - NoRound(((cAliasSD1)->D1_ICMNDES/ nTotalNF) * nQtdD1,2)
			EndIf
		EndIf

		//Se for o último bem irá somar a diferença de arredondamento a partir da 3 casa decimal dos bens anteriores.
		If nX == nLaco
			SF9->F9_VALICMS	:= SF9->F9_VALICMS + nDIfDec
		EndIf

		//GRAVACAO DE TODOS OS TIPOS DE ICMS EM CAMPOS SEPARADOS - SPEDFISCAL.
		If lSpedFisc
			SF9->F9_VALFRET := (nValFrete/ nTotalNF) * nQtdD1
			SF9->F9_VALICST := ((cAliasSD1)->D1_ICMSRET/ nTotalNF) * nQtdD1
			SF9->F9_VALICCO := ((cAliasSD1)->D1_ICMSCOM/ nTotalNF) * nQtdD1
			SF9->F9_VALICMP := (nVlrICMS/ nTotalNF) * nQtdD1
		EndIf

		//Débito por Diferencial de Alíquota de Ativo Imobilizado
		If lF9VldBAtv
			SF9->F9_VLDBATV := (cAliasSD1)->D1_ICMSCOM
	    Endif

		IF cUfFor == "RS" .And. cEstado == "RS" .And. (cAliasSD1)->D1_EMISSAO >= CtoD('01/03/2014')
			lPzDifRS := .T.
		EndIf

		SF9->F9_QTDPARC := IIF(lPzDifRS,24,GetMV("MV_LC102"))
		SF9->F9_SLDPARC := SF9->F9_QTDPARC
		SF9->F9_ROTINA := cRotina
		SF9->F9_CFOENT := (cAliasSD1)->D1_CF
		SF9->F9_PICM   := (cAliasSD1)->D1_PICM

		If SF9->(FieldPos(cSf9CC))>0
	   		SF9->&cSf9CC := (cAliasSD1)->D1_CC
		EndIf

		If SF9->(FieldPos(cSf9PL)) >0
	   		SF9->&cSf9PL := (cAliasSD1)->D1_CONTA
		EndIf

		If SF9->(FieldPos(cSf9Prod)) >0
	   		SF9->&cSf9Prod := (cAliasSD1)->D1_COD
		EndIf

		If SF9->(FieldPos(cSf9Esp))>0
	   		SF9->&cSf9Esp := SF1->F1_ESPECIE
		EndIf

		//Classificacao do Ativo 01=BEM e 03=COMPONENTE.
		If SF4->F4_COMPONE = "1"
			SF9->F9_TIPO := "03"
		Else
			SF9->F9_TIPO := "01"
		EndIf
		//Amarracao do Bem principal
		If !Empty((cAliasSD1)->D1_CODBAIX)
			SF9->F9_CODBAIX := (cAliasSD1)->D1_CODBAIX
		EndIf
		If __lSX8
			ConfirmSX8()
		EndIf
	Next nLaco
	cCiap:= IIf( SF4->F4_BENSATF == "1", cCIAPIni, SF9->F9_CODIGO )
Else
#IFDEF TOP
	If lDelFisico
		SF9->(dbSetOrder(2))
		If SF9->(dbSeek(xFilial("SF9")+(cAliasSD1)->(DTOS(D1_DTDIGIT)+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)))
			While SF9->(!Eof()) .And.;
					SF9->(F9_FILIAL+DTOS(F9_DTENTNE)+F9_DOCNFE+F9_SERNFE+F9_FORNECE+F9_LOJAFOR) == xFilial("SF9")+(cAliasSD1)->(DTOS(D1_DTDIGIT)+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)
				cQuery := "DELETE FROM "+RetSqlName("SFA")
				cQuery += " WHERE FA_FILIAL   = '"+xFilial("SFA")+"'"
				cQuery += "   AND FA_CODIGO   = '"+SF9->F9_CODIGO+"'"
				cQuery += "   AND D_E_L_E_T_  = ' '"
				TcSqlExec(cQuery)

				SF9->(DbSkip())
			End
		EndIf

		cQuery := "DELETE FROM "+RetSqlName("SF9")
		cQuery += " WHERE F9_FILIAL  = '"+ xFilial("SF9")+"'"
		cQuery += "   AND F9_DTENTNE = '"+ DtoS((cAliasSD1)->D1_DTDIGIT) +"'"
		cQuery += "   AND F9_DOCNFE  = '"+ (cAliasSD1)->D1_DOC +"'"
		cQuery += "   AND F9_SERNFE  = '"+ (cAliasSD1)->D1_SERIE +"'"
		cQuery += "   AND F9_FORNECE = '"+ (cAliasSD1)->D1_FORNECE +"'"
		cQuery += "   AND F9_LOJAFOR = '"+ (cAliasSD1)->D1_LOJA +"'"
		cQuery += "   AND D_E_L_E_T_ = ' '"
		TcSqlExec(cQuery)
	Else
#ENDIF
		SF9->(dbSetOrder(2))
		If SF9->(dbSeek(xFilial("SF9")+(cAliasSD1)->(DTOS(D1_DTDIGIT)+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)))
			While SF9->(!Eof()) .And.;
					SF9->(F9_FILIAL+DTOS(F9_DTENTNE)+F9_DOCNFE+F9_SERNFE+F9_FORNECE+F9_LOJAFOR) == xFilial("SF9")+(cAliasSD1)->(DTOS(D1_DTDIGIT)+D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA)
				SFA->(dbSetOrder(1))
				If SFA->(dbSeek(xFilial("SFA")+SF9->F9_CODIGO))
                    While SFA->(!Eof()) .And.;
                    		SFA->(FA_FILIAL+FA_CODIGO) == xFilial("SFA")+SF9->F9_CODIGO
                        RecLock("SFA", .F.)
                        SFA->(dbdelete())
                        SFA->(dbSkip())
					EndDo
				EndIf
				RecLock("SF9", .F.)
				SF9->(dbDelete())
				SF9->(dbSkip())
			EndDo
		EndIf
#IFDEF TOP
	EndIf
#ENDIF
EndIf

RestArea(aAreaAnt)

Return cCiap


//-------------------------------------------------------------------
/*/{Protheus.doc}A103ChkBN
Verifica se deve baixar o empenho na inclusao da nota.
Caso a nota seja retorno do beneficiamento, nao devera baixar empenho neste momento.
Se jah houver SGO para a OP e produto, significa que o empenho jah foi baixado
no envio para beneficiamento via Faturamento.

@author isaias.silva
@since 04/05/2015
@version P11.80 replica 12
/*/
//-------------------------------------------------------------------

Function A103ChkBN(cOp, cProduto , cLocal , nRecSD4)
Local aAreas := { GetArea(), SGO->(GetArea()) }
Local lRet   := .F.
Local lContinua := If(FindFunction("A410CtEmpBN"), A410CtEmpBN() == 2, .F.)

If lContinua
	SGO->(dbSetOrder(1)) // FILIAL + OP + COD + LOCAL
	If SGO->(MsSeek(xFilial('SGO')+cOP+cProduto+cLocal)) .And. SGO->(GO_RECNOD4) == nRecSD4
		lRet := .T.
	EndIf
EndIf

RestArea(aAreas[2])
RestArea(aAreas[1])
Return lRet
//-------------------------------------------------------------------
/*/{Protheus.doc}M103XAFEXC
Valida se a nota tem ativo a classificar.

@author alvaro.camillo
@since 14/12/2015
@version P12
/*/
//-------------------------------------------------------------------
Static Function M103XAFEXC(cDoc,cSerie,cFornec,cLoja,cProduto)
Local lRet			:= .T.
Local aArea		:= GetArea()
Local cQuery		:= ""
Local cNextAlias	:= GetNextAlias()

dbSelectArea('SN1')
dbSetOrder(1)

cQuery	+= " SELECT "
cQuery	+= " 	N1_FILIAL, "
cQuery	+= " 	N1_CBASE, "
cQuery	+= " 	N1_ITEM  "
cQuery	+= " FROM  "
cQuery	+= " 	"+RetSQLName("SN1")+" SN1 "
cQuery	+= " WHERE "
cQuery	+= " 	N1_FILIAL = '"+xFilial("SN1")+"' AND "
cQuery	+= " 	N1_PRODUTO = '"+cProduto+"' AND "
cQuery	+= " 	N1_FORNEC = '"+cFornec+"' AND "
cQuery	+= " 	N1_LOJA = '"+cLoja+"' AND "
cQuery	+= " 	N1_NSERIE = '"+cSerie+"' AND "
cQuery	+= " 	N1_NFISCAL = '"+cDoc+"' AND "
cQuery	+= " 	SN1.D_E_L_E_T_ = ' ' "

cQuery := ChangeQuery(cQuery)
dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cNextAlias,.T.,.T.)


While (cNextAlias)->(!EOF())

	If SN1->(MsSeek( (cNextAlias)->(N1_FILIAL+N1_CBASE+N1_ITEM)))
		If AF012AVLDL("SN3",.T.)
			If !SoftLock('SN1')
				lRet := .F.
				Exit
			EndIf
		Else
			lRet := .F.
			Exit
		EndIf
	EndIf
	(cNextAlias)->(dbSkip())
EndDo

(cNextAlias)->(dbCloseArea())
RestArea(aArea)
Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc}A103Desp
Recalcula despesas acessórias, com base no percentual da quantidade
utilizada do pedido de compras

@author jose.delmondes
@since 20/01/2016
@version P11.80
/*/
//-------------------------------------------------------------------
Function A103Desp()
Local nPosPc		:= aScan(aHeader,{|x| AllTrim(x[2])=="D1_PEDIDO"})
Local nPosItPc	:= aScan(aHeader,{|x| AllTrim(x[2])=="D1_ITEMPC"})
Local nDivisor	:= 0
Local nMultipl	:= 0

SC7->(dbSetOrder(1))
If SC7->(MsSeek(xFilial("SC7")+aCols[n][nPosPc]+aCols[n][nPosItPc]))
	If M->D1_QUANT + SC7->C7_QUJE < SC7->C7_QUANT
		nDivisor := SC7->C7_QUANT
		nMultipl := M->D1_QUANT

	Else
		nDivisor := SC7->C7_QUANT
		nMultipl := SC7->C7_QUANT - SC7->C7_QUJE
	EndIf

	//Recalcula despesa
	If !Empty(SC7->C7_DESPESA)
		MaFisAlt("NF_DESPESA",(SC7->C7_DESPESA/nDivisor)*nMultipl)
	EndIf
	//Recalcula seguro
	If !Empty(SC7->C7_SEGURO)
		MaFisAlt("NF_SEGURO",(SC7->C7_SEGURO/nDivisor)*nMultipl)
	EndIf
	//Recalcula frete
	If !Empty(SC7->C7_VALFRE)
		MaFisAlt("NF_FRETE",(SC7->C7_VALFRE/nDivisor)*nMultipl)
	EndIf
EndIf

Return

/*/{Protheus.doc}A103CodR
Função para auxiliar a validação do Ponto de Entrada M103CODR
@author Manuela Cavalcante
@since 18/02/2016
@version P11.80
@return Nil
/*/
Function A103CodR(aCodR)
Local lRet := .T.
Local lCodR := .F.

	If ExistBlock("M103CODR") // P.E. para validar se o array "aCodR" está preenchido ou não".
		lCodR := ExecBlock("M103CODR",.F.,.F.,{aCodR})
		If Valtype(lCodR)=="L"
			lRet := lCodR
		EndIf
	EndIf

Return lRet

/*/{Protheus.doc} A103CTECOL
Função para validar a existência de CT-e (Totvs Colaboração) ao excluir uma NF
@author Rodrigo Machado Pontes
@since 27/04/16
@version P12
@return Nil
/*/

Static Function A103CTECOL(cNFCol,cSerCol,cFilCol,cForCol,cLjCol)

Local lRet 		:= .F.
Local lIndCteCol	:= .F.
Local cIndexSD1	:= ""
Local cQuery		:= ""
Local aArea		:= GetArea()

cFilCol	:= PadR(cFilCol,TamSx3("D1_FILIAL")[1])
cNFCol		:= PadR(cNFCol,TamSx3("D1_NFORI")[1])
cSerCol	:= PadR(cSerCol,TamSx3("D1_SERIORI")[1])
cForCol	:= PadR(cForCol,TamSx3("D1_FORNECE")[1])
cLjCol		:= PadR(cLjCol,TamSx3("D1_LOJA")[1])

DbSelectArea("SD1")

If lIndCteCol == Nil
	If !Empty(SD1->(IndexKey(19))) //D1_FILIAL+D1_NFORI+D1_SERIORI+D1_FORNECE+D1_LOJA
		lIndCteCol := .T.
	Else
		lIndCteCol := .F.
	Endif
Endif

If lIndCteCol
	SD1->(DbSetOrder(19)) //D1_FILIAL+D1_NFORI+D1_SERIORI+D1_FORNECE+D1_LOJA
	If SD1->(DbSeek(cFilCol + cNFCol + cSerCol + cForCol + cLjCol))
		lRet := .T.
	Endif
Else
	cIndexSD1 := CriaTrab(,.f.)

	cQuery    := "D1_FILIAL == '"     +cFilCol+  "' .AND. "
	cQuery    += "D1_NFORI == '"      +cNFCol+     "' .AND. "
	cQuery    += "D1_SERIORI == '"    +cSerCol+   "' .AND. "
	cQuery    += "D1_FORNECE == '"    +cForCol+ "' .AND. "
	cQuery    += "D1_LOJA == '"       +cLjCol+    "' .AND. "
	cQuery    += "D1_DOC+D1_SERIE+D1_FORNECE+D1_LOJA <> '" + cNFCol+cSerCol+cForCol+cLjCol + "'"

	IndRegua("SD1",cIndexSD1,"D1_FILIAL+D1_NFORI+D1_SERIORI+D1_FORNECE+D1_LOJA",, cQuery ,"")
	nIndexSD1 :=RetIndex("SD1")+1

	#IFNDEF TOP
		dbSetIndex(cIndexSD1+OrdBagExt())
	#ENDIF
	SD1->(dbSetorder(nIndexSD1))
	SD1->(dbGoTop())

	If SD1->(!Eof())
		lRet := .T.
	EndIf

	FErase(cIndexSD1 + OrdBagExt())
	DbClearFilter()
Endif

RestArea(aArea)

Return lRet