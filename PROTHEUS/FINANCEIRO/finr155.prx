#Include "FINR150.CH"

Static _oFinr155
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINR155   ºAutor  ³Claudio D. de Souza º Data ³  28/08/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imprime o relatorio de titulos a pagar   quando escolhido  º±±
±±º          ³ a ordem por natureza no FINR150, devido a implementacao de º±±
±±º          ³ multiplas naturezas por titulos                            º±±
±±º          ³ Parametros:                                                º±±
±±º          ³ cTipos    -> Tipos de titulos que nao serao impressos,     º±±
±±º          ³              enviado pelo FINR150 atraves do PE F150FILT   º±±
±±º          ³ lEnd      -> Acao do CodBlock, ennviado pelo RptStatus     º±±
±±º          ³ nTot0     -> Total do valor original do titulo             º±±
±±º          ³ nTot1     -> Total do saldo vencido do titulo              º±±
±±º          ³ nTot2     -> Total do saldo corrigido do titulo            º±±
±±º          ³ nTot3     -> Total do saldo a vencer dos titulos           º±±
±±º          ³ nTottit   -> Qtde. de titulos impressos                    º±±
±±º          ³ nTotJ     -> Total dos juros                               º±±
±±º          ³ oReport   -> objeto do TReport                             º±±
±±º          ³ aDados    -> array a ser utilizado no printline            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINR150                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION Finr155( cTipos, lEnd, nTot0, nTot1, nTot2, nTot3, nTotTit, nTotJ, oReport, aDados, cNomNat, nTotVenc, nTotGeral)
Local oSection1 := oReport:Section(1)
Local lCellPers := oSection1:UseFilter()//retorna se existe campo personalizado
Local aAreaSe2	:= SE2->(GetArea())    
Local aStru   	:= SE2->(DbStruct())
Local aColuna	:= {}
Local nAux		:= 0
Local aSaldo	
Local aTotais
Local cArqTmp	:= GetNextAlias()
Local dDataReaj
Local nDecs   := MsDecimais(mv_par15)
Local nSaldo
Local nJuros  := 0
Local nX
Local nY
Local aTamFor := TAMSX3("E2_FORNECE")
Local cTitAnt								 


Private cFilterUser := ""

For nAux := 1 to Len(aStru)

	If(aStru[nAux][1] != "R_E_C_N_O_" .AND. aStru[nAux][1] != "R_E_C_D_E_L_")

		aAdd(aColuna,aStru[nAux])

	EndIf
Next

//Verificando se precisa deletar
If(_oFinr155 <> NIL)

	_oFinr155:Delete()
	_oFinr155:= NIL

EndIf
//Criando o objeto
_oFinr155 := FwTemporaryTable():New(cArqTmp)
//Amarrando as colunas neste Objeto
_oFinr155:SetFields(aColuna)
_oFinr155:AddIndex("1",{"E2_FILIAL","E2_NATUREZ","E2_NOMFOR","E2_PREFIXO","E2_NUM","E2_PARCELA","E2_TIPO","E2_FORNECE"})

_oFinr155:Create()

DbSelectArea("SE2")
cTitulo := cTitulo + STR0017  //" - Por Natureza"
DbSelectArea("SE2")
DbGoTop()

// Gera o arquivo temporario por natureza
While SE2->(!Eof())
	
	/*
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se nao atender a condicao para impressao, despreza o registro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	If !Fr155Cond(cTipos)
		DbSkip()
		Loop
	EndIf	
	/*
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se estiver utilizando multiplas naturezas, verifica o codigo da natureza³
	//³do arquivo de multiplas naturezas (SEV)                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
  	If MV_MULNATP .And. E2_MULTNAT == "1"
   	If !PesqNatSev("SE2","E2", MV_PAR05, MV_PAR06)
			DbSkip()
			Loop
		Endif
	Else	
		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Senao, verifica o codigo da natureza do SE2³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		If SE2->E2_NATUREZ < mv_par05 .OR. SE2->E2_NATUREZ > mv_par06 
	  		DbSkip()
			Loop
	  	Endif
	Endif
		
	dDataReaj := If(E2_VENCREA < dDataBase,;
	             If(mv_par17=1,dDataBase,E2_VENCREA),dDataBase)
					 
   // Se estiver utilizando multiplas naturezas, verifica o arquivo de multiplas
	// naturezas (SEV), inclui diversos registro no SE2 temporario
	aSaldo := SdoTitNat(E2_PREFIXO     ,;
						E2_NUM         ,;
						E2_PARCELA     ,;
						E2_TIPO        ,;
						E2_FORNECE     ,;
						E2_LOJA,       ,;
						"P"            ,;
						"SE2"          ,;
						MV_PAR15       ,;
						MV_PAR21 == 1  ,;
						dDataReaj	)

	//Tratamento no ultimo registro do array, pois a função SdoTitNat() totaliza a diferença de saldo na ultima natureza.
	If MV_MULNATP .And. E2_MULTNAT == "1"
		aSaldo[Len(aSaldo),2] -= SE2->E2_SDDECRE
	Endif
	
	DbSelectArea(cArqTmp)
	For nX := 1 To Len( aSaldo )
		If aSaldo[nX][1] >= MV_PAR05 .And. aSaldo[nX][1]<= MV_PAR06
			DbAppend()
			For nY := 1 To SE2->(fCount())                 
			    If SE2->(AllTrim(FieldName(nY))) != "R_E_C_N_O_" .And. SE2->(AllTrim(FieldName(nY))) != "R_E_C_D_E_L_"
					(cArqTmp)->(FieldPut(nY,SE2->(FieldGet(nY))))
				EndIf	
			Next
			(cArqTmp)->E2_NATUREZ := aSaldo[nX][1]
			(cArqTmp)->E2_SALDO   := aSaldo[nX][2]
			(cArqTmp)->E2_VALOR   := aSaldo[nX][4]
			// nao deve olhar abatimento pois e zerado o saldo na liquidacao final do titulo
			If !(E2_TIPO $ MVPAGANT+"/"+MV_CPNEG) .And. !(MV_PAR21 == 2 .And. E2_SALDO == 0) 
				(cArqTmp)->E2_SALDO -= aSaldo[nX][5]
			EndIf
		Endif
	Next
	DbSelectArea("SE2")
	Se2->(DbSkip())
Enddo

DbSelectArea( cArqTmp )
DbGoTop()
While !Eof()

	cNatAnt := E2_NATUREZ
	aTotais := { 0,0,0,0,0,0 } // Totais por natureza
	nJuros  := 0
	
	// Processa todas a naturezas
	While E2_NATUREZ == cNatAnt .And. !Eof()

		// Guarda o numero do titulo para verificar se totaliza o valor do titulo
		cTitAnt := E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO 
			
		nSaldo := E2_SALDO
		nSaldo := Round(NoRound(nSaldo,3),2)
			
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ So considera caso saldo seja maior que zero  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nSaldo > 0
			If lCellPers
				SetAliasCell(oSection1)
				lCellPers := .F.
			EndIf			
			
			If mv_par21 == 1
				//Verifica se existem compensações em outras filiais para descontar do saldo, pois a SaldoTit() somente
				//verifica as movimentações da filial corrente. Nao deve processar quando existe somente uma filial.
				If !Empty(xFilial("SE2")) .And. !Empty(xFilial("SE5"))
					nSaldo -= FRVlCompFil("P", E2_PREFIXO, E2_NUM, E2_PARCELA, E2_TIPO, E2_FORNECE, E2_LOJA, IIF(mv_par34 == 2,3,1),,,,mv_par15,E2_MOEDA, If(mv_par35==1,E2_TXMOEDA, Nil), dDataReaj, .T.)
				EndIf			
			Else
				nSaldo := xMoeda((E2_SALDO+E2_SDACRES-E2_SDDECRE), E2_MOEDA, mv_par15, dDataReaj,ndecs + 1, If(mv_par35==1, E2_TXMOEDA, Nil))
			EndIf
			
			dbSelectArea("SA2")
			MSSeek(xFilial("SA2")+(cArqTmp)->(E2_FORNECE+E2_LOJA))
			DbSelectArea(cArqTmp)
			
			If mv_par20 == 1
				aDados[2] := E2_FORNECE + "-" + E2_LOJA + "-" + IIF(mv_par28 == 1, SubStr(SA2->A2_NREDUZ,1,20), SubStr(SA2->A2_NOME,1,20))
				If (aTamFor[1] > 6)
					oSection1:PrintLine()
					oReport:SkipLine()
					aFill(aDados,nil)
				EndIf
				aDados[3] := E2_PREFIXO+"-"+E2_NUM+"-"+E2_PARCELA
				aDados[4] := E2_TIPO
				aDados[5] := E2_NATUREZ
				aDados[6] := E2_EMISSAO
				aDados[7] := E2_VENCTO
				aDados[8] := E2_VENCREA
				aDados[9] := xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1) * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1)
			Endif
			
			If dDataBase > E2_VENCREA	//vencidos
				If mv_par20 == 1
					aDados[10] := nSaldo * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1)
				EndIf
				
				nJuros := fa080Juros(mv_par15,,Alias())
				
				If mv_par20 == 1
					aDados[11] := (nSaldo+nJuros) * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1)
				EndIf
				
				If E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
					aTotais[1] -= xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[2] -= (nSaldo)
					aTotais[3] -= (nSaldo+nJuros)
				Else
					aTotais[1] += xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[2] += (nSaldo)
					aTotais[3] += (nSaldo+nJuros)
				Endif
			Else						//a vencer
				// Analitico
				If mv_par20 == 1
					aDados[12] := nSaldo  * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1)
				EndIf
				If ! ( E2_TIPO $ MVPAGANT+"/"+MV_CPNEG)
					aTotais[1] += xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[4] += nSaldo
				Else
					aTotais[1] -= xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[4] -= nSaldo
				Endif
			Endif
			
			// Analitico
			If mv_par20 == 1
				aDados[13] := E2_PORTADO
			EndIf
			If nJuros > 0
				If mv_par20 == 1
					aDados[14] := nJuros
				EndIf
			Endif
			
			IF dDataBase > E2_VENCREA
				nAtraso:=dDataBase-E2_VENCTO
				IF Dow(E2_VENCTO) == 1 .Or. Dow(E2_VENCTO) == 7
					IF Dow(dBaixa) == 2 .and. nAtraso <= 2
						nAtraso := 0
					EndIF
				EndIF
				nAtraso:=IIF(nAtraso<0,0,nAtraso)
				IF nAtraso>0 .And. mv_par20 == 1
					aDados[15] := nAtraso
				EndIF
			EndIF
			If mv_par20 == 1
				aDados[16] := SubStr(E2_HIST,1,24)+ ;
					If(E2_TIPO $ MVPROVIS,"*"," ")+ ;
					If(nSaldo == xMoeda(E2_VALOR,E2_MOEDA,mv_par15,dDataReaj,ndecs+1)," ","P")
				oSection1:PrintLine()
				aFill(aDados,nil)
			EndIf
			
			dbSelectArea("SED")
			dbSetOrder(1)
			dbSeek(xFilial("SED")+(cArqTmp)->(E2_NATUREZ))
			cNomNat	 := MascNat(SED->ED_CODIGO)+" "+SED->ED_DESCRIC
			DbSelectArea( cArqTmp )
			dbSkip()
			
			aTotais[5] ++
			aTotais[6] += nJuros
			
		   nTotTit ++
		Else
			DbSelectArea( cArqTmp )
			dbSkip()
		EndIf
	Enddo // Mudou a natureza
	nTot0 += aTotais[1]
	nTot1 += aTotais[2]
	nTot2 += aTotais[3]
	nTot3 += aTotais[4]
	
	nTotJ += aTotais[6]

	nTotVenc  := aTotais[3]+aTotais[4]
	nTotGeral := nTot2+nTot3

	If aTotais[5] > 0 .And. mv_par20 == 2	//2- Sintetico
	   SubT150R(aTotais[1],aTotais[2],aTotais[3],aTotais[4],,2,cNatAnt,aTotais[6],oReport,oSection1)
	EndIf
	DbSelectArea( cArqTmp )
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apaga arquivos tempor rios  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If(_oFinr155 <> NIL)

	_oFinr155:Delete()
	_oFinr155 := NIL

EndIf

SE2->(RestArea(aAreaSe2))

Return Nil







//-----------------------------------R3--------------------------------













/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³FINR155R3 ºAutor  ³Claudio D. de Souza º Data ³  28/08/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Imprime o relatorio de titulos a pagar   quando escolhido  º±±
±±º          ³ a ordem por natureza no FINR150, devido a implementacao de º±±
±±º          ³ multiplas naturezas por titulos                            º±±
±±º          ³ Parametros:                                                º±±
±±º          ³ cTipos    -> Tipos de titulos que nao serao impressos,     º±±
±±º          ³              enviado pelo FINR150 atraves do PE F150FILT   º±±
±±º          ³ lEnd      -> Acao do CodBlock, ennviado pelo RptStatus     º±±
±±º          ³ nTot0     -> Total do valor original do titulo             º±±
±±º          ³ nTot1     -> Total do saldo vencido do titulo              º±±
±±º          ³ nTot2     -> Total do saldo corrigido do titulo            º±±
±±º          ³ nTot3     -> Total do saldo a vencer dos titulos           º±±
±±º          ³ nTottit   -> Qtde. de titulos impressos                    º±±
±±º          ³ nTotJ     -> Total dos juros                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINR150R3                                                  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
FUNCTION Finr155R3( cTipos, lEnd, nTot0, nTot1, nTot2, nTot3, nTotTit, nTotJ )
Local aAreaSe2	:= SE2->(GetArea())
Local aStru   	:= SE2->(DbStruct())
Local aColuna	:= {}
Local nAux		:= 0
Local aSaldo
Local aTotais
Local cArqTmp 	:= GetNextAlias()
Local dDataReaj
Local nDecs   	:= MsDecimais(mv_par15)
Local nSaldo  	:= 0
Local nJuros  	:= 0
Local nX	  	:= 0
Local nY	  	:= 0
Local aTamFor 	:= TAMSX3("E2_FORNECE")
Local cTitAnt 	:= ""


For nAux := 1 to Len(aStru)

	If(aStru[nAux][1] != "R_E_C_N_O_" .AND. aStru[nAux][1] != "R_E_C_D_E_L_" .AND. aStru[nAux][1] != "E2_MSBLQL".AND. aStru[nAux][1] != "E2_MSBLQD")

		aAdd(aColuna,aStru[nAux])

	EndIf
Next

//Verificando se precisa deletar
If(_oFinr155 <> NIL)

	_oFinr155:Delete()
	_oFinr155:= NIL

EndIf
//Criando o objeto
_oFinr155 := FwTemporaryTable():New(cArqTmp)
//Amarrando as colunas neste Objeto
_oFinr155:SetFields(aColuna)
_oFinr155:AddIndex("1",{"E2_FILIAL","E2_NATUREZ","E2_NOMFOR","E2_PREFIXO","E2_NUM","E2_PARCELA","E2_TIPO","E2_FORNECE"})

_oFinr155:Create()

DbSelectArea("SE2")

titulo := titulo + OemToAnsi(STR0017)  //" - Por Natureza"
DbSelectArea("SE2")
DbGoTop()

// Gera o arquivo temporario por natureza
While SE2->(!Eof())
	
	/*
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se nao atender a condicao para impressao, despreza o registro³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	If !Fr155Cond(cTipos)
		DbSkip()
		Loop
	EndIf	
	/*
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se estiver utilizando multiplas naturezas, verifica o codigo da natureza³
	//³do arquivo de multiplas naturezas (SEV)                                 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
  	If MV_MULNATP .And. E2_MULTNAT == "1"
   	If !PesqNatSev("SE2","E2", MV_PAR05, MV_PAR06)
			DbSkip()
			Loop
		Endif
	Else	
		/*
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Senao, verifica o codigo da natureza do SE2³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		*/
		If SE2->E2_NATUREZ < mv_par05 .OR. SE2->E2_NATUREZ > mv_par06 
	  		DbSkip()
			Loop
	  	Endif
	Endif
		
	dDataReaj := If(E2_VENCREA < dDataBase,;
	             If(mv_par17=1,dDataBase,E2_VENCREA),dDataBase)
					 
   // Se estiver utilizando multiplas naturezas, verifica o arquivo de multiplas
	// naturezas (SEV), inclui diversos registro no SE2 temporario
	aSaldo := SdoTitNat(E2_PREFIXO     ,;
							  E2_NUM         ,;
							  E2_PARCELA     ,;
							  E2_TIPO        ,;
							  E2_FORNECE     ,;
							  E2_LOJA,       ,;
							  "P"            ,;
							  "SE2"          ,;
							  MV_PAR15       ,;
							  MV_PAR21 == 1  ,;
							  dDataReaj	)

	//Tratamento no ultimo registro do array, pois a função SdoTitNat() totaliza a diferença de saldo na ultima natureza.
	If MV_MULNATP .And. E2_MULTNAT == "1"
		aSaldo[Len(aSaldo),2] -= SE2->E2_SDDECRE
	Endif

	DbSelectArea(cArqTmp)
	For nX := 1 To Len( aSaldo )
		If aSaldo[nX][1] >= MV_PAR05 .And. aSaldo[nX][1]<= MV_PAR06
			DbAppend()
			For nY := 1 To SE2->(fCount())
			    If SE2->(AllTrim(FieldName(nY))) != "R_E_C_N_O_" .And. SE2->(AllTrim(FieldName(nY))) != "R_E_C_D_E_L_" .AND. ;
			    	SE2->(AllTrim(FieldName(nY))) != "E2_MSBLQL".AND. SE2->(AllTrim(FieldName(nY))) != "E2_MSBLQD"
			    	
					(cArqTmp)->(FieldPut(nY,SE2->(FieldGet(nY))))
				EndIf	
			Next
			(cArqTmp)->E2_NATUREZ := aSaldo[nX][1]
			(cArqTmp)->E2_SALDO   := aSaldo[nX][2]
			(cArqTmp)->E2_VALOR   := aSaldo[nX][4]
			// nao deve olhar abatimento pois e zerado o saldo na liquidacao final do titulo
			If !(E2_TIPO $ MVPAGANT+"/"+MV_CPNEG) .And. !(MV_PAR21 == 2 .And. E2_SALDO == 0) 
				(cArqTmp)->E2_SALDO -= aSaldo[nX][5]
			EndIf
		Endif
	Next
	DbSelectArea("SE2")
	SE2->(DbSkip())
Enddo

DbSelectArea( cArqTmp )
DbGoTop()
While !Eof()

	If lEnd
		@PROW()+1,001 PSAY OemToAnsi(STR0028)  //"CANCELADO PELO OPERADOR"
		Exit
	Endif
		
	IncRegua()
	
	cNatAnt := E2_NATUREZ
	aTotais := { 0,0,0,0,0,0 } // Totais por natureza
	nJuros  := 0
	
	// Processa todas a naturezas
	While E2_NATUREZ == cNatAnt .And. !Eof()

		// Guarda o numero do titulo para verificar se totaliza o valor do titulo
		cTitAnt := E2_PREFIXO+E2_NUM+E2_PARCELA+E2_TIPO 
			
		If lEnd
			@PROW()+1,001 PSAY OemToAnsi(STR0028)  //"CANCELADO PELO OPERADOR"
			Exit
		Endif
			
		IncRegua()
			
		nSaldo := E2_SALDO
		nSaldo := Round(NoRound(nSaldo,3),2)
			
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ So considera caso saldo seja maior que zero  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nSaldo > 0
			
			dbSelectArea("SA2")
			MSSeek(xFilial("SA2")+(cArqTmp)->(E2_FORNECE+E2_LOJA))
			DbSelectArea(cArqTmp)
			
			If mv_par21 == 1
				//Verifica se existem compensações em outras filiais para descontar do saldo, pois a SaldoTit() somente
				//verifica as movimentações da filial corrente. Nao deve processar quando existe somente uma filial.
				If !Empty(xFilial("SE2")) .And. !Empty(xFilial("SE5"))
					nSaldo -= FRVlCompFil("P", E2_PREFIXO, E2_NUM, E2_PARCELA, E2_TIPO, E2_FORNECE, E2_LOJA, IIF(mv_par34 == 2,3,1),,,,mv_par15,E2_MOEDA, If(mv_par35==1,E2_TXMOEDA, Nil), dDataReaj, .T.)
				EndIf			
			Else
				nSaldo := xMoeda((E2_SALDO+E2_SDACRES-E2_SDDECRE), E2_MOEDA, mv_par15, dDataReaj,ndecs + 1, If(mv_par35==1, E2_TXMOEDA, Nil))
			EndIf			
			
			IF li > 58
				nAtuSM0 := SM0->(Recno())
				SM0->(dbGoto(nRegSM0))
				cabec(titulo,cabec1,cabec2,nomeprog,tamanho,GetMv("MV_COMP"))
				SM0->(dbGoTo(nAtuSM0))
			EndIF
			
			If mv_par20 == 1
				@li,	0 PSAY E2_FORNECE + "-" + E2_LOJA + "-" + IIF(mv_par28 == 1, SubStr(SA2->A2_NREDUZ,1,20), SubStr(SA2->A2_NOME,1,20))
				li := IIf (aTamFor[1] > 6,li+1,li)
				@li, 28 PSAY E2_PREFIXO+"-"+E2_NUM+"-"+E2_PARCELA
				@li, 58 PSAY E2_TIPO
				@li, 62 PSAY E2_NATUREZ
				@li, 73 PSAY E2_EMISSAO
				@li, 84 PSAY E2_VENCTO
				@li, 95 PSAY E2_VENCREA
				@li, 107 PSAY xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1) * If(E2_TIPO$MVPAGANT+"/"+MV_CPNEG,-1,1) Picture PesqPict("SE2","E2_VALOR",14,MV_PAR15)				
			Endif
			
			If dDataBase > E2_VENCREA	//vencidos
				If mv_par20 == 1
				@li, IIf(cPaisloc=="BRA",123,114) PSAY nSaldo  * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1) Picture PesqPict("SE2","E2_SALDO",14,MV_PAR15) 
				EndIf
				nJuros:=fa080Juros(mv_par15,,Alias())
				If mv_par20 == 1
 					@li,IIf(cPaisloc=="BRA",140,130) PSAY (nSaldo+nJuros)  * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1) Picture PesqPict("SE2","E2_SALDO",14,MV_PAR15) 
				EndIf
				If E2_TIPO $ MVPAGANT+"/"+MV_CPNEG
					aTotais[1] -= xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[2] -= (nSaldo)
					aTotais[3] -= (nSaldo+nJuros)
				Else
					aTotais[1] += xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[2] += (nSaldo)
					aTotais[3] += (nSaldo+nJuros)
				Endif
			Else						//a vencer
				// Analitico
				If mv_par20 == 1
 				@li,159 PSAY nSaldo  * If(E2_TIPO$MV_CPNEG+"/"+MVPAGANT,-1,1) Picture PesqPict("SE2","E2_SALDO",14,MV_PAR15) 
				EndIf
				If ! ( E2_TIPO $ MVPAGANT+"/"+MV_CPNEG)
					aTotais[1] += xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[4] += nSaldo
				Else
					aTotais[1] -= xMoeda(E2_VALOR,E2_MOEDA,mv_par15,E2_EMISSAO,ndecs+1)
					aTotais[4] -= nSaldo
				Endif
			Endif
			
			// Analitico
			If mv_par20 == 1
				@ li, 177 PSAY E2_PORTADO
			EndIf
			If nJuros > 0
				If mv_par20 == 1
					@ Li,173 PSAY nJuros Picture PesqPict("SE2","E2_JUROS",12,MV_PAR15)
				EndIf
			Endif
			
			IF dDataBase > E2_VENCREA
				nAtraso:=dDataBase-E2_VENCTO
				IF Dow(E2_VENCTO) == 1 .Or. Dow(E2_VENCTO) == 7
					IF Dow(dBaixa) == 2 .and. nAtraso <= 2
						nAtraso := 0
					EndIF
				EndIF
				nAtraso:=IIF(nAtraso<0,0,nAtraso)
				IF nAtraso>0 .And. mv_par20 == 1
					@li ,199 PSAY nAtraso Picture "9999"
				EndIF
			EndIF
			If mv_par20 == 1
				@li,Iif(cPaisloc=="BRA",205,194) PSAY SubStr(E2_HIST,1,17)+ ;
					IIF(E2_TIPO $ MVPROVIS,"*"," ")+ ;
					Iif(nSaldo == xMoeda(E2_VALOR,E2_MOEDA,mv_par15,dDataReaj,ndecs+1)," ","P")
			EndIf
			
			DbSelectArea( cArqTmp )
			dbSkip()
			
			aTotais[5] ++
			aTotais[6] += nJuros
			
			If mv_par20 == 1
				li++
			EndIf
		   nTotTit ++
		Else
			DbSelectArea( cArqTmp )
			dbSkip()
		EndIf
	Enddo // Mudou a natureza
	nTot0 += aTotais[1]
	nTot1 += aTotais[2]
	nTot2 += aTotais[3]
	nTot3 += aTotais[4]
	
	nTotJ += aTotais[6]
	IF aTotais[5] > 0 
	   SubTot150(aTotais[1],aTotais[2],aTotais[3],aTotais[4],,2,cNatAnt,aTotais[6])
	   If mv_par20 == 1
	      Li++
	   EndIf
	Endif
	DbSelectArea( cArqTmp )
EndDo

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Apaga arquivos tempor rios  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If(_oFinr155 <> NIL)
	_oFinr155:Delete()
	_oFinr155 := NIL
EndIf

SE2->(RestArea(aAreaSe2))

Return Nil

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºRotina    ³Fr155Cond ºAutor  ³Claudio D. de Souza º Data ³  28/08/01   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Avalia condicoes para filtrar os registros que serao       º±±
±±º          ³ impressos.                                                 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FINR155                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Fr155Cond(cTipos)
Local lRet := .T.,;
		dDtContab  
// dDtContab para casos em que o campo E2_EMIS1 esteja vazio
dDtContab := Iif(Empty(SE2->E2_EMIS1),SE2->E2_EMISSAO,SE2->E2_EMIS1)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Filtrar com base no Pto de entrada do Usuario...             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄJose Lucas, Localizaes ArgentinaÄÙ
Do Case 
Case !Empty(cFilterUser).and.!(&cFilterUser)
	lRet := .F.
Case !Empty(SE2->E2_BAIXA) .and. Iif(mv_par21 == 2 ,SE2->E2_SALDO == 0 ,;
	  Iif(mv_par34 == 1,(SE2->E2_SALDO == 0 .and. SE2->E2_BAIXA <= dDataBase),.F.))
	lRet := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se trata-se de abatimento ou somente titulos³
//³ at a data base. 									         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
Case SE2->E2_TIPO $ MVABATIM .Or. (SE2 -> E2_EMISSAO > dDataBase .and. mv_par36 == 2)
	lRet := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ser  impresso titulos provis¢rios		   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case SE2->E2_TIPO $ MVPROVIS .and. mv_par16 == 2
	lRet := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ser  impresso titulos de Adiantamento	   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Case SE2->E2_TIPO $ MVPAGANT+"/"+MV_CPNEG .and. mv_par27 == 2
	lRet := .F.
Case !Empty(cTipos)
	If AllTrim(Funname()) $ "FINR150" //O P.E FR150FLT retorna uma expressão
		lRet := !(&cTipos)
	ElseIf !(SE2->E2_TIPO $ cTipos)
	   lRet := .F.
	Endif
Case E2_NUM     < mv_par01  .OR. E2_NUM     > mv_par02 .OR. ;
	 E2_PREFIXO < mv_par03  .OR. E2_PREFIXO > mv_par04 .OR. ;
	 E2_NATUREZ < mv_par05  .OR. E2_NATUREZ > mv_par06 .OR. ;
	 E2_VENCREA < mv_par07  .OR. E2_VENCREA > mv_par08 .OR. ;
	 E2_PORTADO < mv_par09  .OR. E2_PORTADO > mv_par10 .OR. ;
	 E2_FORNECE < mv_par11  .OR. E2_FORNECE > mv_par12 .OR. ;
	 E2_EMISSAO < mv_par13  .OR. E2_EMISSAO > mv_par14 .OR. ;
	(E2_EMISSAO > dDataBase .AND. mv_par36 == 2) .OR. dDtContab  < mv_par18 .OR. ;
	 E2_LOJA    < mv_par25  .OR. E2_LOJA    > mv_par26 .OR. ;
	 dDtContab  > mv_par19  .OR. !&(fr150IndR())
	 lRet := .F.
Case mv_par29 == 2 // nao imprime
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se deve imprimir outras moedas³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SE2->E2_MOEDA != mv_par15 //verifica moeda do campo=moeda parametro
		lRet := .F.
	Endif
EndCase
	
Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} SetAliasCell()
Funcao para responsável por setar o alias correto nas cels personalizadas  
@param oSection1 - seção na qual será verificada a inclusão de células de user.
@author Totvs Sa
@since	14/09/2017
@version 12
/*/
//-------------------------------------------------------------------
Static Function SetAliasCell(oSection1)
Local nI := 0
Local nTotCell := len(oSection1:acell)

For nI := 1 To nTotCell 
	If oSection1:acell[nI]:lUserField
		oSection1:acell[nI]:CALIAS := Alias()	
	EndIf 
Next nI  

Return Nil