#INCLUDE "MATA010.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "APWIZARD.CH"
#INCLUDE "FWADAPTEREAI.CH"
#INCLUDE 'FWMVCDEF.CH'

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё MATA010  Ё Autor Ё Jorge Queiroz         Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de atualizacao de Produtos                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё MATA010(ExpA1,ExpN1)                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpA2 = (ROT.AUT) Array dos campos                         Ё╠╠
╠╠Ё          Ё ExpN1 = (ROT.AUT) Numero da opcao selecionada              Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MATA010(xRotAuto,nOpc)

Local aHelpp		:={}
Local aHelpE		:={}
Local aHelpS		:={}
local lCoresPE 		:= .F.
Local uFilPE		:= Nil
Local aIndexSB1		:= {}
Local cFiltro       := ""
Local nX			:= 0

nOpc := If (nOpc == Nil,3,nOpc)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Variaveis                                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define Array contendo as Rotinas a executar do programa      Ё
//Ё ----------- Elementos contidos por dimensao ------------     Ё
//Ё 1. Nome a aparecer no cabecalho                              Ё
//Ё 2. Nome da Rotina associada                                  Ё
//Ё 3. Usado pela rotina                                         Ё
//Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
//Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
//Ё    2 - Simplesmente Mostra os Campos                         Ё
//Ё    3 - Inclui registros no Bancos de Dados                   Ё
//Ё    4 - Altera o registro corrente                            Ё
//Ё    5 - Remove o registro corrente do Banco de Dados          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private l010Auto := ( xRotAuto <> NIL )
Private aRotAuto := Nil
Private aRotina  := MenuDef()
Private aCpoAltSB1 := {} // vetor usado na gravacao do historico de alteracoes
Private aCmpoSB1   := {} // vetor usado na gravacao do historico de alteracoes

STATIC lHistFiscal := HistFiscal()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define o cabecalho da tela de atualizacoes                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE cCadastro := OemtoAnsi(STR0008)         //"Atualiza┤└o de Produtos"

PRIVATE INCLUI    := .F.
PRIVATE ALTERA    := .F.
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Definicao de variaveis para rotina de inclusao automatica    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private aMemos:={{"B1_DESC_I","B1_VM_I"},{"B1_DESC_GI","B1_VM_GI"},{"B1_DESC_P","B1_VM_P"},{"B1_CODOBS","B1_OBS"},{"B1_CODPROC","B1_VM_PROC"}}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de Entrada para Tratamento de Campos Memo - Virtuais   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "MT010MEM" )
	aMemUser := ExecBlock( "MT010MEM", .F., .F. )
	If ValType( aMemUser ) == "A"
		AEval( aMemUser, { |x| AAdd( aMemos, x ) } )
	EndIf
EndIf

AjustaSX3()

AjustaSX7()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Esta vari═vel serve como sem═foro para copia ou repeti┤└o de produtos. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private lCopia    := .F.
/*
  VariАvel que contИm o nome da tabela temporАria utilizada
  para o filtro da integraГЦo com o PCFactory
*/
Private cTmpPPI   := ""

Pergunte("MTA010",.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ativa tecla F4 para comunicacao com Saldos dos Lotes         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l010Auto
	Set Key VK_F4 TO MT010F4()
	Set Key VK_F12 TO MT010Perg()
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Seleciona o Alias SYP para garantir a abertura ( NAO RETIRAR ) Ё
//Ё do arquivo durante a transacao.(AVERAGE)                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SYP")
/*
   Verifica se existe integraГЦo ativa com o PCFactory.
   Se existir, cria a tabela temporАria que И utilizada para 
   realizar os filtros.
*/
If FindFunction('PCPIntgPPI') .And. PCPIntgPPI()
   cTmpPPI := PCPTmpPPI("SB1")
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Endereca a funcao de BROWSE                                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If l010Auto
	aRotAuto := xRotAuto
	MBrowseAuto(nOpc,aRotAuto,"SB1")
Else
	If ( ExistBlock("MA010FIL") )
		//здддддддддддддддддддддддддддддддддддддддддд©
		//ЁPonto de Entrada para Expressao em ADVPL. Ё
		//юдддддддддддддддддддддддддддддддддддддддддды
		uFilPE := ExecBlock("MA010FIL",.F.,.F.)
		If ValType(uFilPE) == "C"
			cFiltro := AllTrim(uFilPE)
		EndIf
	ElseIf ( ExistBlock("M010FILB") )
		//здддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁPonto de Entrada para Expressao em SQL ANSI. Ё
		//юддддддддддддддддддддддддддддддддддддддддддддды
		cFilPE := ExecBlock("M010FILB",.F.,.F.)
		If Valtype(cFilPE) == "C"
			cFiltro := "@"+AllTrim(cFilPE)
		EndIf
	EndIf

	dbSelectArea("SB1")

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё MT010COR - Ponto de Entrada para customizar o array aCores             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ExistBlock("MT010COR")
		lCoresPE := .F.
		aCores := ExecBlock("MT010COR",.F.,.F.)
		If (Valtype(aCores) == "A" .And. Len(aCores) > 0)
		   lCoresPE := .T.
		EndIf
	EndIf

	oMBrowse := FWMBrowse():New()
	oMBrowse:SetAlias("SB1")
	oMBrowse:SetDescription(cCadastro)
	oMBrowse:SetAttach(.T.)
	//Se nЦo for SIGACRM inibe a exibiГЦo do grАfico
	If nModulo <> 73
		oMBrowse:SetOpenChart( .F. )
	EndIf
	oMBrowse:SetTotalDefault("B1_FILIAL","COUNT",STR0092)//"Total de Registros"

	If lCoresPE
		//здддддддддддддддддддддддддддддддддд©
		//Ё Adiciona as legendas no browse. Ё
		//юддддддддддддддддддддддддддддддддды
		For nX := 1 To Len(aCores)
			/*CondiГЦo,Legenda,DescriГЦo*/
			oMBrowse:AddLegend(aCores[nX][1],aCores[nX][2],aCores[nX][3])
		Next nX
	EndIf
	If !Empty(cFiltro)
		oMBrowse:SetFilterDefault(cFiltro)
	EndIf

	oMBrowse:Activate()
EndIf

/*
   Exclui a tabela de filtros da integraГЦo com o PCFactory
*/
If !Empty(cTmpPPI)
   TCDelFile(cTmpPPI)
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desativa a tecla F4 neste momento por seguranca              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l010Auto
	SET KEY VK_F4 TO
	Set Key VK_F12 To
EndIF
Return(.T.)


//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Funcao criada porque no FINA010 tambem existe A010Deleta     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Function Mata010Deleta(cAlias,nReg,nOpc)

Return (A010Deleta(cAlias,nReg,nOpc))


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010DeletaЁ Autor Ё Jorge Queiroz         Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de exclusao de Produtos                           Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A010Deleta(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada 			              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A010Deleta(cAlias,nReg,nOpc)

Static lMTA010E  := NIL
Static lMTA010ET := NIL
Static lMTA010OK := NIL
Static lMT010EXC := NIL

Local cAliasABI  := ""
Local cAliasADJ  := ""
Local cAliasAGC  := ""
Local cAliasAA3  := ""
Local cAliasAA4  := ""
Local cAliasADB  := ""
Local cAliasDTC  := ""
Local cAliasDE5  := ""
Local cAliasCNB  := ""
Local cAliasDU5  := ""
Local cAliasAG8  := ""
Local cAliasAIB  := ""
Local cAliasSU1  := ""
Local cAliasSUG  := ""
Local cAliasSU2  := ""
Local cAliasSUW  := ""
Local cAliasSUF  := ""
Local cAliasAA7	 := ""
Local cAliasAAI	 := ""
Local cAliasAAK	 := ""
Local cAliasAAN	 := ""
Local cAliasAAU	:= ""
Local cAliasSL2 := ""
Local cAliasAII := ""
Local cArqInd    := ""
Local cQuery     := ""
Local cSeek      := ""
Local cMsgNegacao:= ""
Local cProdSGI   := ""
Local cAliasSGI  := ""
Local cAliasSDX	:= ""
Local cAliasSAY	:= ""
Local nIndex     := 0
LOCAL LVar01:=1,nLinhas:=0,bCampo,nOpcA,cCod
LOCAL oDlg, lErro := .F.
Local lFantasma   := .F.
Local nRecnoSM0   := SM0->(RecNo())
Local aSM0CodFil  := {}
Local aFiliais    := {}
Local nBusca
Local lPodeApagar := .T.
Local lApagaSB5   := .T.
Local aButtons    := {}
Local aUsrBut     := {}
Local lGrade      := .F.
Local cCodGr      := ""
Local nTamRef     := Val(Substr(GetMv("MV_MASCGRD"),1,2))
Local lContinua   :=.T.
Local lIntPms     := GetMv("MV_INTPMS",.F.,"N")=="S"
Local lIntRMSOL   := iif(GetMv("MV_RMCOLIG",.F.,0)==0,.F.,.T.)
Local aIntSB1	   := {}
Local aObjects    := {}
Local aSize       := {}
Local aInfo       := {}
Local aPosObj     := {}
Local lIntACD	   := SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local lIntSFC  	:= ExisteSFC("SB1") .And. !IsInCallStack("AUTO010")
Local lIntDPR 	:= IntegraDPR() .And. !IsInCallStack("AUTO010")// Determina se existe integracao com o DPR
Local nRecCod		:= 1
Local aRetInt		:= {}

//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  := FWHasEAI("MATA010",.T.,,.T.)

Local bCampoSB1 := { |x| SB1->(Field(x)) }
Local aCmps     := {}

l010Auto  := If (Type("l010Auto") =="U",.F.,l010Auto)
lMTA010ET := If(lMTA010ET == NIL,ExistTemplate("MTA010E"),lMTA010ET)
lMTA010E  := If(lMTA010E  == NIL,ExistBlock("MTA010E"),lMTA010E)
lMTA010OK := If(lMTA010OK == NIL,ExistBlock("MTA010OK"),lMTA010OK)
lMT010EXC := If(lMT010EXC == NIL,ExistBlock("MT010EXC"),lMT010EXC)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private aTELA[0][0],aGETS[0]
bCampo := {|nCPO| Field(nCPO) }

dbSelectArea("SA7")
dbSetOrder(2)
If dbSeek(xFilial("SA7")+SB1->B1_COD)
     Help(" ",1,"MT010DPRO")
     Return
EndIf

   cAliasDU5 := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "DU5" )
   cQuery += "  WHERE DU5_FILIAL='" + xFilial( "DU5" ) + "'"
   cQuery += "    AND DU5_CODPRO = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasDU5,.F.,.T. )

   If (cAliasDU5)->TOT_PROD > 0
      (cAliasDU5)->(DbCloseArea())
      Aviso(STR0032,STR0049,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela de seguro no ambiente TMS e nao podera ser excluido"###"Ok"
      Return
   Endif

   (cAliasDU5)->(DbCloseArea())

   If ChkFile("AG8")
	   cAliasAG8 := GetNextAlias()
	   cQuery    := ""

	   cQuery += " SELECT COUNT(*) QTD_PROD "
	   cQuery += "   FROM " + RetSqlName( "AG8" )
	   cQuery += "  WHERE AG8_FILIAL='" + xFilial( "AG8" ) + "'"
	   cQuery += "    AND AG8_COD = '" + SB1->B1_COD + "'"
	   cQuery += "    AND D_E_L_E_T_ = ' '"

	   cQuery := ChangeQuery( cQuery )
	   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAG8,.F.,.T. )

	   If (cAliasAG8)->QTD_PROD > 0
		  (cAliasAG8)->(DbCloseArea())
		  Aviso(STR0032,STR0063,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela - Assunto x Inf╢s.Ch e nao podera ser excluido."###"Ok"
		  Return
	   Endif

	   (cAliasAG8)->(DbCloseArea())
   EndIf

   cAliasSUW := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "SUW" )
   cQuery += "  WHERE UW_FILIAL='" + xFilial( "SUW" ) + "'"
   cQuery += "    AND UW_PRODUTO = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSUW,.F.,.T. )

   If (cAliasSUW)->TOT_PROD > 0
      (cAliasSUW)->(DbCloseArea())
      Aviso(STR0032,STR0069,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela de seguro no ambiente TMS e nao podera ser excluido"###"Ok"
      Return
   Endif
   (cAliasSUW)->(DbCloseArea())

   cAliasSUF := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "SUF" )
   cQuery += "  WHERE UF_FILIAL='" + xFilial( "SUF" ) + "'"
   cQuery += "    AND UF_PRODUTO = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSUF,.F.,.T. )

   If (cAliasSUF)->TOT_PROD > 0
      (cAliasSUF)->(DbCloseArea())
      Aviso(STR0032,STR0070,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela (Marketing) e nao podera ser excluido"###"Ok"
      Return
   Endif
   (cAliasSUF)->(DbCloseArea())

   cAliasAA7 := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "AA7" )
   cQuery += "  WHERE AA7_FILIAL='" + xFilial( "AA7" ) + "'"
   cQuery += "    AND AA7_CODPRO = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAA7,.F.,.T. )

   If (cAliasAA7)->TOT_PROD > 0
      (cAliasAA7)->(DbCloseArea())
      Aviso(STR0032,STR0071,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela (Marketing) e nao podera ser excluido"###"Ok"
      Return
   Endif
   (cAliasAA7)->(DbCloseArea())

   cAliasAAI := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "AAI" )
   cQuery += "  WHERE AAI_FILIAL='" + xFilial( "AAI" ) + "'"
   cQuery += "    AND AAI_CODPRO = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAAI,.F.,.T. )

   If (cAliasAAI)->TOT_PROD > 0
      (cAliasAAI)->(DbCloseArea())
      Aviso(STR0032,STR0072,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela (FAQ) e nao podera ser excluido."###"Ok"
      Return
   Endif
   (cAliasAAI)->(DbCloseArea())

   cAliasAAK := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "AAK" )
   cQuery += "  WHERE AAK_FILIAL='" + xFilial( "AAK" ) + "'"
   cQuery += "    AND AAK_CODPRO = '" + SB1->B1_COD + "'" +" OR AAK_CODCOM = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAAK,.F.,.T. )

   If (cAliasAAK)->TOT_PROD > 0
      (cAliasAAK)->(DbCloseArea())
      Aviso(STR0032,STR0073,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela (ObsolescЙncia) e nao podera ser excluido."###"Ok"
      Return
   Endif
   (cAliasAAK)->(DbCloseArea())

   cAliasAAN := GetNextAlias()
   cQuery    := ""

   cQuery += " SELECT COUNT(*) TOT_PROD "
   cQuery += "   FROM " + RetSqlName( "AAN" )
   cQuery += "  WHERE AAN_FILIAL='" + xFilial( "AAN" ) + "'"
   cQuery += "    AND AAN_CODPRO = '" + SB1->B1_COD + "'"
   cQuery += "    AND D_E_L_E_T_ = ' '"

   cQuery := ChangeQuery( cQuery )
   dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAAN,.F.,.T. )

   If (cAliasAAN)->TOT_PROD > 0
      (cAliasAAN)->(DbCloseArea())
      Aviso(STR0032,STR0074,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma tabela (PrestaГЦo de ServiГos) e nao podera ser excluido."###"Ok"
      Return
   Endif
   (cAliasAAN)->(DbCloseArea())

   	cAliasABI := GetNextAlias()

   	cQuery := "SELECT COUNT(*) RECABI FROM "
	cQuery += RetSqlName("ABI") + " ABI "
	cQuery += " WHERE "
	cQuery += "ABI_FILIAL = '"+xFilial("ABI")+"' AND "
	cQuery += "ABI_CODPRO = '" + SB1->B1_COD + "' AND "
	cQuery += "ABI.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasABI,.F.,.T.)

	If (cAliasABI)->RECABI > 0
		(cAliasABI)->(dbCloseArea())
		Aviso(STR0032,STR0075,{STR0031},2) //Este produto esta sendo utilizado em um projeto no mСdulo GestЦo de ServiГos e nЦo poderА ser excluido
		Return
	Endif

	(cAliasABI)->(dbCloseArea())

   	cAliasADJ := GetNextAlias()
   	cQuery := "SELECT COUNT(*) RECADJ FROM "
	cQuery += RetSqlName("ADJ") + " ADJ "
	cQuery += " WHERE "
	cQuery += "ADJ_FILIAL = '"+xFilial("ADJ")+"' AND "
	cQuery += "ADJ_PROD = '" + SB1->B1_COD + "' AND "
	cQuery += "ADJ.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasADJ,.F.,.T.)

	If (cAliasADJ)->RECADJ > 0
		(cAliasADJ)->(dbCloseArea())
		Aviso(STR0032,STR0076,{STR0031},2) //Este produto estА sendo utilizado em oportunidades de venda, e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasADJ)->(dbCloseArea())

   	cAliasAGC := GetNextAlias()
   	cQuery := "SELECT COUNT(*) RECAGC FROM "
	cQuery += RetSqlName("AGC") + " AGC "
	cQuery += " WHERE "
	cQuery += "AGC_FILIAL = '"+xFilial("AGC")+"' AND "
	cQuery += "AGC_CODSB1 = '" + SB1->B1_COD + "' AND "
	cQuery += "AGC.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasAGC,.F.,.T.)

	If (cAliasAGC)->RECAGC > 0
		(cAliasAGC)->(dbCloseArea())
		Aviso(STR0032,STR0077,{STR0031},2) //Este produto estА sendo utilizado em regras de monitoraГЦo de chamados, e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasAGC)->(dbCloseArea())

   	cAliasAAU := GetNextAlias()
   	cQuery := "SELECT COUNT(*) RECAAU FROM "
	cQuery += RetSqlName("AAU") + " AAU "
	cQuery += " WHERE "
	cQuery += "AAU_FILIAL = '"+xFilial("AAU")+"' AND "
	cQuery += "AAU_PRODUT = '" + SB1->B1_COD + "' AND "
	cQuery += "AAU.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasAAU,.F.,.T.)

	If (cAliasAAU)->RECAAU > 0
		(cAliasAAU)->(dbCloseArea())
		Aviso(STR0032,STR0078,{STR0031},2) //Este produto estА sendo utilizado na Vistoria TИcnica, e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasAAU)->(dbCloseArea())

   	cAliasSL2 := GetNextAlias()
   	cQuery := "SELECT COUNT(*) RECSL2 FROM "
	cQuery += RetSqlName("SL2") + " SL2 "
	cQuery += " WHERE "
	cQuery += "L2_FILIAL = '"+xFilial("SL2")+"' AND "
	cQuery += "L2_PRODUTO = '" + SB1->B1_COD + "' AND "
	cQuery += "SL2.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasSL2,.F.,.T.)

	If (cAliasSL2)->RECSL2 > 0
		(cAliasSL2)->(dbCloseArea())
		Aviso(STR0032,STR0079,{STR0031},2) //Este produto estА sendo utilizado no orГamento (Venda Direta/ Venda Assistida), e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasSL2)->(dbCloseArea())

   	cAliasSDX := GetNextAlias()
   	cQuery := "SELECT COUNT(*) RECSDX FROM "
	cQuery += RetSqlName("SDX") + " SDX "
	cQuery += " WHERE "
	cQuery += "DX_FILIAL = '"+xFilial("SDX")+"' AND "
	cQuery += "DX_PRODUTO = '" + SB1->B1_COD + "' AND "
	cQuery += "SDX.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasSDX,.F.,.T.)

	If (cAliasSDX)->RECSDX > 0
		(cAliasSDX)->(dbCloseArea())
		Aviso(STR0032,STR0080,{STR0031},2) //Este produto estА sendo utilizado na ProgramaГЦo de Entrega, e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasSDX)->(dbCloseArea())

   	cAliasSAY := GetNextAlias()
   	cQuery := "SELECT COUNT(*) RECSAY FROM "
	cQuery += RetSqlName("SAY") + " SAY "
	cQuery += " WHERE "
	cQuery += "AY_FILIAL = '"+xFilial("SAY")+"' AND "
	cQuery += "AY_PRODUTO = '" + SB1->B1_COD + "' AND "
	cQuery += "SAY.D_E_L_E_T_ = ' ' "

	cQuery := ChangeQuery(cQuery)

	dBUseArea(.T.,"TOPCONN",TCGENQRY(,,cQuery),cAliasSAY,.F.,.T.)

	If (cAliasSAY)->RECSAY > 0
		(cAliasSAY)->(dbCloseArea())
		Aviso(STR0032,STR0081,{STR0031},2) //Este produto estА sendo utilizado na PublicaГЦo de preГos, e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasSAY)->(dbCloseArea())

	//зддддддддддддддддддддддддддддддддддд©
	//ЁVerifica o Cad. Margem MМnima      Ё
	//юддддддддддддддддддддддддддддддддддды

	cAliasAII := GetNextAlias()
	cQuery    := ""
	cQuery += " SELECT COUNT(*) QTDPROD FROM " + RetSqlName("AII")
	cQuery += " WHERE "
	cQuery += "AII_FILIAL = '" + xFilial("AAI") + "' AND "
	cQuery += "AII_CODPRO = '" + SB1->B1_COD    + "' AND "
	cQuery += "D_E_L_E_T_ = ' '"

	cQuery := ChangeQuery( cQuery )
	dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAII,.F.,.T. )

	If (cAliasAII)->QTDPROD > 0
		(cAliasAII)->(dbCloseArea())
		Aviso(STR0032,STR0082,{STR0031},2) //Este produto estА sendo utilizado no Cad. Margem MМnima, e nЦo poderА ser excluМdo.
		Return
	Endif

	(cAliasAII)->(dbCloseArea())
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё ValidaГЦo de exclusЦo de registro para os mСdulos SIGAEIC/SIGAESS  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
	If nModulo == 17 .OR. nModulo == 85
	   If !EICDelProd()
	      Return .F.
	   Endif
	EndIf
	
If ExistTemplate( "MA010BUT" )
	If Valtype( aUsrBut := ExecTemplate( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

If ExistBlock( "MA010BUT" )
	If Valtype( aUsrBut := Execblock( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

SB4->(DbSetOrder(1))

PERGUNTE("MTA010",.F.)

A010Int( 1, nOpc, aIntSB1 )

While .T.
	//зддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ajusta a largura para o tamanho padrao Protheus Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддды
	aSize := MsAdvSize()
	aSize[5] := 1155

	aObjects := {}
	AAdd( aObjects, { 100, 100, .T., .T. } )
	aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 }

	aPosObj := MsObjSize( aInfo, aObjects )

	//здддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Envia para processamento dos Gets          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддды
	nOpcA:=0

	IF !SoftLock(cAlias)
		lContinua := .F.
		Exit
	Endif

	If lContinua
		If !( l010Auto )
			SB5->(DbSetOrder(1))
			If MV_PAR02 == 1 .AND. SB5->(DbSeek(xFilial("SB5")+SB1->B1_COD))
				nOpcA := A010DELPeC(cAlias,nReg,nOpc)
			Else
				DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
				nOpcA:=EnChoice( cAlias, nReg, nOpc,,,,,aPosObj[1])
				ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpca := 2,oDlg:End()},{|| nOpca := 1,oDlg:End()},,aButtons)
			EndIf
		Else
			nOpca := 2
		EndIf
		DbSelectArea(cAlias)

		IF nOpcA == 2
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Antes de deletar eu vou verificar se existe movimentacao     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

			// Preenche um array com as filiais

			dbSelectArea("SM0")
			dbGoTop()
			do While ! Eof()
				If SM0->M0_CODIGO == cEmpAnt
					Aadd(aSM0CodFil, FWGETCODFILIAL)
				Endif
				dbSkip()
			Enddo
			msGoto(nRecnoSM0)

			cCod := SB1->B1_COD
			lGrade := (SB1->B1_GRADE=="S")
			dbSelectArea("SB2")      // saldos fisico e financeiro

			aFiliais := If(! Empty(FwFilial("SB2")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB2")})

			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				While !EOF() .And. aFiliais[nBusca]+cCod == B2_FILIAL+B2_COD
					If B2_QATU != 0
						HELP(" ",1,"MA0101")
						lErro := .T.
						Exit
					EndIf
					dbSkip()
				EndDo
			Next

			IF  lMTA010OK .and. !lErro
				lErro := ExecBlock("MTA010OK",.f.,.f.)
				If ValType(lErro) <> "L"
					lErro := .T.
				EndIf
				lErro := !lErro
			Endif

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Funcao Especifica SIGAEIC - AVERAGE                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			lErro := If(!lErro,!MTA010OK(),lErro)

			If lErro
				dbSelectArea(cAlias)
				MsUnLock()
				lPodeApagar := .F.
				Exit
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Funcao Especifica SIGAMDT - NG INFORMATICA                 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			lErro := MdtValESb1(cCod)
			If lErro
				dbSelectArea(cAlias)
				MsUnLock()
				lPodeApagar := .F.
				Exit
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Funcao Especifica NG INFORMATICA                           Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			lErro := !NGVALSX9("SB1",{"TN3","TNF","TNB","TOH","TNX"},.T.)
			If lErro
				dbSelectArea(cAlias)
				MsUnLock()
				lPodeApagar := .F.
				Exit
			EndIf

			dbSelectArea("SB9")      // Saldos Iniciais

			aFiliais := If(! Empty(FwFilial("SB9")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB9")})

			For nBusca := 1 to Len(aFiliais)
				If dbSeek(aFiliais[nBusca]+cCod)
					If (lFantasma := (RetFldProd(SB1->B1_COD,"B1_FANTASM") == "S"))  // Projeto Implementeacao de campos MRP e FANTASM no SBZ
						lErro := .F.
						// colocado o alias do B9
						While SB9->( !Eof()) .And. !lErro .And. aFiliais[nBusca]+cCod==SB9->B9_FILIAL+SB9->B9_COD
							lErro := (SB9->B9_QINI # 0)
							SB9->( dbSkip())
						End
						If lErro
							Exit
						Endif
					EndIf
				Endif
			Next

			If lErro
				HELP(" ",1,"MA0101")
				dbSelectArea(cAlias)
				MsUnLock()
				lPodeApagar := .F.
				Exit
			Endif

			dbSelectArea("SC1")      // solicitacoes de compra

			aFiliais := If(! Empty(FwFilial("SC1")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SC1")})

			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(2)  // seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA10SC")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SC2")      // ordens de producao

			aFiliais := If(! Empty(FwFilial("SC2")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SC2")})

			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(2)  // seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA010OP")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SC4")      // previsoes de vendas

			aFiliais := If(! Empty(FwFilial("SC4")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SC4")})

			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_03")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SC6")      // itens dos pedidos de vendas

			aFiliais := If(! Empty(FwFilial("SC6")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SC6")})

			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(2)  // seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA010_04")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SC7")      // pedido de compra

			aFiliais := If(! Empty(FwFilial("SC7")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SC7")})

			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(2)  // seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA10PC")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SC3")      	// Autorizacao de Entrega

			aFiliais := If(! Empty(FwFilial("SC3")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SC3")})

			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(3)  				// seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  				// retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"A010AE")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SD1")      // itens das notas fiscais de entrada

			aFiliais := If(! Empty(FwFilial("SD1")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SD1")})
			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(2)  // seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA10NE")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SD2")      // itens das notas fiscais de saida

			aFiliais := If(! Empty(FwFilial("SD2")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SD2")})
			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(1)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA10NE")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SD3")      // movimentacoes internas

			aFiliais := If(! Empty(FwFilial("SD3")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SD3")})
			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(3)  // seleciona o indice por produto
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA010MI")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SG1")      // estruturas dos produtos

			aFiliais := If(! Empty(FwFilial("SG1")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SG1")})
			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_07")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			// Uso o mesmo aFiliais pois se trata (ainda) do mesmo arquivo
			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(2)  // seleciona o indice por componente
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)  // retorna ao indice principal do arquivo
				If Found()
					HELP(" ",1,"MA010_08")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SG2")      // roteiro de fabricacao

			aFiliais := If(! Empty(FwFilial("SG2")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SG2")})
			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_09")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SBG")      // Sugestao de Or┤amento
			dbSetOrder(1)

			aFiliais := If(! Empty(FwFilial("SBG")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SBG")})
			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_10")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SBH")      // Sugestao de Or┤amento
			dbSetOrder(1)

			aFiliais := If(! Empty(FwFilial("SBH")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SBH")})
			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_10")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SBH")      // Sugestao de Or┤amento (Componente)
			If !SIX->(DbSeek("SBH2"))    						// procurando por indice novo
				Aviso(STR0007,STR0059,{STR0031},3)					// "AtenГЦo!" "Ocorreu um erro durante a atualizaГЦo da tabela." "Atualize o dicionАrio atravИs do UPDFAT15. DisponМvel pela FNC 01000000293422010."
				dbSelectArea(cAlias)
				MsUnLock()
 				lPodeApagar := .F.
				Exit
 			EnDif
			dbSetOrder(2)			 // BH_FILIAL+BH_CODCOMP+BH_PRODUTO

			aFiliais := If(! Empty(FwFilial("SBH")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SBH")})
			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_10")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeAPagar
				Exit
			Endif

			dbSelectArea("SCK")      // Sugestao de Or┤amento

			aFiliais := If(! Empty(FwFilial("SCK")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SCK")})
			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(3)
				dbSeek(aFiliais[nBusca]+cCod)
				dbSetOrder(1)
				If Found()
					HELP(" ",1,"MA010_11")
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If ! lPodeApagar
				Exit
			Endif

			dbSelectArea("SCP")      // Solicitacao ao Armazem
			dbSetOrder(2)

			aFiliais := If(! Empty(FwFilial("SCP")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SCP")})
			For nBusca := 1 to Len(aFiliais)
				If dbSeek(aFiliais[nBusca]+cCod)
					Aviso(STR0032,STR0038,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma Solict.ao Armazem e nao podera ser excluido."###"Ok"
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If !lPodeAPagar
				Exit
			Endif

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe algum contrato de direito autoral com o produto selecionado.Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("AH1")      // Contrato de Direito Autoral

			aFiliais := If(! Empty(FwFilial("AH1")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("AH1")})
			For nBusca := 1 to Len(aFiliais)
				dbSetOrder(1)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
					HELP(" ",1,"MA010_12",,OemToAnsi(STR0016),1,0) //"O produto nao podera ser excluido pois existem contratos de direito autoral com este preoduto "
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			dbSelectArea("SIX")
			If SIX->(dbSeek("AH8"+"3"))
				dbSelectArea("AH8")      // Cadastro de Produto Master - SIGACDA
				aFiliais := If(! Empty(FwFilial("AH8")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("AH8")})
				For nBusca := 1 to Len(aFiliais)
					dbSetOrder(3)
					dbSeek(aFiliais[nBusca]+cCod)
					If Found()
						HELP(" ",1,"MA010_13")
						dbSelectArea(cAlias)
						MsUnLock()
						lPodeApagar := .F.
						Exit
					EndIf
				Next
			EndIf



			If ! lPodeApagar
				Exit
			Endif

			If lPodeApagar
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica se existem Variedades de Produto  - Gestao Agricola   Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				dbSelectArea("NNV")
				dbSetOrder(1)
				aFiliais := If(! Empty(FwFilial()) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial()})
				For nBusca := 1 to Len(aFiliais)
					If dbSeek( aFiliais[nBusca] + SB1->B1_COD)
						HELP(" ",1,"MA010AGR")
						lPodeApagar := .F.
						Exit
					EndIf
				Next
			Endif

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe Produto x EndereГo cadastrado (ACD)                         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
            If lIntACD
	            If MTA010PXE(SB1->B1_COD)
    	           lPodeApagar := .F.
                   Exit
        	    EndIf
            EndIf

           	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe Mestre de Inventario cadastrado para o produto (ACD)        Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
            If lIntACD
	            If MTA010MI(SB1->B1_COD)
    	           lPodeApagar := .F.
                   Exit
        	    EndIf
            EndIf
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe algum indicador do produto cadastrado                       Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SBZ")      // Indicador de Produtos
			dbSetOrder(1)

			aFiliais := If(! Empty(FwFilial("SBZ")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SBZ")})
			For nBusca := 1 to Len(aFiliais)
				If dbSeek(aFiliais[nBusca]+cCod)
					Aviso(STR0032,STR0039,{STR0031},2) //"Atencao!"###"O produto nao poderА ser excluМdo pois hА um indicador cadastrado em Indicadores do Produto."###"Ok"
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

            If ! lPodeAPagar
				Exit
			Endif

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se existe Base Instalada                         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			cAliasAA3 := GetNextAlias()
			cQuery    := ""

			cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "AA3" ) + " "
			cQuery += "WHERE "
			cQuery += "AA3_FILIAL='" + xFilial( "AA3" ) + "' AND "
			cQuery += "AA3_CODPRO='" + cCod             + "' AND "
			cQuery += "D_E_L_E_T_=' '"

			cQuery := ChangeQuery( cQuery )
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAA3,.F.,.T. )

			If (cAliasAA3)->QTDBASE > 0
				Help(" ",1,"NODELSB1")
				lPodeApagar := .F.
			Endif

			dbSelectArea(cAliasAA3)
			dbCloseArea()
			dbSelectArea("AA3")

			If !lPodeApagar
				Exit
			EndIf

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se existe Acessorio da Base Instalada            Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			cAliasAA4 := GetNextAlias()
			cQuery    := ""

			cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "AA4" ) + " "
			cQuery += "WHERE "
			cQuery += "AA4_FILIAL='" + xFilial( "AA4" ) + "' AND "
			cQuery += "AA4_PRODAC='" + cCod             + "' AND "
			cQuery += "D_E_L_E_T_=' '"

			cQuery := ChangeQuery( cQuery )
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAA4,.F.,.T. )

			If (cAliasAA4)->QTDBASE > 0
				Help(" ",1,"NODELSB1")
				lPodeApagar := .F.
			EndIf

			dbSelectArea(cAliasAA4)
			dbCloseArea()
			dbSelectArea("AA4")

			If !lPodeApagar
				Exit
			Endif

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se existe Tabela de precos                       Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lPodeApagar
				DA1->(dbSetOrder(2))
				If DA1->(MsSeek(xFilial("DA1")+cCod))
					Help(" ",1,"NODELETA",, STR0019,2,0 )
					lPodeApagar := .F.
				Endif

				If ! lPodeApagar
					Exit
				Endif

			Endif

			dbSelectArea("AIB")
			aFiliais := If(! Empty(FwFilial("AIB")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("AIB")})
			For nBusca := 1 to Len(aFiliais)
				//здддддддддддддддддддддддддддддддддддд©
				//Ё Verifica se existe tabela de PreГo Ё
				//юдддддддддддддддддддддддддддддддддддды
				cAliasAIB := GetNextAlias()
				cQuery    := ""

				cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "AIB" ) + " "
				cQuery += "WHERE "
				cQuery += "AIB_FILIAL='" + aFiliais[nBusca] + "' AND "
				cQuery += "AIB_CODPRO='" + cCod             + "' AND "
				cQuery += "D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAIB,.F.,.T. )

				If (cAliasAIB)->QTDBASE > 0
					Help(" ",1,"NODELETA",, STR0019,2,0 )
					lPodeApagar := .F.
				Endif

				dbSelectArea(cAliasAIB)
				dbCloseArea()
			Next nBusca

			If !lPodeApagar
				Exit
			EndIf

			dbSelectArea("ADB")
			aFiliais := If(! Empty(FwFilial("ADB")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("ADB")})
			For nBusca := 1 to Len(aFiliais)
				//зддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica se existe contrato de parceria Ё
				//юддддддддддддддддддддддддддддддддддддддддды
				cAliasADB := GetNextAlias()
				cQuery    := ""

				cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "ADB" ) + " "
				cQuery += "WHERE "
				cQuery += "ADB_FILIAL='" + aFiliais[nBusca] + "' AND "
				cQuery += "ADB_CODPRO='" + cCod             + "' AND "
				cQuery += "D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasADB,.F.,.T. )

				If (cAliasADB)->QTDBASE > 0
					Aviso(STR0032,STR0030,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por um contrato de parceria e nao podera ser excluido."###"Ok"
					lPodeApagar := .F.
				Endif

				dbSelectArea(cAliasADB)
				dbCloseArea()
			Next nBusca

			If !lPodeApagar
				Exit
			EndIf

			dbSelectArea("CNB")
			aFiliais := If(! Empty(FwFilial("CNB")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("CNB")})
			For nBusca := 1 to Len(aFiliais)
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica se existe planilha de contrato - Gestao de Contratos Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

				cAliasCNB := GetNextAlias()
				cQuery    := ""

				cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "CNB" ) + " CNB "
				cQuery += "WHERE "
				cQuery += "CNB_FILIAL='" + aFiliais[nBusca] + "' AND "
				cQuery += "CNB_PRODUT='" + cCod             + "' AND "
				cQuery += "D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasCNB,.F.,.T. )

				If (cAliasCNB)->QTDBASE > 0
					Aviso(STR0032,STR0041,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por um contrato do ambiente 'GestЦo de Contratos' e nao podera ser excluido"###"Ok"
					lPodeApagar := .F.
				Endif

				dbSelectArea(cAliasCNB)
				dbCloseArea()
			Next nBusca

			If !lPodeApagar
				Exit
			EndIf

			If IntTMS() //Validacao de exclusao do produto - ambiente SIGATMS
				dbSelectArea("DTC")
				aFiliais := Iif(! Empty(FwFilial("DTC")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("DTC")})
				For nBusca := 1 To Len(aFiliais)
					//зддддддддддддддддддддддддддддддддддддддддд©
					//Ё Verifica se existe nota fiscal          Ё
					//юддддддддддддддддддддддддддддддддддддддддды
					cAliasDTC := GetNextAlias()
					cQuery    := ""

					cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "DTC" ) + " "
					cQuery += "WHERE "
					cQuery += "DTC_FILIAL='" + aFiliais[nBusca] + "' AND "
					cQuery += "DTC_CODPRO='" + cCod             + "' AND "
					cQuery += "D_E_L_E_T_=' '"

					cQuery := ChangeQuery( cQuery )
					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasDTC,.F.,.T. )

					If (cAliasDTC)->QTDBASE > 0
						Aviso(STR0032,STR0035,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma nota fiscal de cliente e nao podera ser excluido."###"Ok"
						lPodeApagar := .F.
					EndIf

					dbSelectArea(cAliasDTC)
					dbCloseArea()

					If !lPodeApagar
						Exit
					EndIf

				Next nBusca

				If lPodeApagar
					dbSelectArea("DE5")
					aFiliais := Iif(! Empty(FwFilial("DE5")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("DE5")})
					For nBusca := 1 To Len(aFiliais)
						//зддддддддддддддддддддддддддддддддддддддддд©
						//Ё Verifica se existe nota fiscal de EDI   Ё
						//юддддддддддддддддддддддддддддддддддддддддды
						cAliasDE5 := GetNextAlias()
						cQuery    := ""

						cQuery += "SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "DE5" ) + " "
						cQuery += "WHERE "
						cQuery += "DE5_FILIAL='" + aFiliais[nBusca] + "' AND "
						cQuery += "DE5_CODPRO='" + cCod             + "' AND "
						cQuery += "D_E_L_E_T_=' '"

						cQuery := ChangeQuery( cQuery )
						dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasDE5,.F.,.T. )

						If (cAliasDE5)->QTDBASE > 0
							Aviso(STR0032,STR0036,{STR0031},2) //"Atencao!"###"Este produto esta sendo utilizado por uma nota fiscal de EDI e nao podera ser excluido."###"Ok"
							lPodeApagar := .F.
						Endif

						dbSelectArea(cAliasDE5)
						dbCloseArea()

						If !lPodeApagar
							Exit
						EndIf

					Next nBusca
			    Endif
				If !lPodeApagar
					Exit
				EndIf
			EndIf

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё VERIFICA SE O PRODUTO ESTA CADASTRADO E EM USO POR ALGUMA COMPOSICAO NO PMS    Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
            If lIntPms .And. lPodeApagar
				lPodeApagar := PmsVerComp(cCod)

				If !lPodeApagar
					Exit
				EndIf

			EndIf

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe registros cadastrados (WMS)                                 Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If	IntDL(cCod)
				If	lPodeApagar
					dbSelectArea("DCG")
					dbSetOrder(1) //DCG_FILIAL+DCG_CODPRO+DCG_SERVIC
					aFiliais := Iif(!Empty(FwFilial("DCG")) .And. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("DCG")})
					For nBusca := 1 To Len(aFiliais)
						If	DCG->(dbSeek(aFiliais[nBusca]+cCod))
							Help("", 1, "MT010WMS")
							lPodeApagar := .F.
						EndIf
					Next nBusca
				EndIf
				If	lPodeApagar
					dbSelectArea("DCH")
					dbSetOrder(1) //DCH_FILIAL+DCH_CODPRO+DCH_CODZON
					aFiliais := Iif(!Empty(FwFilial("DCH")) .And. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("DCH")})
					For nBusca := 1 To Len(aFiliais)
						If	DCH->(dbSeek(aFiliais[nBusca]+cCod))
							Help("", 1, "MT010WM1")
							lPodeApagar := .F.
						EndIf
					Next nBusca
				EndIf
				If	lPodeApagar
					dbSelectArea("DC3")
					dbSetOrder(1) //DC3_FILIAL+DC3_CODPRO+DC3_LOCAL+DC3_ORDEM
					aFiliais := Iif(!Empty(FwFilial("DC3")) .And. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("DC3")})
					For nBusca := 1 To Len(aFiliais)
						If	DC3->(dbSeek(aFiliais[nBusca]+cCod))
							Help("", 1, "MT010WM2")
							lPodeApagar := .F.
						EndIf
					Next nBusca
				EndIf
				If !lPodeApagar
					Exit
				EndIf
			EndIf

				//здддддддддддддддддддддддддд©
				//ЁVerifica regra de descontoЁ
				//юдддддддддддддддддддддддддды
			If	lPodeApagar
				cAliasACP := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "ACP" )
				cQuery += " WHERE "
				cQuery += " ACP_FILIAL='" + xFilial("ACP") + "' AND "
				cQuery += " ACP_CODPRO='" + cCod            + "' AND "
				cQuery += " D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasACP,.F.,.T. )

				If (cAliasACP)->QTDBASE > 0
					cMsgNegacao := STR0053 //"Este produto esta sendo utilizado por uma regra de desconto"
					lPodeApagar := .F.
				Endif

				(cAliasACP)->(dbCloseArea())

			EndIf

				//зддддддддддддддддддддддддддддд©
				//ЁVerifica regra de bonificaГЦoЁ
				//юддддддддддддддддддддддддддддды
			If lPodeApagar
				cAliasACQ_R := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT ACQ_CODPRO PROD FROM " + RetSqlName( "ACQ" )
				cQuery += "  WHERE ACQ_FILIAL='" + xFilial("ACR") + "' AND ACQ_CODPRO='" + cCod + "' AND D_E_L_E_T_ = ' ' "
				cQuery += " UNION "
				cQuery += " SELECT ACR_CODPRO PROD FROM " + RetSqlName( "ACR" )
				cQuery += "  WHERE ACR_FILIAL='" + xFilial("ACR") + "' AND ACR_CODPRO='" + cCod + "' AND D_E_L_E_T_ = ' ' "

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasACQ_R,.F.,.T. )

				If (cAliasACQ_R)->(!Eof())
					cMsgNegacao := STR0054 //"Este produto esta sendo utilizado por uma regra de bonificaГЦo"
					lPodeApagar := .F.
				Endif

				(cAliasACQ_R)->(dbCloseArea())

			EndIf
				//зддддддддддддддддддддддддддддд©
				//ЁVerifica regra de negocios   Ё
				//юддддддддддддддддддддддддддддды
			If lPodeApagar
				cAliasACX_N := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT ACX_CODPRO PROD FROM " + RetSqlName( "ACX" )
				cQuery += "  WHERE ACX_FILIAL='" + xFilial("ACX") + "' AND ACX_CODPRO='" + cCod + "' AND D_E_L_E_T_ = ' ' "
				cQuery += " UNION "
				cQuery += " SELECT ACN_CODPRO PROD FROM " + RetSqlName( "ACN" )
				cQuery += "  WHERE ACN_FILIAL='" + xFilial("ACN") + "' AND ACN_CODPRO='" + cCod + "' AND D_E_L_E_T_ = ' ' "

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasACX_N,.F.,.T. )

				If (cAliasACX_N)->(!Eof())
					cMsgNegacao := STR0055 //"Este produto esta sendo utilizado por uma regra de negocios"
					lPodeApagar := .F.
				Endif

				(cAliasACX_N)->(dbCloseArea())
			EndIf

				//зддддддддддддддддддддддддддддддддддд©
				//ЁVerifica regra de bonif. financeiraЁ
				//юддддддддддддддддддддддддддддддддддды
			If	lPodeApagar
				cAliasAI2 := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "AI2" )
				cQuery += " WHERE "
				cQuery += " AI2_FILIAL='" + xFilial("AI2") + "' AND "
				cQuery += " AI2_CODPRO='" + cCod            + "' AND "
				cQuery += " D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAI2,.F.,.T. )

				If (cAliasAI2)->QTDBASE > 0
					cMsgNegacao := STR0056 //"Este produto esta sendo utilizado por uma regra de bonificaГЦo financeira"
					lPodeApagar := .F.
				Endif

				(cAliasAI2)->(dbCloseArea())
			EndIf

				//зддддддддддддддддддддддддддддддддддд©
				//ЁVerifica verba de vendas           Ё
				//юддддддддддддддддддддддддддддддддддды
			If lPodeApagar
				cAliasACL := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "ACL" )
				cQuery += " WHERE "
				cQuery += " ACL_FILIAL='" + xFilial("ACL") + "' AND "
				cQuery += " ACL_CODPRO='" + cCod            + "' AND "
				cQuery += " D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasACL,.F.,.T. )

				If (cAliasACL)->QTDBASE > 0
					cMsgNegacao := STR0057 //"Este produto esta sendo utilizado por uma verba de vendas"
					lPodeApagar := .F.
				Endif

				(cAliasACL)->(dbCloseArea())
			EndIf
				//зддддддддддддддддддддддддддддддддддд©
				//ЁVerifica Meta de vendas            Ё
				//юддддддддддддддддддддддддддддддддддды
			If	lPodeApagar
				cAliasSCT := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT COUNT(*) QTDBASE FROM " + RetSqlName( "SCT" )
				cQuery += " WHERE "
				cQuery += " CT_FILIAL='" + xFilial("SCT") + "' AND "
				cQuery += " CT_PRODUTO='" + cCod            + "' AND "
				cQuery += " D_E_L_E_T_=' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSCT,.F.,.T. )

				If (cAliasSCT)->QTDBASE > 0
					cMsgNegacao := STR0058 //"Este produto esta sendo utilizado por uma meta de vendas"
					lPodeApagar := .F.
				Endif

				(cAliasSCT)->(dbCloseArea())
			EndIf

				//зддддддддддддддддддддддддддддддддддд©
				//ЁVerifica Produtos Alternativos     Ё
				//юддддддддддддддддддддддддддддддддддды
			If	lPodeApagar
				dbSelectArea("SGI")
				cAliasSGI := GetNextAlias()
				cQuery := ""
				cQuery += " SELECT COUNT(*) QTDREG "
				cQuery += "   FROM " + RetSqlName( "SGI" )
				cQuery += "  WHERE GI_FILIAL  = '"+xFilial("SGI") + "'"
				cQuery += "    AND GI_PRODORI = '"+cCod+ "'"
				cQuery += "    AND D_E_L_E_T_ = ' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSGI,.F.,.T. )

				If (cAliasSGI)->QTDREG > 0
					cMsgNegacao := STR0060 //"Este produto possui Alternativos Vinculados"
					lPodeApagar := .F.
				Else
					(cAliasSGI)->(dbCloseArea())
					cAliasSGI := GetNextAlias()
					cQuery := ""
					cQuery += " SELECT GI_PRODORI "
					cQuery += "   FROM " + RetSqlName( "SGI" )
					cQuery += "  WHERE GI_FILIAL  = '"+xFilial("SGI") + "'"
					cQuery += "    AND GI_PRODALT = '"+cCod+ "'"
					cQuery += "    AND D_E_L_E_T_ = ' '"

					cQuery := ChangeQuery( cQuery )
					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSGI,.F.,.T. )

					While !(cAliasSGI)->(Eof())
						cProdSGI+= Iif(Len(cProdSGI)>0,"/","")+(cAliasSGI)->GI_PRODORI
						dbSkip()
					Enddo
					If Len(cProdSGI)>0
						cMsgNegacao := STR0061+cProdSGI //"Produto Alternativo vinculado ao produto Original: "
						lPodeApagar := .F.
					Endif

 				Endif

				(cAliasSGI)->(dbCloseArea())
			EndIf

			//зддддддддддддддддддддддддддддддддддд©
			//ЁVerifica os itens do acessСrio TMK Ё
			//юддддддддддддддддддддддддддддддддддды
			If	lPodeApagar
				cAliasSUG := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT COUNT(*) QTDACESS FROM " + RetSqlName("SUG")
				cQuery += " WHERE "
				cQuery += " UG_FILIAL  = '" + xFilial("SUG") + "' AND "
				cQuery += " UG_PRODUTO = '" + cCod           + "' AND "
				cQuery += " D_E_L_E_T_ = ' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSUG,.F.,.T. )

				If (cAliasSUG)->QTDACESS > 0
					cMsgNegacao := STR0067	//"Este produto esta sendo utilizado pelo Cadastro de AcessСrios."
					lPodeApagar := .F.
				Endif

				(cAliasSUG)->(dbCloseArea())

				If	lPodeApagar
					cAliasSU1 := GetNextAlias()
					cQuery    := ""
					cQuery += " SELECT COUNT(*) QTDACESS FROM " + RetSqlName("SU1")
					cQuery += " WHERE "
					cQuery += " U1_FILIAL  = '" + xFilial("SU1") + "' AND "
					cQuery += " U1_ACESSOR = '" + cCod           + "' AND "
					cQuery += " D_E_L_E_T_ = ' '"

					cQuery := ChangeQuery( cQuery )
					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSU1,.F.,.T. )

					If (cAliasSU1)->QTDACESS > 0
						cMsgNegacao := STR0067	//"Este produto esta sendo utilizado pelo Cadastro de AcessСrios."
						lPodeApagar := .F.
					Endif

					(cAliasSU1)->(dbCloseArea())
				EndIf
			EndIf

			//зддддддддддддддддддддддддддддддддддд©
			//ЁVerifica o Cad. Concorrentes - TMK Ё
			//юддддддддддддддддддддддддддддддддддды
			If	lPodeApagar
				cAliasSU2 := GetNextAlias()
				cQuery    := ""
				cQuery += " SELECT COUNT(*) QTDPROD FROM " + RetSqlName("SU2")
				cQuery += " WHERE "
				cQuery += " U2_FILIAL  = '" + xFilial("SU2") + "' AND "
				cQuery += " U2_COD = '" + cCod           + "' AND "
				cQuery += " D_E_L_E_T_ = ' '"

				cQuery := ChangeQuery( cQuery )
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSU2,.F.,.T. )

				If (cAliasSU2)->QTDPROD > 0
					cMsgNegacao := STR0068	//"Este produto esta sendo utilizado pelo Cadastro de Concorrentes."
					lPodeApagar := .F.
				Endif

				(cAliasSU2)->(dbCloseArea())
			EndIf

			If !lPodeApagar
				Help(" ",1,"NODELETA",,cMsgNegacao,2,0 )
				Exit
			EndIf

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe vinculo do cliente com o cadastro de Apontamento de Visitas Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If MA10VerAV()
				Exit
			EndIf

			dbSelectArea(cAlias)

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁChama rotina para integracao com SFC(Chao de Fabrica) Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lPodeApagar .And. (lIntSFC .Or. lIntDPR)
				lPodeApagar := A010IntSFC(nOpc)
			EndIf

			// Ponto de Entrada para tratamento diverso antes da efetivacao de exclusao do produto
            If lMT010EXC
            	ExecBlock("MT010EXC",.F.,.F.)
            EndIf
			// FunГЦo usada para validar se existe integraГЦo do Protheus com o RM Solum e
			// Para chamar a validaГЦo especМfica do RM Solum na deleГЦo do Produto. (PMSXFUNB)
			if lIntRMSOL
				If !PmsSlmPrd("PRD")
					lPodeApagar := .F.
					Exit
				Endif
			Endif

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁVerifica se existe vinculo do produto no cadastro de amarracao CategoriaXProduto Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("ACV")	// Categoria x Grupo ou Produto
			dbSetOrder(5) 		// Ordem: ACV_FILIAL+ACV_CODPRO+ACV_CATEGO

			aFiliais := If(! Empty(xFilial("ACV")) .and. Empty(xFilial("SB1")), aClone(aSM0CodFil), {xFilial("ACV")})
			For nBusca := 1 to Len(aFiliais)
				dbSeek(aFiliais[nBusca]+cCod)
				If Found()
				    Aviso(STR0032,STR0062,{STR0031},1) //"Atencao!"###"Este produto nЦo poderА ser excluМdo, pois existe vМnculo do mesmo no cadastro de amarraГЦo de Categoria X Produto."###"Ok"
					dbSelectArea(cAlias)
					MsUnLock()
					lPodeApagar := .F.
					Exit
				EndIf
			Next

			If !lPodeApagar
				Exit
			Endif
			If lPodeApagar .And. FindFunction('PCPIntgPPI') .And. PCPIntgPPI()
				//Realiza a integraГЦo.
				lPodeApagar := MATA010PPI(,,.T.)
			EndIf
			If !lPodeApagar
				Exit
			Endif
			Begin Transaction
			
				If lPodeApagar .And. lIntegDef
					aRetInt := FwIntegDef("MATA010",,,,"MATA010")
					
					If Valtype(aRetInt) == "A"
						If Len(aRetInt) == 2
							If !aRetInt[1]
								If Empty(AllTrim(aRetInt[2]))
									cMsgRet := "Verificar problema no Monitor EAI"
								Else
									cMsgRet := AllTrim(aRetInt[2])
								Endif
								Aviso("AtenГЦo",cMsgRet,{"Ok"},3)
								DisarmTransaction()
								lPodeApagar := .F.
								Return .F.
							Endif
						Endif
					Endif
				EndIf

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё apos passar por todas as verificacoes , deleta o registro    Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

				dbSelectArea(cAlias)
				RecLock(cAlias,.F.,.T.)
				dbDelete()

				//Deletando informaГУes complementares do Produto (SIGAEIC/SIGAEDC/SIGAEEC) - Trade Easy
				If (nModulo == 17 .Or. nModulo == 50  .Or. nModulo == 29)
				   EYJ->(DbSetOrder(1))
				   If EYJ->(DbSeek(xFilial("EYJ") + cCod))
				      If EYJ->(RecLock("EYJ",.F.))
				         EYJ->(DbDelete())
				      EYJ->(MsUnlock())
				      EndIf
				   EndIf
				EndIf

				If lGrade
					cCodGr := Substr(cCod,1,nTamRef)
				  	nRecCod:=(cAlias)->( recno() )
					If (cAlias)->(!DbSeek(xFilial(cAlias)+cCodGr))
						dbSelectArea("SB4")
						aFiliais := If(! Empty(FwFilial("SB4")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB4")})
						For nBusca := 1 to Len(aFiliais)
							If dbSeek(aFiliais[nBusca]+cCodGr)
								RecLock("SB4",.F.,.T.)
								dbDelete()
							EndIf
						Next
					Endif
					(cAlias)->( msgoto(nRecCod) )
				Endif

				dbSelectArea("SB2")
				aFiliais := If(! Empty(FwFilial("SB2")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB2")})
				For nBusca := 1 to Len(aFiliais)
					dbSeek(aFiliais[nBusca]+cCod)
					While !EOF() .And. aFiliais[nBusca]+cCod == B2_FILIAL+B2_COD
						RecLock("SB2",.F.,.T.)
						dbDelete()
						dbSkip()
					EndDo
				Next

				dbSelectArea("SB3")

				aFiliais := If(! Empty(FwFilial("SB3")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB3")})
				For nBusca := 1 to Len(aFiliais)
					dbSeek(aFiliais[nBusca]+cCod)
					If Found()
						RecLock("SB3",.F.,.T.)
						dbDelete()
					EndIf
				Next

				lApagaSB5 := .T.
				dbSelectArea("SB5")
				If Empty(FwFilial("SB5")) .And. !Empty(FwFilial("SB1"))
					cSeek := SB1->B1_FILIAL+AllTrim(SB1->B1_COD)
					For nBusca := 1 to Len(aSM0CodFil)
						dbSelectArea("SB1")
						dbSetOrder(1)
						If dbSeek(aSM0CodFil[nBusca]+cCod)
							If cSeek <> (aSM0CodFil[nBusca]+AllTrim(cCod))
								lApagaSB5 := .F.
								Exit
							EndIf
						EndIf
					Next nBusca
				EndIf
				If lApagaSB5
					dbSelectArea("SB5")
					aFiliais := If(! Empty(FwFilial("SB5")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB5")})
					For nBusca := 1 to Len(aFiliais)
						dbSeek(aFiliais[nBusca]+cCod)
						If Found()
							RecLock("SB5",.F.,.T.)
							dbDelete()
						EndIf
					Next
				EndIf

				If lFantasma
					dbSelectArea("SB9")
					aFiliais := If(! Empty(FwFilial("SB9")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SB9")})
					For nBusca := 1 to Len(aFiliais)
						dbSeek(aFiliais[nBusca]+cCod)
						While !Eof() .And. aFiliais[nBusca]+cCod==B9_FILIAL+B9_COD
							If B9_QINI == 0
								RecLock("SB9",.F.,.T.)
								dbDelete()
							Endif
							dbSkip()
						End
					Next
				Endif

				dbSelectArea("SA5")
				dbSetOrder(2)
				aFiliais := If(! Empty(FwFilial("SA5")) .and. Empty(FwFilial("SB1")), aClone(aSM0CodFil), {xFilial("SA5")})
				For nBusca := 1 to Len(aFiliais)
					dbSeek(aFiliais[nBusca]+cCod)
					While !EOF() .And. aFiliais[nBusca] == A5_FILIAL .and. cCod == A5_PRODUTO
						RecLock("SA5",.F.,.T.)
						dbDelete()
						dbSkip()
					EndDo
				Next
				dbSetOrder(1)

				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁRemove a amarracao cod. Externo X cod. Interno - tabela XXF - De/Para                    Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lPodeApagar .And. FWXX4Seek("MATA010")
					If ( XX4->XX4_SENDER == '1' )
		      		CFGA070Mnt( , 'SB1', 'B1_COD', , SB1->B1_COD, .T. )
		   		EndIf
				EndIf

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Pontos de Entrada											 Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				IF lMTA010ET
					ExecTemplate("MTA010E",.f.,.f.)
				Endif

				IF lMTA010E
					ExecBlock("MTA010E",.f.,.f.)
				Endif

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Funcao Especifica SIGAEIC - AVERAGE                        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				MTA010E()

				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Funcao Especifica SIGAEIC - AVERAGE                        Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lHistFiscal
					aCmps :=  RetCmps("SB1",bCampoSB1)
					GrvHistFis("SB1", "SS4", aCmps)
				EndIf


			End Transaction

			A010Int( 2, nOpc, aIntSB1 )
			LJ110AltOk()
		ELSE
			MsUnLock()
		ENDIF
		EXIT
	EndIf
EndDo
dbSelectArea(cAlias)

If (ExistBlock("MT010CAN"))
	ExecBlock("MT010CAN",.F.,.F.,{nOpcA})
EndIf


Return Nil


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤┘o   ЁA010DelPeCЁ Autor ЁAlex Sandro Valario    Ё Data Ё 16/09/05 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠Ё Descri┤┘oЁ Rotina de exclusao de produto visualizando o complemento   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpN1 := A010DelPeC(ExpC1,ExpN2,ExpN3)                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN2 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN3 = Numero da opcao selecionada 			              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpN1 = 1(confirmado),2(nao confirmou) ou 3(erro tratado)  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010DELPeC(cAlias,nReg,nOpc)

Local nOpcA 	:= 0
Local aArea    := GetArea()
Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
Local cMemo    := ""
LOcal nX       := 0
Local oDlg
Local nTop
Local nLeft
Local nBottom
Local nRight
Local nRegSB5	:= SB5->(RecNo())
Local aObjects    := {}
Local aSize       := {}
Local aInfo       := {}
Local aPosObj     := {}

//enchoice
Local oFolder
Private oEnc01
Private oEnc02
Private aTELA:=NIL,aGets:=NIL

Private Altera :=.F.
Private Inclui :=.F.

//зддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ajusta a largura para o tamanho padrao Protheus Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддды
aSize := MsAdvSize()

aObjects := {}
AAdd( aObjects, { 100, 100, .T., .T. } )
aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 }

aPosObj := MsObjSize(aInfo,aObjects,.T.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerIfica se esta' vizualizando um registro da mesma filial            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea("SB5")
DbSelectArea(cAlias)
If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Monta a entrada de dados do arquivo						     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	RegToMemory("SB1", .F., .F. )
	RegToMemory("SB5",.F. , .F. )
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicializa variaveis para campos Memos Virtuais						 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Type("aMemos")=="A"
		For nX := 1 To Len(aMemos)
			cMemo := aMemos[nX][2]
			If ExistIni(cMemo)
				&cMemo := InitPad(SX3->X3_RELACAO)
			Else
				&cMemo := ""
			EndIf
		Next nX
	EndIf

/*	If SetMDIChild()
		oMainWnd:ReadClientCoors()
		nTop := 40
		nLeft := 30
		nBottom := oMainWnd:nBottom-80
		nRight := oMainWnd:nRight-70
	Else
		nTop := 135
		nLeft := 0
		nBottom := TranslateBottom(.T.,28)
		nRight := 632
	EndIf
*/
//	DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd
    DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
	oFolder := TFolder():New(13,,{STR0033,STR0034},{STR0033,STR0034},oDlg,,,,.t.,.F.,oDlg:nWidth,oDlg:nHeight,)	 //"Produto"###"Complemento"###"Produto"###"Complemento"
	oFolder:align:= CONTROL_ALIGN_ALLCLIENT
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Enchoice 01                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB1")
	oEnc01:= MsMGet():New("SB1" ,nReg ,nOpc,,,,,aPosObj[1],,,,,,oFolder:aDialogs[1])
	oEnc01:oBox:align:= CONTROL_ALIGN_ALLCLIENT

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Enchoice 02                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB5")
	oEnc02:=MsMGet():New("SB5",nRegSB5,nOpc,,,,,aPosObj[1],,,,,,oFolder:aDialogs[2])
	oEnc02:oBox:align:= CONTROL_ALIGN_ALLCLIENT

	dbSelectArea("SB1")
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpcA := 2,oDlg:End()},{|| nOpcA := 0,oDlg:End()})

Else
	Help(" ",1,"A000FI")
	nOpcA := 3
EndIf
RestArea(aArea)

Return(nOpcA)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A010Tipo Ё Autor Ё Jose Lucas            Ё Data Ё 12.11.93 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica a existencia do Tipo na Tabela de Parametros.     Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010Tipo()                                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MatA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Tipo()

LOCAL cVar, cSavAlias := Alias(), lRet := .T.

cVar := &(ReadVar())

dbSelectArea("SX5")
dbSeek(xFilial("SX5")+"02"+cVar)
If !Found()
	Help(" ",1,"MA01002")
	lRet := .F.
EndIf
dbSelectArea(cSavAlias)
Return(lRet)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A010GrupoЁ Autor Ё Jose Lucas            Ё Data Ё 12.11.93 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica a existencia do Grupo na Tabela de Parametros.    Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010Grupo()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MatA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Grupo()

LOCAL cVar, cSavAlias := Alias(), lRet := .T.

cVar := &(ReadVar())

dbSelectArea("SBM")
dbSetOrder(1)
dbSeek(xFilial("SBM")+cVar)

If !Found()
	Help(" ",1,"MA01002")
	lRet := .F.
EndIf

//-- MIL - CODITE - ValidaГЦo para nЦo permitir mesmo Grupo+Codite quando utilizado o MСdulo de ConcessionАrias
If lRet .And. SuperGetMV("MV_VEICULO",.F.,"N") == "S" .And. !Empty(M->B1_CODITE)
   lRet := ExistChav("SB1",M->B1_GRUPO+M->B1_CODITE,7)
EndIf

dbSelectArea(cSavAlias)
Return(lRet)

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A010Mult Ё Autor Ё Jose Lucas            Ё Data Ё 26.11.93 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Comsistir se B1_LE e B1_QE sao multiplos.                  Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010Mult()                                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MatA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Mult()

LOCAL cVar, cCampo, lRet := .T.

cCampo := ReadVar()
cVar := &(ReadVar())

If AllTrim(cCampo) == "B1_LE"
	If !Empty(M->B1_QE) .And. !Empty(M->B1_LE)
		If QtdComp(Mod( M->B1_LE,M->B1_QE )) > QtdComp(0)
			Help(" ",1,"MA01003")
			lRet := .F.
		EndIf
	EndIf
Else
	If !Empty(M->B1_LE) .And. !Empty(M->B1_QE)
		If QtdComp(Mod( M->B1_LE,M->B1_QE )) > QtdComp(0)
			Help(" ",1,"MA01003")
			lRet := .F.
		EndIf
	EndIf
EndIf
Return(lRet)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A010MONO Ё Autor Ё Marcelo B. Abe        Ё Data Ё 04/04/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Validacao de Fornecedor de Dominio do Canal    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A010MONO(void)                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё SX3->X3_VALID(B1_MONO)                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Function A010MONO()

Local lRet := .T.
If EMPTY(M->B1_PROC) .And. M->B1_MONO=="S"
	HELP(" ",1,"A010MONO")
	lRet := .F.
Endif
Return(lRet)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A010PROC Ё Autor Ё Marcelo B. Abe        Ё Data Ё 04/04/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Validacao do Fornecedor Padrao.                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A010PROC(void)                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T.                                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё SX3->X3_VALID(B1_PROC)                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010PROC()

Local lRet  := .T.
Local cLoja := Space(2)

If Empty(M->B1_PROC)
	M->B1_MONO:=SPACE(1)
	M->B1_LOJPROC :=Space(2)
Else
	If M->B1_PROC != SA2->A2_COD
		SA2->(DbSetOrder(1))
		SA2->(DbSeek(xFilial("SA2")+M->B1_PROC))
	Endif
	cLoja := SA2->A2_LOJA
	lRet := ExistCpo("SA2",M->B1_PROC+cLoja)
	M->B1_LOJPROC := cLoja
Endif

Return(lRet)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁA010Visul Ё Autor Ё Erike Yuri da Silva   Ё Data Ё18/04/05  Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa para visualizar produto e complemento             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpN1 := A010Visul(ExpC1,ExpN2,ExpN3)                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё			 Ё ExpN2 = Numero do registro                                 Ё╠╠
╠╠Ё			 Ё ExpN3 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpN1 = 1(confirmado),2(nao confirmou)					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё Mata010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Visul(cAlias,nReg,nOpc)
Local nOpcA		:= 3
Local aArea		:= GetArea()
Local aAreaSB1	:= SB1->(GetArea())
Local aAreaSB5	:= SB5->(GetArea())
Local aUsrBut	:= {}
Local aButtons	:= {}
Local aCpos		:= {}
Local cPerg     := "MTA010"
Local aMvPar    := {}
Local nCnt      := 0
Local aRotAnt   := {}
Local NTamSX1   := Len(SX1->X1_GRUPO)
Local cGrpSX1Ant:= ""

If Type("cCadastro") == "U"
	Private cCadastro := OemtoAnsi(STR0008) //"AtualizaГЦo de Produtos"
EndIf

DEFAULT cAlias	:= Alias()
DEFAULT nReg 	:= SB1->(Recno())
DEFAULT nOpc	:= 2

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁSalva o conteudo dos parametros mv_par?? e da aRotina. Ё
//ЁA funcao Pergunte() sempre carrega o grupo e no final  Ё
//Ёdo carregamento, por causa do DbSkip(),fica posicionadoЁ
//Ёna primeira pergunta do grupo seguinte. Por isso, aqui Ё
//Ёa rotina faz DbSkip(-1) para retornar a ultima perguntaЁ
//Ёdo grupo anterior e obter o grupo correto.             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SX1->( DbSkip(-1) )
cGrpSX1Ant := AllTrim(SX1->X1_GRUPO)

If Empty(cGrpSX1Ant)
	cGrpSX1Ant:= cPerg
EndIf
	
SX1->( MsSeek(PADR(cGrpSX1Ant,NTamSX1)) )
Do While SX1->( !Eof() .And. X1_GRUPO == PADR(cGrpSX1Ant,NTamSX1) )
	nCnt++
	Aadd(aMvPar, &('MV_PAR'+StrZero(nCnt,2)) )
	SX1->( dbSkip() )
EndDo 
	
If Type("aRotina")=='A'
	aRotAnt := aClone(aRotina)
EndIf
aRotina := MenuDef() // Atualiza o aRotina com as opcoes do MATA010

Pergunte(cPerg,.F.)

//Inclusao automatica de botoes atraves de ponto de entrada
If ExistTemplate( "MA010BUT" )
	If Valtype( aUsrBut := ExecTemplate( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

If ExistBlock( "MA010BUT" )
	If Valtype( aUsrBut := Execblock( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

aButtons := CRMXAddAct("SB1",aButtons) //Adcionar Rotinas no 'AГУes relacionadas' do FormulАrio

//Ponto de Entrada para definir quais campos da SB1 serao carregados na visualizacao
If ExistBlock("MT010VCP")
	aCpos:= ExecBlock("MT010VCP",.F.,.F.)
	If ValType(aCpos) <> "A"
		aCpos:= {}
	EndIf
EndIf

If MV_PAR02 == 1
	SB5->(DbSetOrder(1))
	If SB5->(DbSeek(xFilial("SB5")+SB1->B1_COD))
		nOpcA:=A010VilPeC( cAlias, nReg, nOpc,aButtons,IIF(Len(aCpos)>0,aCpos,Nil))
	Else
		nOpcA:=AxVisual( cAlias, nReg, nOpc,IIF(Len(aCpos)>0,aCpos,Nil),,,,aButtons)
	EndIf
Else
	nOpcA:=AxVisual( cAlias, nReg, nOpc,IIF(Len(aCpos)>0,aCpos,Nil),,,,aButtons)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁRestaura o conteudo dos parametros mv_par?? e do aRotinaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(aRotAnt) > 0
	aRotina := aClone(aRotAnt)
EndIf

Pergunte(cGrpSX1Ant, .F. )

For nCnt := 1 To Len(aMvPar)
	&('MV_PAR'+StrZero(nCnt,2)) := aMvPar[nCnt]
Next nCnt

RestArea(aAreaSB1)
RestArea(aAreaSB5)
RestArea(aArea)
Return(nOpcA)
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o	 ЁA010VilPeCЁ Autor Ё                       Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa para visualizar dados complementares do produto   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpN1 := A010VilPeC(ExpC1,ExpN2,ExpN3,ExpA1)               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё			 Ё ExpN2 = Numero do registro                                 Ё╠╠
╠╠Ё			 Ё ExpN3 = Numero da opcao selecionada                        Ё╠╠
╠╠Ё			 Ё ExpA1 = Array contendo os botoes da rotina                 Ё╠╠
╠╠Ё			 Ё ExpA2 = Campos da SB1 que serao utilizados na Visualizacao Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpN1 = 1(confirmado),2(nao confirmou)					  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso		 Ё Mata010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010VilPeC(cAlias,nReg,nOpc,aButtons,aCpos)

Local aArea    := GetArea()
Local nOpcA    := 3
Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
Local cMemo    := ""
LOcal nX       := 0
Local oDlg
Local lVirtual :=.F. // Qdo .F. carrega inicializador padrao nos campos virtuais
Local nTop
Local nLeft
Local nBottom
Local nRight
Local nRegSB5	:= SB5->(RecNo())

//enchoice
Local oFolder
Private oEnc01
Private oEnc02
Private aTELA:=NIL,aGets:=NIL

Private Altera :=.F.
Private Inclui :=.F.

Default aButtons := {}


//зддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ajusta a largura para o tamanho padrao Protheus Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддды
aSize := MsAdvSize()

aObjects := {}
AAdd( aObjects, { 100, 100, .T., .T. } )
aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 }

aPosObj := MsObjSize(aInfo,aObjects,.T.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerIfica se esta' vizualizando um registro da mesma filial            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea("SB5")
DbSelectArea(cAlias)
If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Monta a entrada de dados do arquivo						     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	RegToMemory(cAlias, .F., .F. )
	RegToMemory("SB5",.F. , .F. )
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicializa variaveis para campos Memos Virtuais						 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Type("aMemos")=="A"
		For nX := 1 To Len(aMemos)
			cMemo := aMemos[nX][2]
			If ExistIni(cMemo)
				&cMemo := InitPad(SX3->X3_RELACAO)
			Else
				&cMemo := ""
			EndIf
		Next nX
	EndIf

	If SetMDIChild()
		oMainWnd:ReadClientCoors()
		nTop := 40
		nLeft := 30
		nBottom := oMainWnd:nBottom-80
		nRight := oMainWnd:nRight-70
	Else
		nTop := 135
		nLeft := 0
		nBottom := TranslateBottom(.T.,28)
		nRight := 632
	EndIf

    DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
//	DEFINE MSDIALOG oDlg TITLE cCadastro FROM nTop,nLeft TO nBottom,nRight PIXEL OF oMainWnd
	oFolder := TFolder():New(13,,{STR0033,STR0034},{STR0033,STR0034},oDlg,,,,.t.,.F.,oDlg:nWidth,oDlg:nHeight,)	 //"Produto"###"Complemento"###"Produto"###"Complemento"
	oFolder:align:= CONTROL_ALIGN_ALLCLIENT
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Enchoice 01                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB1")
	oEnc01:= MsMGet():New("SB1" ,nReg ,nOpc,,,,IIF(ValType(aCpos)=="A",aCpos,Nil),aPosObj[1],   ,       ,        ,          ,      ,oFolder:aDialogs[1])
	oEnc01:oBox:align:= CONTROL_ALIGN_ALLCLIENT

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Enchoice 02                                          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB5")
	oEnc02:=MsMGet():New("SB5",nRegSB5,nOpc,,,,/*aAcho*/,aPosObj[1],,,,,,oFolder:aDialogs[2])
	oEnc02:oBox:align:= CONTROL_ALIGN_ALLCLIENT

	dbSelectArea("SB1")
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpcA := 1,oDlg:End()},{|| nOpcA := 2,oDlg:End()},,aButtons)
Else
	Help(" ",1,"A000FI")
	nOpcA := 3
EndIf
RestArea(aArea)
Return(nOpcA)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010IncluiЁ Autor Ё Marcelo B. Abe        Ё Data Ё 20/04/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Inclusao de Produtos                           Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A010Inclui(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada 			              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010()                                                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010INCLUI(cAlias,nReg,nOpc)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local aButtons := {}
Local aUsrBut  := {}
Local aCampos  := {}
Local nSaveSX8 := GetSx8Len()
Local lPIMSINT := (SuperGetMV("MV_PIMSINT",.F.,.F.)) // Indica se Existe IntegraГЦo Protheus x PIMS Graos
Local aIntSB1  := {}
Local cPerg    := "MTA010"
Local aMvPar    := {}
Local cGrpSX1Ant:= ""
Local NTamSX1   := Len(SX1->X1_GRUPO)
Local nCnt      := 0
Local uMv_par01,uMv_par02
Local lCopiaBKP
Local aRetInt		:= {}
Local cBkpTmp   := ""

//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FWHasEAI("MATA010",.T.,,.T.)

Private aTELA[0][0],aGETS[0]

If Type("aMemos") == "U" 
	Private aMemos:={{"B1_DESC_I","B1_VM_I"},{"B1_DESC_GI","B1_VM_GI"},{"B1_DESC_P","B1_VM_P"},{"B1_CODOBS","B1_OBS"},{"B1_CODPROC","B1_VM_PROC"}}
EndIf

If Type("cCadastro") == "U"
	Private cCadastro := OemtoAnsi(STR0008) //"AtualizaГЦo de Produtos"
EndIf

l010Auto:= If(Type('l010Auto') <> 'L',.f.,l010Auto)
lCopia  := If(Type('lCopia') <> 'L',.f.,lCopia)
lCopiaBkp:=lCopia

If lCopia .And. !IsInCallStack("MATA010")
	lCopia:=.F.
EndIf

If FindFunction('PCPIntgPPI') .And. PCPIntgPPI()
   cBkpTmp := PCPVldTmp("SB1", "MATA010", .F.)
   //Se a variАvel cTmpPPI nЦo estiver definida, assume o nome retornado pela funГЦo PCPVldTmp 
   If Type("cTmpPPI") != "C"
      cTmpPPI := cBkpTmp
   EndIf
EndIf

bCampo := {|nCPO| Field(nCPO) }

INCLUI := .T.
ALTERA := .F.

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁSalva o conteudo dos parametros mv_par?? e da aRotina. Ё
//ЁA funcao Pergunte() sempre carrega o grupo e no final  Ё
//Ёdo carregamento, por causa do DbSkip(),fica posicionadoЁ
//Ёna primeira pergunta do grupo seguinte. Por isso, aqui Ё
//Ёa rotina faz DbSkip(-1) para retornar a ultima perguntaЁ
//Ёdo grupo anterior e obter o grupo correto.             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SX1->( DbSkip(-1) )
cGrpSX1Ant := AllTrim(SX1->X1_GRUPO)

If Empty(cGrpSX1Ant)
	cGrpSX1Ant:= cPerg
EndIf

SX1->( MsSeek(PADR(cGrpSX1Ant,NTamSX1)) )
Do While SX1->( !Eof() .And. SX1->X1_GRUPO == PADR(cGrpSX1Ant,NTamSX1) )
	nCnt++
	Aadd(aMvPar, &('MV_PAR'+StrZero(nCnt,2)) )
	SX1->( dbSkip() )
EndDo

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desativa a tecla F4                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

PERGUNTE("MTA010",.F.)

If !l010Auto
	SET KEY VK_F4 TO
EndIf

If ExistTemplate( "MA010BUT" )
	If Valtype( aUsrBut := ExecTemplate( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

If ExistBlock( "MA010BUT" )
	If Valtype( aUsrBut := Execblock( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao PIMS GRAOS                             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддды
If lPIMSINT
	// Tratamento para adicinar o campo BM_CLASGRU no layout do arquivo XML
	SX3->(DbSetOrder(2))
   	SX3->(DbSeek("BM_CLASGRU"))
	AADD(aCampos, {SX3->(X3_TITULO), SX3->(X3_DESCRIC), SX3->(X3_CAMPO), SX3->(X3_TIPO), SX3->(X3_TAMANHO), SX3->(X3_DECIMAL),NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL})
EndIf

While .T.
	//здддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Envia para processamento dos Gets          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддды
	nOpcA:=0

	If ( l010Auto )
		Begin Transaction
			nOpcA := AxInclui(cAlias, nReg, nOpc,/*aAcho*/,/*cFunc*/,/*aCpos*/,"A010TudoOk(nOpc)",/*lF3*/,/*cTransact*/,aButtons,,aRotAuto,/*lVirtual*/)
			If __lSX8
				IF nOpcA == 1
					While ( GetSx8Len() > 0 )
						ConfirmSX8()
					Enddo
					A010Int( 2, nOpc, aIntSB1 )
				Else
					While ( GetSx8Len() > 0 )
						RollBackSX8()
					Enddo
				EndIf
			EndIf
		End Transaction
	Else
		If lCopia
			Begin Transaction
				If mv_par02 == 1
					SB5->(DbSetOrder(1))
					SB5->(DbSeek(xFilial("SB5")+SB1->B1_COD))
					nOpcA:=A010IncPeC( cAlias, nReg, nOpc,"A010LeReg",,"A010TudoOk(nOpc)",aButtons,.T.)
				Else
					nOpcA:=AxInclui( cAlias, nReg, nOpc,,"A010LeReg",,"A010TudoOk(nOpc)",,,aButtons,,,.T.)
				EndIf
				
				//Tratamento mensagem unica produto
				If nOpcA == 1 .And. lIntegDef
					aRetInt := FwIntegDef("MATA010",,,,"MATA010")
					
					If Valtype(aRetInt) == "A"
						If Len(aRetInt) == 2
							If !aRetInt[1]
								If Empty(AllTrim(aRetInt[2]))
									cMsgRet := "Verificar problema no Monitor EAI"
								Else
									cMsgRet := AllTrim(aRetInt[2])
								Endif
								Aviso("AtenГЦo",cMsgRet,{"Ok"},3)
								DisarmTransaction()
								Return .F.
							Endif
						Endif
					Endif
				EndIf
				
				If __lSX8
					IF nOpcA == 1
						While ( GetSx8Len() > nSaveSX8 )
							ConfirmSx8()
						Enddo
						A010Int( 2, nOpc, aIntSB1 )
					Else
						While ( GetSx8Len() > nSaveSX8 )
							RollBackSX8()
						Enddo
					EndIf
				EndIf
			End Transaction
		Else
			Begin Transaction
				If mv_par02 == 1
					nOpcA:=A010IncPeC( cAlias, nReg, nOpc, , ,"A010TudoOk(nOpc)",aButtons) // incluir Produto e complemento
				Else
					nOpcA:=AxInclui( cAlias, nReg, nOpc,,,,"A010TudoOk(nOpc)",,,aButtons)
				EndIf
				
				//Tratamento mensagem unica produto
				If nOpcA == 1 .And. lIntegDef
					aRetInt := FwIntegDef("MATA010",,,,"MATA010")
					
					If Valtype(aRetInt) == "A"
						If Len(aRetInt) == 2
							If !aRetInt[1]
								If Empty(AllTrim(aRetInt[2]))
									cMsgRet := "Verificar problema no Monitor EAI"
								Else
									cMsgRet := AllTrim(aRetInt[2])
								Endif
								Aviso("AtenГЦo",cMsgRet,{"Ok"},3)
								DisarmTransaction()
								Return .F.
							Endif
						Endif
					Endif
				EndIf
			End Transaction
		EndIf
	EndIf

	dbSelectArea(cAlias)

	IF nOpcA == 1
		A010Int( 2, nOpc, aIntSB1 )

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁFaz as Consistencias entre o F.D. do Canal com o SA5.                 Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If B1_MONO == 'S'
			A010FDC()
		Else
			A010AtuDesc()
		Endif

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁSe for codigo inteligente acrescenta estrutura                        Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		A093VldCod(B1_COD,.T.,,,,,,,,,.T.)

		//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Envia e-mail ref. Inclusao de novos produtos - 033 Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
		MEnviaMail("033",{B1_FILIAL,B1_COD,B1_DESC,B1_TIPO,B1_LOCPAD,B1_UM,CUSERNAME})

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁPontos de entrada depois da confirma┤фo.                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ExistTemplate("MT010INC")
			ExecTemplate("MT010INC")
		Endif

		If ExistBlock("MT010INC")
			ExecBlock("MT010INC",.F.,.F.)
		Endif
		/*  GRAVACAO DO B1_CODITE QUANDO INTEGRADO COM CONCESSIONARIAS */
		If SuperGetMV("MV_VEICULO",.F.,"N")=="S" .and. Empty(SB1->B1_CODITE)
			Reclock("SB1",.F.)
			SB1->B1_CODITE := SB1->B1_COD
			MSUnlock()
		Endif
		//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Integracao PIMS GRAOS                             Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lPIMSINT
		    PIMSGeraXML("Item",STR0047,"2","SB1",aCampos) //--## Cadastro de produtos
		EndIf
		/*--------------------*/
		LJ110AltOk()
	Endif

	Exit
End
dbSelectArea(cAlias)

If (ExistBlock("MT010CAN"))
	ExecBlock("MT010CAN",.F.,.F.,{nOpcA})
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ativa tecla  para comunicacao com Saldos dos Lotes           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !l010Auto
	Set Key VK_F4 TO MT010F4()
EndIf

Pergunte(cGrpSX1Ant, .F. )

For nCnt := 1 To Len(aMvPar)
	&('MV_PAR'+StrZero(nCnt,2)) := aMvPar[nCnt]
Next nCnt

lCopia:=lCopiaBKP
If FindFunction('PCPIntgPPI') .And. PCPIntgPPI()
   PCPRetTmp("MATA010", cBkpTmp)
EndIf

Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010AlteraЁ Autor Ё Marcelo B. Abe        Ё Data Ё 20/04/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Alteracao de Produtos                          Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё Void A010Altera(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada 			              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010()                                                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010ALTERA(cAlias,nReg,nOpc)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local aButtons   := {}
Local aUsrBut    := {}
Local aCampos    := {}
Local lTemSB5    := .T.
Local nX         := 0
Local lHistTab   := SuperGetMV("MV_HISTTAB", .F., .F.)
Local lPIMSINT   := (SuperGetMV("MV_PIMSINT",.F.,.F.))// Indica se Existe IntegraГЦo Protheus x PIMS Graos
Local cFilialAIF := xFilial("AIF")
Local cFilialSB1 := xFilial("SB1")
Local dDataAlt
Local cHoraAlt
Local aIntSB1	 := {}
Local bCampoSB1 := { |x| SB1->(Field(x)) }
Local aCmps     := {}
Local aArea		:= GetArea()

//-- Variavel usada para verificar se o disparo da funcao IntegDef() pode ser feita manualmente
Local lIntegDef  :=  FWHasEAI("MATA010",.T.,,.T.)
Local aRetInt		:= {}

Private aTELA[0][0],aGETS[0]

bCampo := {|nCPO| Field(nCPO) }
l010Auto := If(Type("l010Auto") == "U", .f.,l010Auto)

INCLUI := .F.
ALTERA := .T.

//inclusao dinamica do botao para poder selecionar os opcionais, no minimo quando houver estrutura.
SG1->(DbSetOrder(1))
If SG1->(DbSeek(xFilial('SG1')+SB1->B1_COD))
	AAdd(aButtons,{'PRODUTO',{|| A010SeleOpc() },STR0029 }) //"Opcionais Default"
	AAdd(aButtons,{'PRODOPC',{|| A010LimpOp() }, STR0112 }) //"Limpa os opcionais" 
EndIf
//inclusao automatica de botoes atraves de ponto de entrada

If ExistTemplate( "MA010BUT" )
	If Valtype( aUsrBut := ExecTemplate( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

If ExistBlock( "MA010BUT" )
	If Valtype( aUsrBut := Execblock( "MA010BUT", .f., .f. ) ) == "A"
		AEval( aUsrBut, { |x| AAdd( aButtons, x ) } )
	EndIF
EndIf

aButtons := CRMXAddAct("SB1",aButtons) //Adcionar Rotinas no 'AГУes relacionadas' do FormulАrio

//зддддддддддддддддддддддддддддддд©
//ЁSalva dados antes da alteracao.Ё
//юддддддддддддддддддддддддддддддды
aCmps :=  RetCmps("SB1",bCampoSB1)

//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Integracao PIMS GRAOS                             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддды
If lPIMSINT
	// Tratamento para adicinar o campo BM_CLASGRU no layout do arquivo XML
	SX3->(DbSetOrder(2))
   	SX3->(DbSeek("BM_CLASGRU"))
	AADD(aCampos, {SX3->(X3_TITULO), SX3->(X3_DESCRIC), SX3->(X3_CAMPO), SX3->(X3_TIPO), SX3->(X3_TAMANHO), SX3->(X3_DECIMAL),NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL,NIL})
EndIf

PERGUNTE("MTA010",.F.)

A010Int( 1, nOpc, aIntSB1 )

While .T.
	//здддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Envia para processamento dos Gets          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддды
	nOpcA:=0

	Begin Transaction
		If ( l010Auto )
			nOpcA := AxAltera( cAlias, nReg, nOpc,,,,,"A010TUDOOK(nOpc)",,, aButtons,, aRotAuto )
		Else
			If MV_PAR02 == 1
				SB5->(DbSetOrder(1))
				If SB5->(DbSeek(xFilial("SB5")+SB1->B1_COD))
					nOpcA := A010AltPeC(cAlias,nReg,nOpc,,,"A010TUDOOK(nOpc)", ,aButtons)
				Else
					lTemSB5 := .F.
				EndIf
			Else
				nOpcA := AxAltera( cAlias, nReg, nOpc,,,,,"A010TUDOOK(nOpc)",,,aButtons)
			EndIf
			
			//Tratamento mensagem unica produto
			If nOpcA == 1 .And. lIntegDef
				aRetInt := FwIntegDef("MATA010",,,,"MATA010")
				
				If Valtype(aRetInt) == "A"
					If Len(aRetInt) == 2
						If !aRetInt[1]
							If Empty(AllTrim(aRetInt[2]))
								cMsgRet := "Verificar problema no Monitor EAI"
							Else
								cMsgRet := AllTrim(aRetInt[2])
							Endif
							Aviso("AtenГЦo",cMsgRet,{"Ok"},3)
							DisarmTransaction()
							Return .F.
						Endif
					Endif
				Endif
			EndIf
		EndIf

		dbSelectArea(cAlias)

		If nOpcA == 1

			A010Int( 2, nOpc, aIntSB1 )

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtualiza a tabela QE6 - Especificacao de Produtos                     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				QAtuB12QE6()	//SIGAQIE

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtualiza a tabela QP6 - Especificacao de Produtos                     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

				QAtuB12QP6()	//SIGAQIP


			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁFaz as Consistencias entre o F.D. do Canal com o SA5.                 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If B1_MONO=="S"
				A010FDC()
			Else
				A010AtuDesc()
			Endif
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁPontos de entrada depois da confirma┤ao da altera┤ao.                 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If ExistTemplate("MT010ALT")
				ExecTemplate("MT010ALT",.f.,.f.)
			Endif

			If ExistBlock("MT010ALT")
				ExecBlock("MT010ALT",.f.,.f.)
			Endif
			/*  GRAVACAO DO B1_CODITE QUANDO INTEGRADO COM CONCESSIONARIAS */
			If SuperGetMV("MV_VEICULO",.F.,"N")=="S" .and. Empty(SB1->B1_CODITE)
				Reclock("SB1",.F.)
				SB1->B1_CODITE := SB1->B1_COD
				MSUnlock()
			Endif
			/*--------------------*/

			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁGravar o historico das alteracoes realizadas pelo usuario    Ё
			//Ёna tabela AIF usando o vetor aCpoAltSB1 que foi carregado na Ё
			//Ёfuncao A010TdOk().                                         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lHistTab .And. Len(aCpoAltSB1) > 0
				dDataAlt := Date()
				cHoraAlt := Time()
				For nX := 1 To Len(aCpoAltSB1)
					MSGrvHist(cFilialAIF,;			// Filial de AIF
					          cFilialSB1,;			// Filial da tabela SB1
					          "SB1",;				// Tabela SB1
					          "",;					// Codigo do cliente
					          "",;					// Loja do cliente
					          aCpoAltSB1[nX][1],;	// Campo alterado
					          aCpoAltSB1[nX][2],;	// Conteudo antes da alteracao
					          dDataAlt,;			// Data da alteracao
					          cHoraAlt,;			// Hora da alteracao
					          SB1->B1_COD)			// Codigo do produto
				Next nX
				aCpoAltSB1 := {} // limpar o vetor
			EndIf
			//зддддддддддддддддддддддддддддддддддддд©
			//ЁGravacao do historico das alteracoes.Ё
			//Ё                                     Ё
			//юддддддддддддддддддддддддддддддддддддды
			If lHistFiscal .And. Len(aCmpoSB1) > 0
				GrvHistFis("SB1", "SS4", aCmps)
				aCmpoSB1 := {} // limpar o vetor
				aCmps    := {}
			EndIf

			//зддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Integracao PIMS GRAOS                             Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lPIMSINT
		    	SBM->(DbSeek(xFilial("SBM")+SB1->B1_GRUPO))
		    	PIMSGeraXML("Item",STR0047,"2","SB1",aCampos) //--## Cadastro de produtos
			EndIf

			LJ110AltOk()

			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtualiza o campo B5_INTDI - IntegraГЦo DI
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			SB5->(DbSetOrder(1))
			If SB5->(DbSeek(xFilial("SB5")+SB1->B1_COD))
				RecLock("SB5",.F.)
				SB5->B5_INTDI := '2'
				MsUnlock()
			EndIf
		Endif
	End Transaction
	Exit
End

If (ExistBlock("MT010CAN"))
	ExecBlock("MT010CAN",.F.,.F.,{nOpcA})
EndIf
If !lTemSB5
	Aviso(STR0032,STR0037,{STR0031},2)//"Atencao!"###"Alteracao nao Permitida. Quando o Parametro 'Prod e Complemento ?' estiver como 'Sim', e' necessario que o produto possua complemento cadastrado ..."###"Ok"
EndIf

dbSelectArea(cAlias)

RestArea(aArea)

Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010FDC   Ё Autor Ё Marcelo B. Abe        Ё Data Ё 20/04/94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Alteracao de Produtos                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё Void A010FDC (void)                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .F.                                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё A010INCLUI e A010ALTERA                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010FDC(void)

LOCAL lExiste  :=.F.
LOCAL nCont    := 0
LOCAL aAreaAnt := GetArea()

dbSelectArea("SA5")
dbSetOrder(2)
dbSeek(xFilial("SA5")+SB1->B1_COD)
While !Eof() .And. (A5_FILIAL+A5_PRODUTO == xFilial("SA5")+SB1->B1_COD)

	If A5_FORNECE == SB1->B1_PROC   //Se ja Existe
		lExiste:=.T.
	Else
		RecLock("SA5",.F.,.T.)           //Eliminar outros Fornecedores
		dbDelete()
		MsUnLock()
		nCont += 1
	Endif
	dbSkip()
End

If !lExiste .And. !Empty(SB1->B1_PROC)   //Caso nao Haja,crie.
	dbSelectArea("SA2")
	dbSeek(xFilial("SA2")+SB1->B1_PROC)
	dbSelectArea("SB1")
	dbSeek(xFilial("SB1")+SB1->B1_COD)
	dbSelectArea("SA5")
	RecLock("SA5",.T.)
	Replace         A5_FILIAL  With xFilial("SA5"),;
		A5_FORNECE With SB1->B1_PROC,;
		A5_LOJA    With SA2->A2_LOJA,;
		A5_NOMEFOR With SA2->A2_NOME,;
		A5_PRODUTO With SB1->B1_COD ,;
		A5_NOMPROD With SB1->B1_DESC
EndIf

RestArea(aAreaAnt)
Return(.F.)

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010Preco Ё Autor Ё Marcos Bregantim      Ё Data Ё 17.05.94 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Validar Data de Referencia do Preco                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010Preco()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T.                                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
FUNCTION A010Preco()

LOCAL cPer := Substr(ReadVar(),10,1), cVar
If "B1_"$ReadVar()
	cVar := "B1_DTREFP" + cPer
Elseif "B5_"$ReadVar()
	cVar := "B5_DTREFP" + cPer
Endif

If &(ReadVar()) > 0
	M->&cVar := dDataBase
Endif
Return(.T.)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010Grade Ё Autor Ё Rosane Luciane Chene  Ё Data Ё 23.10.95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica se o produto nao foi cadastrado como referencia   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010Grade()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T./.F.                                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Grade()

Local aArea
Local cProduto	  :=&(ReadVar())
Local cMascara    := SuperGetMv("MV_MASCGRD")
Local lRet		  :=.T.
Local nTamRef     := Val(Substr(cMascara,1,2))

lGrade	  := GetMV("MV_GRADE")


If lGrade
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁSo salva ambiente se o parametro MV_GRADE estiver habilitado            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	aArea := GetArea()

	cProduto := Substr(cProduto,1,nTamRef)

	dbSelectArea("SB4")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SB4")+cProduto,.F.) .And. !Empty(cProduto) .And. ;
		 AllTrim(SubStr(cProduto,nTamRef+1)) == "" )
		Help(" ",1,"A010GRADE")
		lRet := .F.
	Endif

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁRestaura a entrada da Rotina                                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	RestArea(aArea)
Endif
if lRet
	lRet := A010VlStr ()
EndIf
Return(lRet)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010Mod   Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 15/07/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica se o centro de custos cadastrado p/ a MOD existe  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010Mod()                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Mod()

Local cCC:=Substr(&(ReadVar()),4,9)
Local cAliasCC := "CTT"
Local lRet	   := .T.
dbSelectArea(cAliasCC)
If !(dbSeek(xFilial(cAliasCC)+cCC))
	Help(" ",1,"A010MOD")
	lRet := .F.
Endif
If lRet
	lRet := CTB105CC(cCC)
EndIf
Return(lRet)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010Contr Ё Autor Ё Cristina Ogura        Ё Data Ё 18/07/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁVerifica a existencia de contratos para o produto           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010Contr()                                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁMATA010                                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Contr()

Local cSavAlias := Alias()
Local nSavOrd
Local lRet		:= .T.

dbSelectArea("SC3")
nSavOrd := IndexOrd()
dbSetOrder(3)

If Altera .And. !(cPaisLoc $ "ARG|POR|EUA") .And. M->B1_CONTRAT == "N"
	If dbSeek(xFilial("SC3")+M->B1_COD)
		While !Eof() .And. SC3->C3_FILIAL+SC3->C3_PRODUTO == xFilial("SC3")+M->B1_COD
			If SC3->C3_ENCER != "E"
				Help(" ",1,"A010AE")
				lRet := .F.
				Exit
			EndIf
			dbSkip()
		EndDo
	EndIf
EndIf

dbSelectArea("SC3")
dbSetOrder(nSavOrd)
dbSelectArea(cSavAlias)

Return(lRet)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010ImportЁ Autor Ё MICROSIGA/AVERAGE     Ё Data Ё 20/08/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁConsiste campos relativos a Importacao (SIGAEIC)            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010Import()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁMATA010                                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Import()

Local lRet:=.T.

If M->B1_IMPORT == "S" .And. Empty(M->B1_UNI)
	Help("",1,"A010UNI")
	lRet:=.F.
Endif
Return(lRet)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010TudoOkЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё 17/07/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁVerifica se o registro nao foi incluido por outra estacao   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010TudoOk(ExpN1)		                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpN1 - Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁMATA010                                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010TudoOk(nOpc)

Local lRet      := .T.
Local l010TOkT  := ExistTemplate("A010TOK")
Local l010TOk   := Existblock("A010TOK")
Local nX        := 0
Local nY  		 := 0
Local lHistTab  := SuperGetMV("MV_HISTTAB", .F., .F.)
Local bCampoSB1 := { |x| SB1->(Field(x)) }
Local aArea     := GetArea()
Local lIntSFC  	:=  ExisteSFC("SB1") .And. !IsInCallStack("AUTO010")
Local lIntDPR 	:= IntegraDPR() .And. !IsInCallStack("AUTO010")// Determina se existe integracao com o DPR
Local lDAmarCt	:= SuperGetMV("MV_DAMARCT",.F.,.F.)
Local nOpcSFC	:= If(lCopia,3,nOpc) //Quando copia do registro, muda operaГЦo para inclusЦo

// ====================================================================
// VERIFICA INTEGRACAO COM SIGATAF
Local lIntTAF  := FindFunction("TAFExstInt") .AND. TAFExstInt()

lRet:=ExistChav("SB1",M->B1_COD)
If lRet
	If l010TOkT
		lRet:= ExecTemplate("A010TOK",.F.,.F.)
		If ValType(lRet) # "L"
			lRet :=.T.
		EndIf
	EndIf

	If lRet
		If l010TOk
			lRet:= Execblock("A010TOK",.F.,.F.)
			If ValType(lRet) # "L"
				lRet :=.T.
			EndIf
		EndIf
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁCarregar o vetor aCpoAltSB1 caso o campo B1_DESC tenha  Ё
	//Ёsido alterado. Somente sera gravado na tabela AIF apos  Ё
	//Ёa validacao completa da rotina.                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды


	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁAlterado por Patricia Rajao em 24/05/2010               Ё
	//ЁCarregar o vetor aCpoAltSB1 caso os campos: B1_DESC,    Ё
	//ЁB1_PICMENT e B1_PICMRET tenham sido alterados.          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lRet .And. !Inclui .And. lHistTab
		aCpoAltSB1 := {}
		DbSelectArea("SB1")
		For nX := 1 to FCount()
			IF (eVal( bCampoSB1, nX) == "B1_DESC") .OR. (eVal( bCampoSB1, nX) == "B1_PICMENT") .OR. (eVal( bCampoSB1, nX) == "B1_PICMRET")
				If !(M->&( eVal( bCampoSB1, nX) ) == &( eVal( bCampoSB1, nX) ))
					aAdd( aCpoAltSB1, { eVal( bCampoSB1, nX), &( eVal( bCampoSB1, nX) ) } )
				EndIf
			EndIf
		Next nX
	EndIf

	//зддддддддддддддддддддддддддддд©
	//Ё Valida o campo B1_LOCALIZ   Ё
	//юддддддддддддддддддддддддддддды
	If lRet .And. M->B1_LOCALIZ <> "S" .And. M->B1_LOCALIZ <> "N"
		Help(" ",1,"B1_LOCALIZ")
		lRet := .F.
	EndIf

	If lRet
		lRet := AvalLocali(M->B1_COD,.F.)
	Endif

	//зддддддддддддддддддддддддддддд©
	//Ё Gravacao do log de produtos Ё
	//юддддддддддддддддддддддддддддды
	If lRet .And. ALTERA
		A013GrvLog("SB1",M->B1_COD)
	Endif
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁChama rotina para integracao com SFC(Chao de Fabrica) Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. (lIntSFC .Or. lIntDPR)
	lRet := A010IntSFC(nOpcSFC)
EndIf

//Consiste amarraГЦo da Conta ContАbil X Centro de Custo
If lRet .And. lDAmarCt
	If !Empty(M->B1_CONTA) .And. !Empty(M->B1_CC) .And. (!CtbAmarra(M->B1_CONTA,M->B1_CC,M->B1_ITEMCC,M->B1_CLVL))
	   lRet:=.F.
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддд
//ЁCarrega array, caso algum campo tenha sido alterado.Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддд
If lRet .And. !Inclui .And. lHistFiscal
	aCmpoSB1 := {}
	DbSelectArea("SB1")
	For nY := 1 to FCount()
		If !(M->&( eVal( bCampoSB1, nY) ) == &( eVal( bCampoSB1, nY) ))
			aAdd( aCmpoSB1, { eVal( bCampoSB1, nY), &( eVal( bCampoSB1, nY) ) } )
		EndIf
	Next nY

	If Len(aCmpoSB1)>0 .And. lHistFiscal
		M->B1_IDHIST := IdHistFis()
	EndIf
EndIf

//-- MIL - CODITE - ValidaГЦo para nЦo permitir mesmo Grupo+Codite quando utilizado o MСdulo de ConcessionАrias
If lRet .And. SuperGetMV("MV_VEICULO",.F.,"N") == "S" .And. !Empty(M->B1_CODITE)
   lRet := ExistChav("SB1",M->B1_GRUPO+M->B1_CODITE,7)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁValida Custeio de OP com produto de Apropriacao IndiretaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .And. M->B1_APROPRI = "I" .And. M->B1_AGREGCU = "1"
	Help(" ",1,"M010APR")
	lRet := .F.
EndIf

// ==============================================
// Demetrio - 11/2014 - IntegraГЦo TAF
// ==============================================
If lRet .AND. lIntTAF
	MsgRun( STR0051, "Relizando integraГЦo do produto com SIGATAF", {|| TAFIntOnLn("T007",nOpc,cFilAnt) } ) // "Aguarde" "Anotando registros para integraГЦo"
EndIf

// IntegraГЦo com PC-Factory (PPI Multitask)
If lRet .And. FindFunction('PCPIntgPPI') .And. PCPIntgPPI()
	//Realiza a integraГЦo.
	lRet := MATA010PPI(,,.F.)
EndIf
RestArea(aArea)
Return(lRet)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё AVALF4   Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 01/12/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada da funcao F4                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum 	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA241                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MT010F4()
Local cFilBkp := cFilAnt
Set Key VK_F4 TO
If FWModeAccess("SB1")=="E"
	cFilAnt := SB1->B1_FILIAL
EndIf
MaViewSB2(SB1->B1_COD)
cFilAnt := cFilBkp
Set Key VK_F4 TO MT010F4()
Return Nil


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё MTA010OK Ё Autor Ё AVERAGE               Ё Data Ё 28/07/00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Verifica se existe Solic. de Importacao               	  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё                                                   		  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Mta010ok()

Local lRet := .t.
Local cArea:= ALIAS()

If nModulo == 17	// SIGAEIC
	dbSelectArea("SW1")
	dbSetOrder(3)
	If dbSeek(xFilial("SW1")+SB1->B1_COD)
		MsgInfo(STR0014) //"Produto possui Solicitacao de Importacao em andamento"
		lRet:=.F.
	else
		lRet:=.T.
	endif
	dbSetOrder(1)
	dbSelectArea(cArea)
Endif
Return(lRet)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё MTA010E  Ё Autor Ё AVERAGE               Ё Data Ё 28/07/00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Grava campo memo     do EIC                          	  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum 	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё                                                   		  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Mta010e()

If nModulo == 17			//SIGAEIC
	MSMM(SB1->B1_DESC_I,,,,2)
	MSMM(SB1->B1_DESC_GI,,,,2)
	MSMM(SB1->B1_DESC_P,,,,2)
Endif
Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A010Copia  Ё Autor Ё Larson Zordan         Ё Data Ё 17.07.01 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Ativa o sem═foro informado que, na inclus└o, ser═ usado      Ё╠╠
╠╠Ё          Ё o produto corrente como modelo para o produto novo.          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum               	                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T.     	                                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё SIGAEST                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A010Copia()

Local aArea   	:= { Alias(), IndexOrd(), Recno() }
Local nPosSB1 	:= aArea[3]
Local aRots 	:= AClone(aRotina)
Local lContinua	:= .T.
Local lRetPE    := .T.

aRotina := { { OemtoAnsi(STR0015) ,"A010Copia" , 0, 3, 0, .F. }}           //"Copia"

If xFilial("SB1") # SB1->B1_FILIAL .or. (SB1->(EOF()) .and. SB1->(BOF()))
	HELP(" ",1,"ARQVAZIO")
	lContinua := .F.
Endif

If lContinua
	lCopia := .T.
	If (ExistBlock("MT010VLD"))
		lRetPE:=ExecBlock("MT010VLD",.F.,.F.)
		If VALTYPE(lRetPE)<>"L"
			lRetPE := .T.
		EndIF
	EndIf

	If lRetPE
   		A010Inclui("SB1",nPosSB1,1)
	EndIf

	dbSelectArea( aArea[1] )
	dbSetOrder( aArea[2] )
	lCopia := .F.
	aRotina := AClone(aRots)

EndIf

Return(.T.)


/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A010LeReg  Ё Autor Ё Larson Zordan         Ё Data Ё 17.07.01 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Duplica um registro usando como base o registro posicionado  Ё╠╠
╠╠Ё          Ё pelo MBrowse. Ser═ chamada pela inclus└o quando o sem═foro   Ё╠╠
╠╠Ё          Ё lCopia estiver ligado na rotina de inclus└o.                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                    	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum 	                                                 	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё SIGAEST                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A010LeReg()

Local aCpoNot   := {}
Local bCampo := { |nCPO| Field(nCPO) }
Local nScan  := 0
Local cCodMem:= ""
Local cMemo  := ""
Local i      := 0

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto que Indica os campos que nao devem ser copiados    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock( "MTA010NC" )
	If Valtype( aCpoNot := ExecBlock( "MTA010NC", .F., .F. ) ) <> "A"
		aCpoNot   := {}
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Copia os campos do produto de refer┬ncia para a mem╒ria. Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SB1")
FOR i := 1 TO FCount()
	If !(FieldName( i ) == "B1_COD" .or. FieldName( i ) == "B1_CODITE") .And. Empty( AScan( aCpoNot,{|x| x == Upper(allTrim(FieldName( I )))} ) )

		If Empty( nScan := AScan( aMemos, { |x| x[1] == FieldName( i ) } ) )
			M->&(EVAL(bCampo,i)) := FieldGet(i)
		Else
			cCodMem := FieldGet(i)
			cMemo   := MSMM( cCodMem )
			M->&(aMemos[nScan,2]) := cMemo
		EndIf
	EndIf
NEXT i

Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A010PotenciЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё 31.07.02 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Valida potencia padrao digitada                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                    	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                 	Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё SIGAEST                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A010Potenci()

LOCAL lRet := .T.
If !Empty(&(ReadVar()))
	HELP(" ",1,"MA010NAOP")
	lRet:=.F.
EndIf
Return(lRet)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010LotQltЁ Autor ЁPaulo Emidio de Barros Ё Data Ё29/08/2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Sugere o tipo de Rastreaabilidade, quando o produto estiverЁ╠╠
╠╠Ё 		 Ё com opcao de envio para Inspecao no Quality				  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T. / .F.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a010LotQlt()

Local lRet := .T.
Return(lRet)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010AtuDescЁ Autor Ё Henry Fila           Ё Data Ё 23/09/02 Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Programa de Atualizacao da descricao dos produtos no SA5   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё A010AtuDesc()                                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё A010INCLUI e A010ALTERA                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010AtuDesc()

Local aArea    := GetArea()
Local aAreaSB1 := SB1->(GetArea())
Local aAreaSA5 := SA5->(GetArea())


PERGUNTE("MTA010",.F.) // para restaurar as perguntas da rotina
SA5->(dbSetOrder(2))
SA5->(MsSeek(xFilial("SA5")+SB1->B1_COD))
While SA5->(!Eof()) .And. (SA5->A5_FILIAL+SA5->A5_PRODUTO == xFilial("SA5")+SB1->B1_COD)
	If mv_par01 == 1
		RecLock("SA5",.F.)           //Eliminar outros Fornecedores
		SA5->A5_NOMPROD := SB1->B1_DESC
		MsUnLock()
	EndIf
	SA5->(dbSkip())
EndDo
RestArea(aAreaSB1)
RestArea(aAreaSA5)
RestArea(aArea)
Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё MT010Perg Ё Autor Ё                      Ё Data Ё          Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Carrega o 'pergunte' para o grupo do programa              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё MT010Perg()  	                                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010               	 	                              Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MT010Perg()

Pergunte("MTA010",.T.)
Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010WizardЁ Autor ЁRodrigo de A Sartorio  Ё Data Ё 06/10/04 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁAssistente para preenchimento de informacoes de logistica   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A010Wizard(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010()                                                  Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Wizard(cAlias,nReg,nOpc)

LOCAL oWizard,oEncSB1,oEncSB5
LOCAL oBmpSB1,oBmpSB5,oBmpDC3
PRIVATE Altera:=.F.,Inclui:=.T.
PRIVATE nOpcx:=nOpc

DEFINE WIZARD oWizard TITLE OemToAnsi(STR0008) HEADER OemToAnsi(STR0021) MESSAGE " " TEXT OemtoAnsi(STR0022) PANEL NEXT {|| .T.} FINISH {|| .T.}
// Painel 2
CREATE PANEL oWizard HEADER OemToAnsi(STR0023) MESSAGE OemToAnsi(STR0024)+" SB1" PANEL BACK {|| .F.} NEXT {|| A010VLSB1(oEncSB1)  } FINISH {|| .T.} EXEC {|| .T.}
//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Enchoice  Cadastro de produtos             Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SB1")
dbSetOrder(1)
RegToMemory("SB1",.T.)
oEncSB1:=Msmget():New("SB1",nReg,nOpc,,,,,{0,0,140,290},,,,,,oWizard:oMPanel[2])

oEncSB1:Refresh()
// Painel 3
CREATE PANEL oWizard HEADER OemToAnsi(STR0025) MESSAGE OemToAnsi(STR0024)+" SB5" PANEL BACK {||.F.} NEXT {|| A010VLSB5(oEncSB5,oBmpDC3) } FINISH {|| .T.} EXEC {|| .T.}
//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Enchoice Cadastro de dados complementares  Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SB5")
dbSetOrder(1)
RegToMemory("SB5",.T.)
oEncSB5:=Msmget():New("SB5",SB5->(RECNO()),nOpc,,,,,{0,0,140,290},,,,,,oWizard:oMPanel[3])
oEncSB5:Refresh()
// Painel 4
CREATE PANEL oWizard HEADER OemToAnsi(STR0027) MESSAGE OemToAnsi(STR0028) PANEL BACK {|| .F.} NEXT {|| .T. } FINISH {|| .T.} EXEC {|| .T.}
// Definicao do objeto SAY para descricao do processo efetuado
@ 04,001 BITMAP oBmpSB1 RESNAME "CHECKED" Size 16,16 NOBORDER OF oWizard:oMPanel[4] Pixel
@ 07,016 Say OemToAnsi(STR0023) Size 100,8 OF oWizard:oMPanel[4] Pixel
@ 24,001 BITMAP oBmpSB5 RESNAME "CHECKED" Size 16,16 NOBORDER OF oWizard:oMPanel[4] Pixel
@ 27,016 Say OemToAnsi(STR0025) Size 100,8 OF oWizard:oMPanel[4] Pixel
@ 44,001 BITMAP oBmpDC3 RESNAME "CHECKED" Size 16,16 NOBORDER OF oWizard:oMPanel[4] Pixel
@ 47,016 Say OemToAnsi(STR0026) Size 100,8 OF oWizard:oMPanel[4] Pixel
ACTIVATE WIZARD oWizard CENTERED VALID {|| .T. }
Return Nil


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010VLSB1 Ё Autor ЁRodrigo de A. Sartorio Ё Data Ё 06/10/04 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida a gravacao do registro no SB1 e grava o registro    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpL1 := A010VLSB1(ExpO1)			                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpO1 =  Objeto que contem a enchoice no SB1               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpL1 = .T. (valida p/gravar) ou .T. (nao valida gravacao) Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010VLSB1(oEncSB1)

Local lGrava:=Obrigatorio(oEncSB1:aGets,oEncSB1:aTela) .And. A010Tudook()
LOCAL bCampo:= {|nCPO| Field(nCPO) }
Local ix
If lGrava
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Cria o registro do produto                                   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Begin Transaction
		RecLock("SB1",.T.)
		For ix := 1 TO FCount()
			FieldPut(ix,M->&(EVAL(bCampo,ix)))
		Next ix
		Replace B1_FILIAL With xFilial("SB1")
		MsUnlock()
	End Transaction
	// Inicializa o codigo do produto no complemento de produto
	// com o conteudo do campo B1_COD
	M->B5_COD:=M->B1_COD
EndIf
RETURN(lGrava)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010VLSB5 Ё Autor ЁRodrigo de A. Sartorio Ё Data Ё 06/10/04 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida a gravacao do registro no SB5 e grava o registro    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpL1 := A010VLSB5(ExpO1,ExpO2)		                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpO1 =  Objeto que contem a enchoice no SB5               Ё╠╠
╠╠Ё          Ё ExpO2 =  Objeto do BITMAP de checagem                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpL1 = .T. (validacao OK) ou .T. (validacao nao Ok)		  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010VLSB5(oEncSB5,oBmpDC3)

Local lGrava:=Obrigatorio(oEncSB5:aGets,oEncSB5:aTela)
LOCAL bCampo:= {|nCPO| Field(nCPO) }
Local ix
If lGrava
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Cria o registro do complemento do produto                    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Begin Transaction
		RecLock("SB5",.T.)
		For ix := 1 TO FCount()
			FieldPut(ix,M->&(EVAL(bCampo,ix)))
		Next ix
		Replace B5_FILIAL With xFilial("SB5")
		MsUnlock()
	End Transaction
	DLA030AWMS(M->B1_LOCPAD,M->B1_COD,M->B1_DESC)
	DC3->(dbSetOrder(1))
	If !DC3->(dbSeek(xFilial("DC3")+M->B1_COD))
		oBmpDC3:Load("NOCHECKED")
	EndIf
EndIf
RETURN(lGrava)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010IncPeCЁ Autor ЁAlex Sandro Valario    Ё Data Ё 16/09/05 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Inclusao de produto junto com o complemento                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A010IncPeC(ExpC1,ExpN1,ExpN2,ExpC2,ExpA1,ExpC3,ExpA2,ExpL1)Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 =  Alias do arquivo								  Ё╠╠
╠╠Ё          Ё ExpN1 =  Numero do registro			                      Ё╠╠
╠╠Ё          Ё ExpN2 =  Numero da opcao selecionada	                      Ё╠╠
╠╠Ё          Ё ExpC2 =  Nome da funcao para duplicar o reg.na inclusao,   Ё╠╠
╠╠Ё          Ё          qdo semaforo lcopia estiver ligado.            	  Ё╠╠
╠╠Ё          Ё ExpA1 =  Array dos campos                                  Ё╠╠
╠╠Ё          Ё ExpC3 =  Nome da funcao para TUDOOK		                  Ё╠╠
╠╠Ё          Ё ExpA2 =  Array dos botoes								  Ё╠╠
╠╠Ё          Ё ExpL1 =  Qdo .F. carrega inicializ.padrao p/campos virtuaisЁ╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum													  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010IncPeC(cAlias,nReg,nOpc,cFunc,aCpos,cTudoOk,aButtons,lVirtual)

Local aArea    := GetArea(cAlias)
Local aSvRot   := Nil
Local cMemo    := ""
Local lM010B5CP:= ExistBlock("M010B5CP")
Local lB5Descri:= .T.
Local nX       := 0
Local nPosCodB5:= 1
Local nOpcA    := 0
Local bCampo   := {|nCPO| Field(nCPO) }
Local bOk      := Nil
Local bOk2     := {|| .T.}
Local bOk3     := {|| a010Refresh(oFolder)}
Local oDlg
Local aObjects    := {}
Local aSize       := {}
Local aInfo       := {}
Local aPosObj     := {}

//enchoice
Local oFolder
Private oEnc01
Private oEnc02
Private aTELA:=Nil,aGets:= Nil
DEFAULT cTudoOk := ".T."
DEFAULT bOk     := &("{|| "+cTudoOk+"}")


//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo							 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nOpc == Nil
	nOpc := 3
	If Type("aRotina") == "A"
		aSvRot := aClone(aRotina)
	EndIf
	Private aRotina := { { " "," ",0,1 } ,{ " "," ",0,2 },{ " "," ",0,3 } }
EndIf
RegToMemory(cAlias, .T., .F. )
RegToMemory("SB5",!lCopia , .F. )
If lCopia
	M->B5_COD:=Space(TamSX3("B5_COD")[1])
	M->B1_COD:=CriaVar("B1_COD")
	If lM010B5CP .And. MV_PAR02 == 1
		lB5Descri:= ExecBlock("M010B5CP",.F.,.F.)
		If ValType (lB5Descri) != "L"
			lB5Descri:= .T.
		EndIf
	EndIf
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa variaveis para campos Memos Virtuais (GILSON)			 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Type("aMemos")=="A"
	For nX :=1 To Len(aMemos)
		cMemo := aMemos[nX][2]
		If ExistIni(cMemo)
			&cMemo := InitPad(SX3->X3_RELACAO)
		Else
			&cMemo := ""
		EndIf
	Next nX
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Funcoes executadas antes da chamada da Enchoice      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cFunc != NIL
	&cFunc.()
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ajusta a largura para o tamanho padrao Protheus Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддды
aSize := MsAdvSize()

aObjects := {}
AAdd( aObjects, { 100, 100, .T., .T. } )
aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 }

aPosObj := MsObjSize(aInfo,aObjects,.T.)

DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
oFolder := TFolder():New(13,,{STR0033,STR0034},{STR0033,STR0034},oDlg,,,,.t.,.F.,oDlg:nWidth,oDlg:nHeight,) //"Produto"###"Complemento"###"Produto"###"Complemento"

oFolder:bSetOption := {|nAtu| Al_MudaEnc(nAtu,oFolder:nOption,lB5Descri)}
oFolder:align:= CONTROL_ALIGN_ALLCLIENT
//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Enchoice 01                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
aPos:={}
dbSelectArea("SB1")
oEnc01:= MsMGet():New("SB1" ,nReg ,nOpc,,,,,aPosObj[1],aCpos,       ,        ,          ,cTudoOk ,oFolder:aDialogs[1], ,.F.)
oEnc01:oBox:align:= CONTROL_ALIGN_ALLCLIENT

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Enchoice 02                                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SB5")
oEnc02:=MsMGet():New("SB5",nReg,nOpc,,,, ,aPosObj[1],     ,       ,        ,          ,        ,oFolder:aDialogs[2], ,lVirtual)
nPosCodB5 := AsCan(oEnc02:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="M->B5_COD"})
If !Empty(nPosCodB5)
	oEnc02:AENTRYCTRLS[nPosCodB5]:bWhen	:= {|| .F.}
EndIf
oEnc02:oBox:align:= CONTROL_ALIGN_ALLCLIENT
aTela := aClone(oEnc02:aTela)
aGets := aClone(oEnc02:aGets)

dbSelectArea("SB1")
ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,{|| nOpcA := 1, Eval(bOk3) .And.;
	If(Obrigatorio(oEnc01:aGets,oEnc01:aTela).And.Obrigatorio(oEnc02:aGets,oEnc02:aTela) .and.;
	Eval(bOk).And.Eval(bOk2,nOpc),oDlg:End(),(nOpcA:=3,.f.))},;
	{|| nOpcA := 3,oDlg:End()},,aButtons)) CENTERED

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gravacao da enchoice                                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If nOpcA == 1
	Begin Transaction
		M->B5_COD:=M->B1_COD
		DBSelectArea(cAlias)
		RecLock(cAlias,.T.)
		For nX := 1 TO FCount()
			If "_FILIAL"$FieldName(nX)
				FieldPut(nX,xFilial(cAlias))
			Else
				FieldPut(nX,M->&(EVAL(bCampo,nX)))
			EndIf
		Next nX
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁGrava os campos Memos Virtuais					 				  Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If Type("aMemos") == "A"
			For nX := 1 to Len(aMemos)
				cVar := aMemos[nX][2]
				MSMM(,TamSx3(aMemos[nX][2])[1],,&cVar,1,,,cAlias,aMemos[nX][1])
			Next nX
		EndIf
		If __lSX8
			ConfirmSX8()
		EndIf
		dbSelectArea("SB5")
		dbSetOrder(1)
		If dbSeek(xFilial("SB5")+M->B1_COD)
			RecLock("SB5",.F.)
		Else
			RecLock("SB5",.T.)
		EndIf
		For nX := 1 TO FCount()
			If "_FILIAL"$FieldName(nX)
				FieldPut(nX,xFilial("SB5"))
			Else
				FieldPut(nX,M->&(EVAL(bCampo,nX)))
			EndIf
		Next nX
	End Transaction
Else
	If __lSX8
		RollBackSX8()
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade dos dados                                  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If aSvRot != Nil
	aRotina := aClone(aSvRot)
EndIf
RestArea(aArea)
lRefresh := .T.
Return(nOpcA)


Static Function Al_MudaEnc(nAtu,oFolder,lB5Descri)
DEFAULT lB5Descri:= .T.

If nAtu== 1
	dbSelectArea("SB1")
	oEnc01:oBox:align:= CONTROL_ALIGN_ALLCLIENT
	oEnc01:Refresh()
Else
	dbSelectArea("SB5")
	M->B5_COD:=M->B1_COD
	If lB5Descri
		M->B5_CEME:=If(Empty(M->B5_CEME),PADR(M->B1_DESC,Len(SB5->B5_CEME)),PADR(M->B5_CEME,Len(SB5->B5_CEME)))
	EndIf
	oEnc02:oBox:align:= CONTROL_ALIGN_ALLCLIENT
	oEnc02:Refresh()
EndIf
Return Nil


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤┘o   ЁA010AltPeCЁ Autor ЁAlex Sandro Valario    Ё Data Ё 16/09/05 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠Ё Descri┤┘oЁ Alteracao de produto junto com o complemento               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpN1 := A010IncPeC(ExpC1,ExpN2,ExpN3,ExpA1,ExpA2,ExpC2,	  Ё╠╠
╠╠Ё          Ё          ExpC3,ExpA3)				                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 =  Alias do arquivo								  Ё╠╠
╠╠Ё          Ё ExpN2 =  Numero do registro			                      Ё╠╠
╠╠Ё          Ё ExpN3 =  Numero da opcao selecionada	                      Ё╠╠
╠╠Ё          Ё ExpA1 =  nao utilizado									  Ё╠╠
╠╠Ё          Ё ExpA2 =  Array dos campos                                  Ё╠╠
╠╠Ё          Ё ExpC2 =  Nome da funcao para TUDOOK		                  Ё╠╠
╠╠Ё          Ё ExpC3 =  Nome da funcao para duplicar o reg.na inclusao,   Ё╠╠
╠╠Ё          Ё          qdo semaforo lcopia estiver ligado.            	  Ё╠╠
╠╠Ё          Ё ExpA3 =  Array dos botoes								  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё ExpN1 = nOpca											  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010AltPeC(cAlias,nReg,nOpc,aAcho,aCpos,cTudoOk,cFunc,aButtons)

Local aArea    := GetArea(cAlias)
Local bCampo   := {|nCPO| Field(nCPO) }
Local bOk      := Nil
Local bOk2     := {|| .T.}
Local cCpoFil  := PrefixoCpo(cAlias)+"_FILIAL"
Local cMemo    := ""
Local nOpcA    := 0
Local nX       := 0
Local nPosInsPat:= 0
Local nPosCodAtv:= 0
Local oDlg
Local nTop
Local nLeft
Local nBottom
Local nRight
Local cAliasMemo
Local aObjects    := {}
Local aSize       := {}
Local aInfo       := {}
Local aPosObj     := {}
Local nG

//enchoice
Local oFolder
Private oEnc01
Private oEnc02
Private aTELA:= NIL,aGets:=NIL

DEFAULT cTudoOk := ".T."
DEFAULT nReg    := (cAlias)->(RecNO())
DEFAULT bOk 	 := &("{|| "+cTudoOk+"}")

//зддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ajusta a largura para o tamanho padrao Protheus Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддды
aSize := MsAdvSize()

aObjects := {}
AAdd( aObjects, { 100, 100, .T., .T. } )
aInfo    := { aSize[1], aSize[2], aSize[3], aSize[4], 2, 2 }

aPosObj := MsObjSize(aInfo,aObjects,.T.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerIfica se esta' alterando um registro da mesma filial               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
DbSelectArea("SB5")
DbSelectArea(cAlias)
If (cAlias)->(FieldPos(cCpoFil))==0 .Or. (cAlias)->(FieldGet(FieldPos(cCpoFil))) == xFilial(cAlias)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Monta a entrada de dados do arquivo						     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If SoftLock(cAlias) .AND.SoftLock("SB5")
		RegToMemory(cAlias,.F.,.F.)
		RegToMemory("SB5",.F. ,.F. )

		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Inicializa variaveis para campos Memos Virtuais		 			  Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If Type("aMemos")=="A"
			For nX:=1 to Len(aMemos)
				cMemo := aMemos[nX][2]
				If ExistIni(cMemo)
					&cMemo := InitPad(SX3->X3_RELACAO)
				Else
					&cMemo := ""
				EndIf
			Next nX
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Inicializa variaveis para campos Memos Virtuais		 			  Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( ValType( cFunc ) == 'C' )
			If ( !("(" $ cFunc) )
				cFunc+= "()"
			EndIf
			&cFunc
		EndIf

		DEFINE MSDIALOG oDlg TITLE cCadastro FROM aSize[7],0 TO aSize[6],aSize[5] OF oMainWnd PIXEL
		oFolder := TFolder():New(13,,{STR0033,STR0034},{STR0033,STR0034},oDlg,,,,.t.,.F.,oDlg:nWidth,oDlg:nHeight,) //"Produto"###"Complemento"###"Produto"###"Complemento"

		oFolder:bSetOption := {|nAtu| Al_MudaEnc(nAtu,oFolder:nOption)}
		oFolder:align:= CONTROL_ALIGN_ALLCLIENT
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Enchoice 01                                          Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aPos:={}
		dbSelectArea("SB1")
		oEnc01:= MsMGet():New("SB1" ,nReg ,nOpc,,,,,aPosObj[1],aCpos,       ,        ,          ,cTudoOk ,oFolder:aDialogs[1], ,)
		oEnc01:oBox:align:= CONTROL_ALIGN_ALLCLIENT

		//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Enchoice 02                                          Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SB5")
		oEnc02:=MsMGet():New("SB5",nReg,nOpc,,,,,aPosObj[1],     ,       ,        ,          ,        ,oFolder:aDialogs[2], ,)
		nPosCodB5 := AsCan(oEnc02:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="M->B5_COD"})
		nPosInsPat 	:= AsCan(oEnc02:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="M->B5_INSPAT"})
		nPosCodAtv 	:= AsCan(oEnc02:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="M->B5_CODATIV"})
		If !Empty(nPosCodB5)
			oEnc02:AENTRYCTRLS[nPosCodB5]:bWhen	:= {|| .F.}
		EndIf
		If nPosInsPat >0 .And. nPosCodAtv >0
			oEnc02:AENTRYCTRLS[nPosInsPat]:bWhen	:= {|| .T.}
			oEnc02:AENTRYCTRLS[nPosCodAtv]:bWhen	:= {|| .T.}
		EndIf
		oEnc02:oBox:align:= CONTROL_ALIGN_ALLCLIENT
		aTela := aClone(oEnc02:aTela)
		aGets := aClone(oEnc01:aGets)
		For nG := 1 TO Len(oEnc02:aGets)
			aADD(aGets,oEnc02:aGets[nG])
		Next nG

		ACTIVATE MSDIALOG oDlg ON INIT (EnchoiceBar(oDlg,{|| nOpcA := 1,;
			If(Obrigatorio(oEnc01:aGets,oEnc01:aTela).And.Obrigatorio(oEnc02:aGets,oEnc02:aTela) .and.;
			Eval(bOk).And.Eval(bOk2,nOpc),oDlg:End(),(nOpcA:=3,.f.))},;
			{|| nOpcA := 3,oDlg:End()},,aButtons,nReg,cAlias))

		(cAlias)->(MsGoTo(nReg))
		If nOpcA == 1
			Begin Transaction
				RecLock(cAlias,.F.)
				For nX := 1 TO FCount()
					FieldPut(nX,M->&(EVAL(bCampo,nX)))
				Next nX
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁGrava os campos Memos Virtuais					  				  Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If Type("aMemos") == "A"
					For nX := 1 to Len(aMemos)
						cVar := aMemos[nX][2]
						cVar1:= aMemos[nX][1]
						//IncluМdo parametro com o nome da tabela de memos => para mСdulo APT
						cAliasMemo := If(len(aMemos[nX]) == 3,aMemos[nX][3],Nil)
						MSMM(&cVar1,TamSx3(aMemos[nX][2])[1],,&cVar,1,,,cAlias,aMemos[nX][1],cAliasMemo)
					Next nX
				EndIf

				DBSelectArea("SB5")
				RecLock("SB5",SB5->(Eof()))
				For nX := 1 TO FCount()
					If SB5->(FieldName(nX)) =="B5_FILIAL"
						SB5->B5_FILIAL:= xFilial("SB5")
					Else
						FieldPut(nX,M->&(EVAL(bCampo,nX)))
					EndIf
				Next nX

			End Transaction
		EndIf
	Else
		nOpcA := 3
	EndIf
Else
	Help(" ",1,"A000FI")
	nOpcA := 3
EndIf
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade dos dados                                  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
MsUnLockAll()
RestArea(aArea)
Return(nOpcA)


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010Consul Ё Autor ЁAlexandre Inacio LemesЁ Data Ё31/03/2005Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁExcuta a chamada da funcao MC050con para consulta do produtoЁ╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum 	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Consul()

Local aArea    := GetArea()

SetKey( VK_F12, { || pergunte("MTC050",.T.) } )
pergunte("MTC050",.F.)
MC050Con()
Set Key VK_F4 TO MT010F4()

SetKey( VK_F12, { || pergunte("MTA010",.T.) } )
Pergunte("MTA010",.F.)

RestArea(aArea)
Return Nil


/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA010SeleOpcЁ Autor ЁAlex Sandro Valario   Ё Data Ё04/05/2005Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁFuncao p/ selecao de Opcionais                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Nenhum 	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A010SeleOpc()

Local cAnt:=M->B1_OPC
Local cRet:=""
Local lOpcPadrao:= GetNewPar("MV_REPGOPC","N") == "N"
Private aRetorOpc:={}

If ! SeleOpc(1,"MATA010",SB1->B1_COD,Nil,@cRet)
	If lOpcPadrao	
		M->B1_OPC:=cAnt
	Else
		M->B1_MOPC:=cAnt
	EndIf
Else
	If lOpcPadrao  
		M->B1_OPC:=cRet
	Else
		M->B1_MOPC:=cRet
	EndIf
EndIf
Return Nil

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ёa010RefreshЁ Autor ЁPatricia A. Salomao   Ё Data Ё08/06/2006Ё╠╠
╠╠цддддддддддедддддддддддадддддддаддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁFuncao executada pela TudoOk();Carrega as Variaveis de memo Ё╠╠
╠╠Ё          Ёria e efetua o refresh da pasta em que nao esta posicionado.Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Objeto Folder                                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T.    	                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA010                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function a010Refresh(oFolder)
Local nPasta1 := oFolder:nOption     //-- Pasta em que esta posionado
Local nPasta2 := IIf(nPasta1==1,2,1)
Al_MudaEnc(nPasta2) //-- Efetua a atualizacao das variaveis e Refresh da outra pasta
Return .T.

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁPrograma  ЁMenuDef   Ё Autor Ё Fabio Alves Silva     Ё Data Ё01/11/2006Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Utilizacao de menu Funcional                               Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁArray com opcoes da rotina.                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁParametros do array a Rotina:                               Ё╠╠
╠╠Ё          Ё1. Nome a aparecer no cabecalho                             Ё╠╠
╠╠Ё          Ё2. Nome da Rotina associada                                 Ё╠╠
╠╠Ё          Ё3. Reservado                                                Ё╠╠
╠╠Ё          Ё4. Tipo de Transa┤└o a ser efetuada:                        Ё╠╠
╠╠Ё          Ё    1 - Pesquisa e Posiciona em um Banco de Dados           Ё╠╠
╠╠Ё          Ё    2 - Simplesmente Mostra os Campos                       Ё╠╠
╠╠Ё          Ё    3 - Inclui registros no Bancos de Dados                 Ё╠╠
╠╠Ё          Ё    4 - Altera o registro corrente                          Ё╠╠
╠╠Ё          Ё    5 - Remove o registro corrente do Banco de Dados        Ё╠╠
╠╠Ё          Ё5. Nivel de acesso                                          Ё╠╠
╠╠Ё          Ё6. Habilita Menu Funcional                                  Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function MenuDef()

Local lPyme		:= Iif(Type("__lPyme") <> "U",__lPyme,.F.)
Local aRotAdic

Local nPos       := 0
Local aEntRelac  := {}
Local aAtiv      := {}
Local aAnotac    := {}


PRIVATE aRotina	:= {}
Private lIntLox := GetMv("MV_QALOGIX") == "1"

If !lIntLox

	aRotina	:= { 	{ OemToAnsi(STR0003) ,"AxPesqui"		, 0 , 1, 0, .F.}}		//"Pesquisar"

	If IsInCallStack("FATA320")
		aPermissoes := FT060Permi(__cUserId, "ACA_ACPROD")
	Else
		aPermissoes := {.T.,.T.,.T.,.T.}
	EndIf
	If aPermissoes[4]
		aAdd(aRotina, { OemtoAnsi(STR0004) ,"A010Visul"	  		, 0 , 2, 0, nil} )	//"Visualizar"
	EndIf
	If aPermissoes[1]
		aAdd(aRotina, { OemtoAnsi(STR0005) ,"A010Inclui"		, 0 , 3, 0, nil} )	//"Incluir"
	EndIf
	If aPermissoes[2]
		aAdd(aRotina, { OemtoAnsi(STR0006) ,"A010Altera"		, 0 , 4, 2, nil} )	//"Alterar"
	EndIf
	If aPermissoes[3]
		aAdd(aRotina, { OemtoAnsi(STR0007) ,"Mata010Deleta"	, 0 , 5, 1, nil} )		//"Excluir"
	EndIf
	aAdd(aRotina, { OemtoAnsi(STR0017) ,"A010Consul"		, 0 , 2, 0, .F.} )		//"Consulta"
	aAdd(aRotina, { OemtoAnsi(STR0015) ,"A010Copia"		, 0 , 9, 0, nil} )			//"Copia"
Else
	aRotina	:= { 	{ OemToAnsi(STR0003) ,"AxPesqui"		, 0 , 1, 0, .F.},;		//"Pesquisar"
		{ OemtoAnsi(STR0004) ,"A010Visul"		, 0 , 2, 0, nil},;				//"Visualizar"
		{ OemtoAnsi(STR0017) ,"A010Consul"		, 0 , 2, 0, .F.}}		      //"Consulta"
	l010Auto  := If (Type("l010Auto") =="U",.T.,l010Auto)
	If l010Auto //Adicionar caso seja rotina automatica - integracao com o Logix
		aAdd(aRotina, { OemtoAnsi(STR0005) ,"A010Inclui"		, 0 , 3, 0, nil} )	//"Incluir"
		aAdd(aRotina, { OemtoAnsi(STR0006) ,"A010Altera"		, 0 , 4, 2, nil} )	//"Alterar"
		aAdd(aRotina, { OemtoAnsi(STR0007) ,"Mata010Deleta"	, 0 , 5, 1, nil} )		//"Excluir"
	Endif
Endif
aAdd(aRotina,{OemtoAnsi(STR0040), "A010WizFac", 0, 4, 2, .F.})	//"Facilitador"
If nModulo == 4 .Or. nModulo == 10
	aAdd(aRotina, { OemToAnsi(STR0042) ,"A010ProdAl", 0 , 4, 0, .F.} )			//"Alte&rnativos"
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Ponto de entrada utilizado para inserir novas opcoes no array aRotina  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("MTA010MNU")
	ExecBlock("MTA010MNU",.F.,.F.)
EndIf

If IntDl()
	AAdd( aRotina, { OemtoAnsi(STR0020) ,"A010Wizard", 0 , 3}) // "Assis&tente WMS"
EndIf

// Banco de conhecimento para SИrie 3 e SИrie T
AAdd( aEntRelac, { STR0018, "MsDocument('SB1',SB1->(RecNo()),4)", 0, 4 } )  //"Conhecimento"
AAdd( aEntRelac, { STR0084, "CRMA160()", 0, 4} )//"Adic. Tab. PreГo"

// Trade-Easy -  05/05/2011                                                                 //RRC - 03/09/2013
                                 // SIGAEIC         // SIGAEDC          // SIGAEEC          //SIGAESS
If (nModulo == 17 .Or. nModulo == 50  .Or. nModulo == 29 .Or. nModulo == 85 .Or. ((AvFlags("CONTROLE_SERVICOS_AQUISICAO") .Or. AvFlags("CONTROLE_SERVICOS_VENDA"))))
	AAdd( aEntRelac, { STR0091, "EYJCOMP('SB1',SB1->(RecNo()),4)", 0, 4 } )  //"Dados Comp. Prod." //FSM - 15/10/2012
EndIf
If lHistFiscal
	Aadd(aRotina, { OemtoAnsi(STR0066),  "A010Hist()" , 0 ,0,0, NIL })//"HistСrico
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё P.E. utilizado para adicionar items no Menu da mBrowse       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ExistBlock("MT010BRW")
	aRotAdic := ExecBlock("MT010BRW",.f.,.f.)
	If ValType(aRotAdic) == "A"
		AEval(aRotAdic,{|x| AAdd(aRotina,x)})
	EndIf
EndIf

If nModulo == 73

	AAdd( aEntRelac, { STR0090 ,"Ma180Alt('SB1',SB1->(RecNo()),4)", 0 , 4})//"Complemento do produto"

	aEntRelac := CRMXINCROT("SB1",aEntRelac)

	nPos := ASCAN(aEntRelac, { |x| IIF(ValType(x[2]) == "C", x[2] == "CRMA190Con()", Nil) })
	If nPos > 0
		ADD OPTION aRotina TITLE aEntRelac[nPos][1] ACTION aEntRelac[nPos][2] OPERATION 8  ACCESS 0//"Conectar"
		Adel(aEntRelac,nPos)
		Asize(aEntRelac,Len(aEntRelac)-1)
	EndIf

	nPos := ASCAN(aEntRelac, { |x|  IIF(ValType(x[2]) == "C", x[2] == "CRMA180()", Nil) })
	If nPos > 0
		ADD OPTION aAtiv   TITLE STR0085 ACTION "CRMA180(,,,3,,)" OPERATION 3  ACCESS 0 //"Nova Atividade"
		ADD OPTION aAtiv   TITLE STR0086 ACTION "CRMA180()" OPERATION 8  ACCESS 0 //"Todas as ATividades"
		aEntRelac[nPos][2] := aAtiv
	EndIf

	nPos := ASCAN(aEntRelac, { |x| IIF(ValType(x[2]) == "C", x[2] == "CRMA090()", Nil)})
	If nPos > 0
		ADD OPTION aAnotac   TITLE STR0087 ACTION "CRMA090(3)" OPERATION 3  ACCESS 0 //"Nova AnotaГЦo"
		ADD OPTION aAnotac   TITLE STR0088 ACTION "CRMA090()" OPERATION 8  ACCESS 0 //"Todas as AnotaГУes"
		aEntRelac[nPos][2] := aAnotac
	EndIf


EndIf

Asort(aEntRelac,,,{ | x,y | y[1] > x[1] } )
AAdd( aRotina, { STR0089 ,aEntRelac, 0 , 8})//"Relacionadas"

Return(aRotina)

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁPrograma  ЁA010WizFacЁ Autor Ё Gustavo G. Rueda      Ё Data Ё27/11/2007Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Chamada da rotina que permite uma manutencao facil no      Ё╠╠
╠╠Ё          Ё cadastro.                                                  Ё╠╠
╠╠Ё          Ё                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё.T.                                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function A010WizFac()

Local	cCmps		:=	""
Local	aPar 		:=	{}
Local	cMVA010FAC	:=	GetNewPar("MV_A010FAC","")

cCmps	:=	"B1_TIPO/B1_CODITE/B1_UM/B1_LOCPAD/B1_GRUPO/B1_PICM/B1_IPI/B1_ESPECIE/B1_ALIQISS/B1_MSBLQL/"
cCmps	+=	"B1_CODISS/B1_TE/B1_TS/B1_PICMRET/B1_PICMENT/B1_IMPZFRC/B1_SEGUM/B1_CONV/B1_TIPCONV/B1_CONTA/B1_CC/B1_ITEMCC/B1_ORIGEM/"
cCmps	+=	"B1_CLASFIS/B1_GRTRIB/B1_CONTSOC/B1_IRRF/B1_IMPORT/B1_CODOBS/B1_OBS/B1_SITPROD/B1_INSS/B1_REDINSS/B1_REDIRRF/B1_TAB_IPI/"
cCmps	+=	"B1_REDPIS/B1_REDCOF/B1_PCSLL/B1_PCOFINS/B1_PPIS/B1_VLR_IPI/B1_CLVL/B1_ATIVO/B1_VLR_ICM/B1_INT_ICM/B1_VLRSELO/B1_SELO/B1_PIS/"
cCmps	+=	"B1_CLASSE/B1_VLR_PIS/B1_COFINS/B1_CSLL/B1_FRETISS/B1_CALCFET/B1_PAUTFET/B1_VLR_COF/B1_PRFDSUL/B1_RETOPER/B1_CNAE/B1_CRDEST/"
cCmps	+=	cMVA010FAC

aAdd(aPar,{"SB1","B1_COD+' - '+B1_DESC", cCmps,""})

MATA984(aPar[1,1],aPar[1,2],aPar[1,3],,aPar[1,4])

Return .T.

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁMATA010   ╨Autor  ЁAndre Anjos         ╨ Data Ё  27/02/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao ЁValida o campo B1_ESTRORI                                   ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA010                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010EstOri()
Local aArea := GetArea()
Local lRet := .T.

dbSelectArea("SG1")
dbSetOrder(1)
If !Empty(M->B1_ESTRORI) .And. !dbSeek(xFilial("SG1")+M->B1_ESTRORI+M->B1_COD) .Or. G1_QUANT > 0
	Help(" ",1,"REGNOIS")
	lRet := .F.
EndIf

RestArea(aArea)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁA010ProdAl╨Autor  |Andre Anjos         ╨ Data Ё  19/03/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao ЁInterface para cadastramento dos produtos alternativos.     ╨╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada 			              Ё╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA010                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010ProdAl(cAlias,nReg,nOpc)
// Variaveis p/ processamento
Local aArea 	:= GetArea()
Local lOk 		:= .F.
Local nPosOrdem := 0
Local nX 		:= 0
Local nY 		:= 0
Local nGrOrdem 	:= 0
Local lContinua := .T.
// Variaveis p/ objetos da tela
Local aNoFields := {"GI_FILIAL","GI_PRODORI"}
Local aButtons 	:= {}
Local oSize
Local oTela, oProdOri ,	oTelaNew
Local cSeek 	:= xFilial("SGI")+SB1->B1_COD
Local bWhile 	:= {|| SGI->(GI_FILIAL+GI_PRODORI)}
Local bFor	 	:= {|| .T.}

Private aHeader := {}
Private aCols 	:= {}
Private cProdOri:= SB1->B1_COD

//Verifica se e fantasma
If RetFldProd(SB1->B1_COD,"B1_FANTASM") == "S"
	Help(" ",1,"ALTERFAN")
	lContinua := .F.
EndIf

If lContinua
	FillGetDados(4,"SGI",1,cSeek,bWhile,bFor,aNoFields)
	If Empty(GDFieldGet("GI_ORDEM",1))
		//Se nao ha alternativos prepara para inclusao
		GDFieldPut("GI_ORDEM",StrZero(1,Len(SGI->GI_ORDEM)),1)
	Else
		//Se houver alternativos, ordena pela ordem
		aSort(aCols,,,{|x,y| x[GDFieldPos("GI_ORDEM")] < y[GDFieldPos("GI_ORDEM")]})
	EndIf

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Calcula dimensУes                                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	oSize := FwDefSize():New()
	oSize:AddObject( "CABECALHO",  100, 05, .T., .T. ) // Totalmente dimensionavel
	oSize:AddObject( "GETDADOS" ,  100, 95, .T., .T. ) // Totalmente dimensionavel

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё P.E. utilizado para calcular dimensУes de percentual de tela |
	//| do CabeГalho/GetDados                                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

	If ExistBlock("MT010SIZ")
		oSizeNew:=ExecBlock("MT010SIZ",.f.,.f.,{Osize})
		If ValType(oSizeNew) == "A"
			oSize:= aClone(oSizeNew)
		EndIf
	EndIf

	oSize:lProp 	:= .T. // Proporcional
	oSize:aMargins 	:= { 3, 3, 3, 3 } // Espaco ao lado dos objetos 0, entre eles 3

	oSize:Process() 	   // Dispara os calculos

	Define MSDialog oTela Title OemToAnsi(STR0033)+Space(1)+AllTrim(cProdOri); //Produto Alternativo\
									FROM oSize:aWindSize[1],oSize:aWindSize[2] TO oSize:aWindSize[3],oSize:aWindSize[4] OF oMainWnd PIXEL
	oProdOri := tSay():New(oSize:GetDimension("CABECALHO","LININI")+3 ,oSize:GetDimension("CABECALHO","COLINI"),{|| RetTitle("GI_PRODORI")},oTela,,,,,,.T.,,,110,20)
	@ oSize:GetDimension("CABECALHO","LININI") ,oSize:GetDimension("CABECALHO","COLINI")+33 MsGet cProdOri Size 100,10 When .F. Of oTela Pixel

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё P.E. utilizado para Adicionar novos campos na getdados         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ExistBlock("MT010GETD")
		oTelaNew:=ExecBlock("MT010GETD",.f.,.f.,{oTela})
		If ValType(oTelaNew) == "A"
			oTela := aClone(oTelaNew)
		EndIf
	EndIf

	oGetD := MsGetDados():New(oSize:GetDimension("GETDADOS","LININI"),oSize:GetDimension("GETDADOS","COLINI"),;
						  oSize:GetDimension("GETDADOS","LINEND"),oSize:GetDimension("GETDADOS","COLEND"),;
						  4,"AlterLinOK",/*TudoOk*/,"+GI_ORDEM",.T.,,1,,999,"A010FldOk")

	Activate MSDialog oTela On Init EnchoiceBar(oTela,{||lOk:=.T.,If(oGetD:TudoOk(),oTela:End(),lOk:=.F.)},{||oTela:End()},,aButtons)

	//Processa gravaГЦo se clicou no OK e tem linha preenchida
	If lOk .And. !Empty(GDFieldGet("GI_PRODALT",1))
		dbSelectArea("SGI")
		For nX := 1 To Len(aCols)
			If !aCols[nX,Len(aHeader)+1]
				//Grava
				If !Empty(aCols[nX,Len(aHeader)])
					//Alteracao
					msGoTo(aCols[nX,Len(aHeader)])
					RecLock("SGI",.F.)
					Replace GI_ORDEM With aCols[nX,1]
				Else
					//Inclusao
					RecLock("SGI",.T.)
					Replace GI_FILIAL  With xFilial("SGI")
					Replace GI_PRODORI With cProdOri
					Replace GI_ORDEM With aCols[nX,1]
				EndIf
				For nY := 1 To Len(aHeader)-2
					If AllTrim(aHeader[nY,2]) # "GI_ORDEM"
						Replace &(aHeader[nY,2]) With aCols[nX,nY]
					EndIf
				Next nY
				MsUnLock()
			ElseIf !Empty(aCols[nX,Len(aHeader)])
				//Exclui
				msGoTo(aCols[nX,Len(aHeader)])
				RecLock("SGI",.F.,.T.)
				dbDelete()
				MsUnLock()
			EndIf
		Next nX
	EndIf
EndIf

RestArea(aArea)
Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁA010FldOk ╨Autor  ЁAndre Anjos		 ╨ Data Ё  20/03/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Valida campos dos produtos alternativos.                   ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA010                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010FldOk()
Local lRet    := .T.
Local cCampo  := AllTrim(Substr(ReadVar(),4))
Local nCont   := &(ReadVar())
Local nLinScn := aScan(aCols,{|x| x[GDFieldPos(cCampo)] == nCont })

If cCampo == "GI_ORDEM"
	If !Empty(nLinScn) .And. nLinScn # n
		If Empty(GDFieldGet("GI_PRODALT",n))
			Help(" ",1,"OBRIGAT2",,AllTrim(RetTitle("GI_PRODALT")),3,0)
			&(ReadVar()) := GDFieldGet("GI_ORDEM",n)
			lRet := .F.
		ElseIf Aviso(STR0032,STR0043+AllTrim(GDFieldGet("GI_PRODALT",nLinScn))+STR0044,{STR0045,STR0046}) == 1 //Ja existe um produto alternativo nesta ordem
			//Caso encontre mesma ordem, verifica se troca
			aCols[nLinScn,GDFieldPos(cCampo)] := GDFieldGet(cCampo,n)
			aCols[n,GDFieldPos(cCampo)] := nCont
			M->GI_ORDEM := GDFieldGet(cCampo,nLinScn)
			//&(ReadVar()) := GDFieldGet(cCampo,nLinScn)
		Else
			//Se nao trocar retorna conteudo da memoria para o original
			&(ReadVar()) := GDFieldGet(cCampo,n)
			lRet := .F.
		EndIf
	Else
		&(ReadVar()) := GDFieldGet(cCampo,n)
	EndIf
	//Caso tenha trocado ordem, reordena
	If lRet	.And. !Empty(nLinScn)
		aSort(aCols,,,{|x,y| x[GDFieldPos(cCampo)] < y[GDFieldPos(cCampo)]})
	EndIf
EndIf

Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁA010VldAlt╨Autor  ЁAndre Anjos	     ╨ Data Ё  31/03/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Valida produto alternativo digitado                        ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA010                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010VldAlt()
Local lRet     := .T.
Local aArea    := GetArea()
Local cProduto := &(ReadVar())
Local aEstru   := {}
Local nPos 	   := 0
Local cCodOri := If(Type('cProdOri') == 'C',cProdOri,If(Type('M->GI_PRODORI') == 'C',M->GI_PRODORI,SGI->GI_PRODORI))
Private nEstru :=0

//Verifica se esta vazio
If Empty(cProduto)
	Help(" ",1,"NVAZIO")
	lRet := .F.
EndIf

//Valida existencia e produtos bloqueados
If lRet
	lRet := ExistCpo('SB1',cProduto)
EndIf

//Bloqueia alternativo dele mesmo
If lRet .And. cProduto == cCodOri
	Help(" ",1,"ALTERSELF")
	lRet := .F.
EndIf

//Bloqueia produto fantasma
If lRet
	SB1->(dbSetOrder(1))
	SB1->(dbSeek(xFilial("SB1")+cProduto))
	If RetFldProd(SB1->B1_COD,"B1_FANTASM") == "S"
		Help(" ",1,"ALTERFAN")
		lRet := .F.
	EndIf
EndIf

//Analisa possivel recursividade
If lRet
	aEstru := Estrut(cProduto,1)
	If aScan(aEstru,{|x| x[3] == cCodOri}) > 0
		Help(" ",1,"ALTERREC")
		lRet := .F.
	EndIf
EndIf

//Verifica duplicidade
If lRet .And. Type("aCols") == "A"
	nPos := aScan(aCols,{|x| x[GDFieldPos("GI_PRODALT")] == cProduto})
	If nPos > 0 .And. nPos # n
		Help(" ",1,"JAGRAVADO")
		lRet := .F.
	EndIf
EndIf

RestArea(aArea)
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁAlterLinOk╨Autor  ЁAndre Anjos	     ╨ Data Ё  01/04/09   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Valida linha do alternativo		                          ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё MATA010                                                    ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function AlterLinOK()
Local lRet     := .T.
Local lMT010LIN:= ExistBlock("MT010LIN")
//Alternativo obrigatorio
If !aCols[n,Len(aHeader)+1] .And. Empty(GDFieldGet("GI_PRODALT",n))
	Help(" ",1,"OBRIGAT2",,AllTrim(RetTitle("GI_PRODALT")),3,0)
	lRet := .F.
EndIf

If  lMT010LIN .And. lRet
	lRet := ExecBlock("MT010LIN",.F.,.F.)
	If ValType(lRet) <> "L"
		lRet := .T.
	EndIf
EndIf


Return lRet

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддбдддддддбддддддддддддддддддддддддддбддддддбдддддддддддд©╠╠
╠╠ЁFunГЦo    ЁA010IntЁ Autor Ё Vendas CRM               Ё Data Ё 15/09/2009 Ё╠╠
╠╠цддддддддддедддддддадддддддаддддддддддддддддддддддддддаддддддадддддддддддд╢╠╠
╠╠ЁDescriГЦo Ё Realiza integracao com a criterium ou outra integracao       Ё╠╠
╠╠Ё          Ёque utiliza o framework do SIGALOJA de integracao.            Ё╠╠
╠╠Ё          Ё O parБmetro aIntSB1 normalmente И vazio.                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010Int()                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpN1: Momento da chamada, sendo:                             Ё╠╠
╠╠Ё          Ё           1: Antes de qualquer alteraГЦo                     Ё╠╠
╠╠Ё          Ё           2: Depois das alteraГУes                           Ё╠╠
╠╠Ё          ЁExpN2: OpГЦo da rotina                                        Ё╠╠
╠╠Ё          ЁExpA3: Array contendo o nЗmero do registro e adaptador do SB1.Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A010Int( nMomento, nOpc, aIntSB1 )
	Local lIntegra 		:= SuperGetMv("MV_LJGRINT", .F., .F.)	// Se hА integraГЦo ou nЦo
	Local aArea			:= GetArea()

	If lIntegra
		If nMomento == 1
			MsgRun( STR0051, STR0050, {|| A010IniInt( nOpc, aIntSB1 ) } ) // "Aguarde" "Anotando registros para integraГЦo"
		ElseIf nMomento == 2
			MsgRun( STR0052, STR0050, {|| A010FimInt( nOpc, aIntSB1 ) } ) // "Aguarde" "Executando integraГЦo"
		EndIf
	EndIf

	RestArea( aArea )
Return

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддддбдддддддбддддддддддддддддддддбддддддбдддддддддддд©╠╠
╠╠ЁFunГЦo    ЁA010IniInt   Ё Autor Ё Vendas CRM         Ё Data Ё 15/09/2009 Ё╠╠
╠╠цддддддддддедддддддддддддадддддддаддддддддддддддддддддаддддддадддддддддддд╢╠╠
╠╠ЁDescriГЦo Ё Faz o cache dos itens antes de serem excluМdos, possibilitan-Ё╠╠
╠╠Ё          Ёdo o envio dos mesmos, mesmo apСs de serem apagados.          Ё╠╠
╠╠Ё          Ё O parБmetro aIntSB1 normalmente И vazio.                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010IniInt()                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpN1: OpГЦo da rotina                                        Ё╠╠
╠╠Ё          ЁExpA2: Array contendo o nЗmero do registro e adaptador do SB1.Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A010IniInt( nOpc, aIntSB1 )
	Local oFactory		:= LJCAdapXmlEnvFactory():New()
	Local cChave		:= ""

	// Se houver integraГЦo e nЦo for inclusЦo ou copia, anota todos os registros para exclusЦo, caso algum seja excluМdo
	If nOpc != 3 .AND. !lCopia
		aIntSB1 :=	{ SB1->(Recno()), oFactory:Create( "SB1" ), oFactory:CreateByProcess( "025" ) }
		cChave 	:= xFilial( "SB1" ) + SB1->B1_COD
	    aIntSB1[2]:Inserir( "SB1", cChave, "1", "5" )
		aIntSB1[3]:Inserir( "SB1", cChave, "1", "5" )
	    aIntSB1[2]:Gerar()
		aIntSB1[3]:Gerar()
	EndIf
Return

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддддбдддддддбддддддддддддддддддддбддддддбдддддддддддд©╠╠
╠╠ЁFunГЦo    ЁA010FimInt   Ё Autor Ё Vendas CRM         Ё Data Ё 15/09/2009 Ё╠╠
╠╠цддддддддддедддддддддддддадддддддаддддддддддддддддддддаддддддадддддддддддд╢╠╠
╠╠ЁDescriГЦo Ё Envia os itens apagados e todos os outros itens.             Ё╠╠
╠╠Ё          Ё O parБmetro aIntSB1 normalmente И vazio.                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010FimInt()                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpN1: OpГЦo da rotina                                        Ё╠╠
╠╠Ё          ЁExpA2: Array contendo o nЗmero do registro e adaptador do SB1.Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Static Function A010FimInt( nOpc, aIntSB1 )
	Local oFactory			:= LJCAdapXmlEnvFactory():New( )	// Cria a fabrica de Adaptadores de envio
	Local oEntidadeFactory	:= LJCEntidadeFactory():New()
	Local cChave			:= ""
	Local oEntidadeSBM		:= Nil
	Local oRecords			:= Nil

	Default aIntSB1  		:= {}

	// Verifica se houve algum registro apagado, e gera a integraГЦo desse registro
	If nOpc != 3 .AND. !lCopia .And. Len(aIntSB1) > 0
		// Procura pelo registro do cabeГalho
		SB1->(msGoTo( aIntSB1[1] ) )

		// Se nЦo encontrar, significa que o cabeГalho foi apagado, entЦo envia somente a exclusЦo do cabeГalho
		If SB1->( DELETED() )
			aIntSB1[2]:Finalizar()
		EndIf
	EndIf

	// Independente de ter registros apagados ou nЦo, gera quando nЦo for exclusЦo, todos os outros registros
	If nOpc != 5
		aIntSB1 := { SB1->( Recno() ), oFactory:Create( "SB1" ), oFactory:CreateByProcess( "025" )  }
		cChave 	:= xFilial( "SB1" ) + SB1->B1_COD

		// Para a tabela SB1
	    aIntSB1[2]:Inserir( "SB1", cChave, "1", cValToChar( nOpc ) )
	    aIntSB1[2]:Gerar()
		aIntSB1[2]:Finalizar()

	    // Para o processo 025
		oEntidadeSBM := oEntidadeFactory:Create( "SBM" )
		If oEntidadeSBM != Nil
			oEntidadeSBM:DadosSet( "BM_GRUPO", SB1->B1_GRUPO )
			oRecords := oEntidadeSBM:Consultar(1)

			// Insere os registros no adapter e envia pro EAI.
			If aIntSB1[3] != NIL	.And. oRecords:Count() > 0
				//Insere os dados da carga
				aIntSB1[3]:Inserir( "SBM", xFilial("SBM") + oRecords:Elements( 1 ):DadosGet( "BM_GRUPO" ) , "1", cValToChar( nOpc ))
			EndIf
		EndIf
		aIntSB1[3]:Inserir( "SB1", cChave, "1", cValToChar( nOpc ) )
		aIntSB1[3]:Gerar()
		aIntSB1[3]:Finalizar()
	EndIf
Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤ao    ЁA010IntSFC Ё Autor Ё Aecio Ferreira Gomes    Ё Data Ё30/04/11 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤ao ЁAtualiza tabelas do SFC conforme modelagem dos dados(MVC)     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA010IntSFC(ExpN1)                                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpN1 = Rotina a ser processada(3-Inc, 4-Alt, 5-Exc)          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁMATA770                                                       Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010IntSFC(nOpc,cError,cNome,oModel)
Local aArea   := GetArea()	// Salva area atual para posterior restauracao
Local lRet    := .T.		// Conteudo de retorno
Local aCampos := {}			// Array dos campos a serem atualizados pelo modelo
Local aAux    := {}			// Array auxiliar com o conteudo dos campos
Local nX	  := 0			// Indexadora de laco For/Next
Default oModel  := FWLoadModel("SFCC101")		// Objeto de modelo de dados

If nOpc == 3
	aAdd(aCampos,{"CZ3_CDAC",M->B1_COD})
	aAdd(aCampos,{"CZ3_DTBG",dDataBase})
	aAdd(aCampos,{"CZ3_TPAC","1"})
EndIf

If nOpc # 5
	aAdd(aCampos,{"CZ3_DSAC"	,M->B1_DESC })
	aAdd(aCampos,{"CZ3_CDUN"	,M->B1_UM})
	aAdd(aCampos,{"CZ3_DSUN"	,Posicione("SAH",1,xFilial("SAH")+M->B1_UM,"AH_DESCPO")})
	aAdd(aCampos,{"CZ3_CDGR"	,M->B1_GRUPO })
	aAdd(aCampos,{"CZ3_DSGR"	,Posicione("SBM",1,xFilial("SBM")+M->B1_GRUPO,"BM_DESC")})
	aAdd(aCampos,{"CZ3_CDFA"	,M->B1_TIPO })
	aAdd(aCampos,{"CZ3_DSFA"	,PadR(Posicione("SX5",1,xFilial("SX5")+"02"+M->B1_TIPO,"X5_DESCRI"),TamSX3("CZ3_DSFA")[1])})
	aAdd(aCampos,{"CZ3_CDDP"	,M->B1_LOCPAD })
	aAdd(aCampos,{"CZ3_QTLOEC"	,M->B1_LE })
	aAdd(aCampos,{"CZ3_QTLOMI"	,M->B1_LM })
	aAdd(aCampos,{"CZ3_VLPSBR"	,M->B1_PESBRU })
	aAdd(aCampos,{"CZ3_VLPSLQ"	,M->B1_PESO })
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁInstancia modelo de dados(Model) do cadastro de Item - SFC Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

//oModel  := FWLoadModel("SFCC101")		// Objeto de modelo de dados
oModel:SetOperation(nOpc)

If nOpc # 3
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁQuando se tratar de alteracao ou exclusao primeiramente o registro devera ser posicionado Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	CZ3->(dbSetOrder(1))
	CZ3->(dbSeek(xFilial("CZ3")+SB1->B1_COD))
EndIf

//здддддддддддддддддддддддд©
//ЁAtiva o modelo de dados Ё
//юдддддддддддддддддддддддды
If (lRet := oModel:Activate())
	//здддддддддддддддддддддддддддддддддддд©
	//ЁObtem a estrutura de dados do Model Ё
	//юдддддддддддддддддддддддддддддддддддды
	aAux := oModel:GetModel("CZ3MASTER"):GetStruct():GetFields()

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁLoop para validacao e atribuicao de dados dos campos do Model Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	For nX := 1 To Len(aCampos)
		//здддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁValida os campos existentes na estrutura do Model Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддды
		If aScan(aAux,{|x| AllTrim(x[3]) ==  AllTrim(aCampos[nX,1])}) > 0
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//ЁAtribui os valores aos campos do Model caso passem pela validacao do formulario Ё
			//Ёreferente a tipos de dados, tamanho ou outras incompatibilidades estruturais.   Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !(oModel:SetValue("CZ3MASTER",aCampos[nX,1],aCampos[nX,2]))
				lRet := .F.
				Exit
			EndIf
		EndIf
	Next nX
Endif

If lRet
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁValida os dados e integridade conforme dicionario do Model Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If (lRet := oModel:VldData())
		//зддддддддддддддддддддддддддддддддддддд©
		//ЁEfetiva gravacao dos dados na tabela Ё
		//юддддддддддддддддддддддддддддддддддддды
		lRet := oModel:CommitData()
	EndIf
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁGera log de erro caso nao tenha passado pela validacao Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !lRet
	A010SFCErr(oModel,@cError,NIL,cNome,SB1->B1_COD)
EndIf

//зддддддддддддддддд©
//ЁDesativa o Model Ё
//юддддддддддддддддды
oModel:DeActivate()

RestArea(aArea)
Return lRet


/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤ao    ЁMA10VerAV  Ё Autor Ё Marco Aurelio - Mano    Ё Data Ё19/05/11  Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤ao ЁVerifica se existe vinculo do produto que esta sendo excluido  Ё╠╠
╠╠Ё          Ёno cadastro de Apontamento de Visitas.                         Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁMA10VerAV()                                                    Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                               Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁMATA010                                                        Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MA10VerAV()
Local cAliasTRB := GetNextAlias()	// Nome do arquivo temporario
Local cQuery    := ""				// Auxiliar para execucao de query
Local aArea     := GetArea()		// Salva area atual para posterior restauracao
Local lRet      := .F.				// Conteudo de retorno

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁQuery para pesquisar o produto na tabela de Apontamento de Visitas(AD6) Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cQuery := "SELECT * "

//здддддддддддддддддддддд©
//ЁTabela base do filtro Ё
//юдддддддддддддддддддддды
cQuery += "FROM "
cQuery += RetSqlName("AD6")+" AD6 "

//здддддддддддддддддддд©
//ЁCondicoes de filtro Ё
//юдддддддддддддддддддды
cQuery += "WHERE "
cQuery += "AD6_FILIAL = '"+ xFilial("AD6")+"' AND "
cQuery += "AD6_CODPRO = '"+ SB1->B1_COD   +"' AND "
cQuery += "AD6.D_E_L_E_T_  <> '*'"

cQuery := ChangeQuery(cQuery)

DbUseArea(.T.,'TOPCONN',TCGENQRY(,,cQuery),cAliasTRB,.T.,.T.)

If !(cAliasTRB)->(Eof())

	Help(" ",1,"APTNODEL") // Exclusao nao permitida deste produto pois existe vinculo do mesmo no cadastro Apontamento de Visitas.
	lRet := .T.

EndIf

(cAliasTRB)->(DbCloseArea())

RestArea(aArea)

Return(lRet)



/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁA010SFCErr╨Autor  Ё Andre Anjos  		 ╨ Data Ё  30/05/11   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Tratamento de erro da integracao com Chao de Fabrica.      ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё Integracao SFC                                             ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010SFCErr(oModel,cError,nItErro,cNome,cChave)
Local aErro  := {}
Local lCarga := ValType(cError) == "C"

aErro := oModel:GetErrorMessage()

//здддддддддддддддддддддддддддд©
//ЁEstrutura do vetor com erro Ё
//юдддддддддддддддддддддддддддды
//[1] Id do formulАrio de origem
//[2] Id do campo de origem
//[3] Id do formulАrio de erro
//[4] Id do campo de erro
//[5] Id do erro
//[6] mensagem do erro
//[7] mensagem da soluГЦo
//[8] Valor atribuido
//[9] Valor anterior

If lCarga
	cError += cNome +" " +AllTrim(cChave) +": " +AllToChar(aErro[6]) +CRLF
Else
	AutoGrLog("Id do formulАrio de origem: " +'[' +AllToChar(aErro[1]) +']')
	AutoGrLog("Id do campo de origem:      " +'[' +AllToChar(aErro[2]) +']')
	AutoGrLog("Id do formulАrio de erro:   " +'[' +AllToChar(aErro[3]) +']')
	AutoGrLog("Id do campo de erro:        " +'[' +AllToChar(aErro[4]) +']')
	AutoGrLog("Id do erro:                 " +'[' +AllToChar(aErro[5]) +']')
	AutoGrLog("Mensagem do erro:           " +'[' +AllToChar(aErro[6]) +']')
	AutoGrLog("Mensagem da soluГЦo:        " +'[' +AllToChar(aErro[7]) +']')
	AutoGrLog("Valor atribuido:            " +'[' +AllToChar(aErro[8]) +']')
	AutoGrLog("Valor anterior:             " +'[' +AllToChar(aErro[9]) +']')

	HELP(" ",1,"IntegraГЦo",,AllToChar(aErro[6]),1,1)

	If !Empty(nItErro)
		AutoGrLog("Erro no Item:               " +'[' +AllTrim(AllToChar(nItErro)) +']')
	EndIf

	MostraErro()
EndIf

Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁIntegraSFC╨Autor  Ё Aecio Ferreira Gomes ╨ Data Ё  29/09/11   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Valida IntegraГЦo com SFC								    ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё Integracao SFC                                            	╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function IntegraSFC()
Local lRet		:= .F.
Local xIntSFC	:= GetMV("MV_INTSFC",.F.,0)

If ValType(xIntSFC) # "N"
	lRet := xIntSFC
Else
	lRet := xIntSFC == 1
EndIf

Return(lRet)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁIntegraSFC╨    Autor  Ё Michele Girardi  ╨ Data Ё  08/01/13   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Valida IntegraГЦo com SFC - Parametro/Compartilhamento tabela╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё Integracao SFC                                            	╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function ExisteSFC(cTabela)
Local lRet		:= .F.
Local xIntSFC	:= GetMV("MV_INTSFC",.F.,0)
Local nI        := 0
Local nParSFC
Local nExistSfc := .F.
Local cMode
Local aEmpresas := {}
Local aAreaSM0 := SM0->(GetArea())
Local aArea    := GetArea()
Local nTamanho  := 0

//Verificar se a filial corrente possui integraГЦo
	If ValType(xIntSFC) # "N"
		lRet := xIntSFC
	Else
		lRet := xIntSFC == 1
EndIf

//Se a filial corrente possuir integraГЦo, processar a integraГЦo.
if lRet
	return lRet
EndIf

//Se a filial corrente nЦo possuir integraГЦo verificar se outra filial possui integraГЦo

//Carrega todas as filiais no array
OpenSm0(,.F.)
If Select("SM0")<= 0
	Final(STR0018)//"SIGAMAT.EMP com problemas!"
Else
	SM0->(dbGotop())
	While !SM0->(EOF())
		If !SM0->(Deleted())
			aAdd(aEmpresas, {SM0->M0_CODFIL})
		EndIf
		SM0->(dbSkip())
	End
EndIf

DbSelectArea("SX6")
SX6->(DbSetOrder(1))
nTamanho := Len(SX6->X6_FIL)

//Busca na SX6 se o parБmetro estА marcado para alguma outra filial
nExistSfc = .F.
For nI := 1 to Len(aEmpresas)
	DbSelectArea("SX6")
	SX6->(DbSetOrder(1))
	SX6->(dbSeek(substr(aEmpresas[nI,1],1,nTamanho)+"MV_INTSFC"))

	nParSFC := SX6->X6_conteud

	If VAL(nParSFC) == 1
		nExistSfc = .T.
		exit
	EndIf
Next nI

//Se nenhuma filial possuir integraГЦo nЦo processar a integraГЦo.
if !nExistSfc
	lRet := .F.
	RestArea(aAreaSM0)
	RestArea(aArea)
	return lRet
EndIf

//Se a filial corrente nЦo possuir integraГЦo e outra filial possuir
//Verificar se a tabela em questЦo И compartilhada
cMode := FWModeAccess(cTabela)

//Se for compartilhada, processa a integraГЦo
//Se nЦo for compartilhada nЦo processar a integraГЦo.
if cMode == 'E'
	lRet = .F.
Else
	lRet = .T.
EndIf

RestArea(aAreaSM0)
RestArea(aArea)

Return(lRet)

/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠имммммммммммяммммммммммкмммммммяммммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨ Function  Ё IntegDef ╨ Autor Ё Marcelo C. Coutinho  ╨ Data Ё  28/10/11   ╨╠╠
╠╠лмммммммммммьммммммммммймммммммоммммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨ Descricao Ё Funcao de tratamento para o recebimento/envio de mensagem    ╨╠╠
╠╠╨           Ё unica de cadastro de produtos.                               ╨╠╠
╠╠лмммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ Uso       Ё MATA010                                                      ╨╠╠
╠╠хмммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function IntegDef( cXML, nTypeTrans, cTypeMessage )
Local aRet := {}

aRet := MATI010(cXml, nTypeTrans, cTypeMessage)

Return aRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммкмммммммяммммммммммммммммммммммкммммммяммммммммммммм╩╠╠
╠╠╨Programa  ЁIntegraDPR╨Autor  Ё Leonardo Quintania   ╨ Data Ё  06/11/12   ╨╠╠
╠╠лммммммммммьммммммммммймммммммоммммммммммммммммммммммйммммммоммммммммммммм╧╠╠
╠╠╨Descricao Ё Valida IntegraГЦo com o DPR(Desenvolvedor de Produtos)	    ╨╠╠
╠╠лммммммммммьмммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Uso       Ё Integracao DPR                                               ╨╠╠
╠╠хммммммммммомммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function IntegraDPR()
Local lRet		:= .F.

lRet := SuperGetMv("MV_INTDPR",.F.,0) == 1

Return lRet

/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммммммкмммммммяммммммммммммммммммммммкммммммямммммммммм╩╠╠
╠╠╨Programa  Ё A010Hist     ╨Autor  ЁWemerson Randolfo     ╨ Data Ё 03/09/12 ╨╠╠
╠╠лммммммммммьммммммммммммммймммммммоммммммммммммммммммммммйммммммомммммммммм╧╠╠
╠╠╨Descricao Ё Visualizacao do historico das alteracoes                      ╨╠╠
╠╠лммммммммммьммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨ParametrosЁ Nao ha                                                        ╨╠╠
╠╠лммммммммммьммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Retorno   Ё .T. ou .F.                                                    ╨╠╠
╠╠лммммммммммьммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Aplicacao Ё Funcao chamada pelo menu                                      ╨╠╠
╠╠╨          Ё                                                               ╨╠╠
╠╠хммммммммммоммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010Hist()
Local lRet

lRet := HistOperFis("SS4",SB1->B1_COD,SB1->B1_DESC,"S4_COD")
Return lRet

/*
| Programa : A010VLoc  			 Autor : TOTVS           Data : 26/11/2013
| Descricao: Valida local padrЦo diferente de MV_CQ
| Retorno  : .T. ou .F.
| Aplicacao: Chamada no valid do B1_LOCAL
*/
Function A010VLoc()
Local lret:= .T.

If M->B1_LOCPAD == GetMV("MV_CQ")
	Help(" ",1,"A240LOCCQ")
	lRet := .F.
Endif
Return lret


//------------------------------------------------------------------------------
/*/{Protheus.doc} A010ComPrd()

Abre o formulario do Complemento do Produto.

@sample 	A010ComPrd(cCodProd,nOpc)

@param		ExpC1 - CСdigo do Produto
			ExpN3 - Numero da OperaГЦo

@return	Nenhum

@author	Anderson Silva
@since		11/07/2014
@version	12.0
/*/
//---------------------------------------------------------------------
Function A010ComPrd(cCodProd,nOpc)

Local aArea 		:= GetArea()
Local aAreaSB5	:= SB5->(GetArea())

Private cCadastro	:= ""

DbSelectArea("SB5")
SB5->(DbSetOrder(1))

If DbSeek(xFilial("SB5")+cCodProd)
	If nOpc == 2 // Visualizar
		cCadastro := STR0093+Upper(OemtoAnsi(STR0004)) // "Dados Complementares - VISUALIZAR"
		AxVisual("SB5",SB5->(RecNo()),nOpc)
	ElseIf nOpc == 4 // Alterar
		cCadastro := STR0093+Upper(OemtoAnsi(STR0006)) // "Dados Complementares - ALTERAR"
		Ma180Alt("SB5",SB5->(RecNo()),nOpc)
	EndIf
Else
	MsgAlert(STR0094) // "Este produto nЦo possui dados complementares."
EndIf

RestArea(aAreaSB5)
RestArea(aArea)

Return Nil                 


/*
ээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠иммммммммммяммммммммммммммкмммммммяммммммммммммммммммммммкммммммямммммммммм╩╠╠
╠╠╨Programa  Ё A010CodBar   ╨Autor  ЁTOTVS S/A             ╨ Data Ё 29/05/15 ╨╠╠
╠╠лммммммммммьммммммммммммммймммммммоммммммммммммммммммммммйммммммомммммммммм╧╠╠
╠╠╨Descricao Ё Validacao do tamanho do campo B1_CODBAR                       ╨╠╠
╠╠лммммммммммьммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╧╠╠
╠╠╨Retorno   Ё .T. ou .F.                                                    ╨╠╠
╠╠хммммммммммоммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммммм╪╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A010CodBar(cCodBar)
Local lRet       := .T.
Local nTamB1CBar := TamSX3("B1_CODBAR")[1]

If Len(AllTrim(cCodBar)) > nTamB1CBar - 1
	// "B1_CODBAR" ### "Digite no maximo " ### 15 ## "caracteres, pois o ultimo digito do campo de codigo de barras"
	//                                            "deve ser preenchido automaticamente pelo gatilho do campo B1_CODBAR."
	Aviso(STR0103,STR0104 + AllTrim(STR(nTamB1CBar - 1)) + STR0105 + STR0106,{STR0031})
	lRet := .F.
EndIf

Return lRet

//-------------------------------------------------------------------
/*/{Protheus.doc} A010LimpOp
Funcao p/ Limpar o campo de Opcionais 
@author		Andre Maximo
@since		17/12/2015
@version	1.0
/*/
//-------------------------------------------------------------------

Static Function A010LimpOp()

Local lOpcPadrao:= GetNewPar("MV_REPGOPC","N") == "N"

If lOpcPadrao	
	M->B1_OPC:= " "
Else
	M->B1_MOPC:=" "
EndIf

Aviso(STR0032,STR0111,{STR0031},2)

Return Nil


// -----------------------------------------------------------
/*/{Protheus.doc} A010VlStr
(long_description)
@type function
@author nilton.koyanagui
@since 22/04/2016
@version 1.0
@return ${return}, Possui (T) ou nЦo (F) caracter especial
/*/
// -----------------------------------------------------------
Function A010VlStr ()

Local lRet       	:= .T.
Local cCaracter		:= "!@#$%╗&*()+{}^~╢`][;.>,<=/╒╛╖╙╨'?*"
Local cConteudo		:= Alltrim(&(ReadVar())) 
Local cCaracPip		:= "|'"
Local nCont			:= 0

For nCont := 1 to len(cConteudo)
	If substr(cConteudo,nCont,1) $ cCaracPip
		lret := .F.
	EndiF
next nCont

If !lRet 
	Alert (STR0113)
EndIf

Return lRet

// -----------------------------------------------------------
Static Function AjustaSX3()
Local aAreaSX3	:= SX3->( GetArea() )

SX3->( dbSetOrder(2) )
If SX3->(dbSeek("B1_DESC")) .And. SX3->X3_VALID <> 'A010VlStr()'
	RecLock("SX3",.F.)
	SX3->X3_VALID  := 'A010VlStr()'
	SX3->(MsUnlock())
Endif)

If SX3->(dbSeek("B1_RASTRO")) .And. UPPER(AllTrim(SX3->X3_VALID))  <> UPPER('pertence("SLN") .And. AvalLote(M->B1_COD,,.T.)')
	RecLock("SX3",.F.)
	SX3->X3_VALID  := 'pertence("SLN") .And. AvalLote(M->B1_COD,,.T.)'
	SX3->(MsUnlock())
Endif


Return Nil

//-------------------------------------------------------------------------------------------------
/*/{Protheus.doc} MATA010PPI

Realiza a integraГЦo com o PC-Factory - PPI Multitask
@param cXml      - XML que serА enviado. Caso nЦo seja passado esse parametro, serА realizada
                   a chamada do Adapter para criaГЦo do XML.
                   Se for passado esse parБmetro, nЦo serА exibida a mensagem de erro caso exista,
                   nem serА considerado o filtro da tabela SOE. 
@param cProd     - ObrigatСrio quando utilizado o parБmetro cXml. ContИm o cСdigo do produto
@param lExclusao - Indica se estА chamando para rotina de exclusЦo de produto.
@param lFiltra   - Identifica se serА realizado ou nЦo o filtro do registro.
@param lPendAut  - Indica se serА gerada a pendЙncia sem realizar a pergunta para o usuАrio, caso ocorra algum erro.
@author  Lucas Konrad FranГa
@version P12
@since   13/08/2015
@return  lRet  - Indica se a integraГЦo com o PC-Factory foi realizada. 
           .T. -> IntegraГЦo Realizada
           .F. -> IntegraГЦo nЦo realizada.
/*/
//-------------------------------------------------------------------------------------------------
Function MATA010PPI(cXml, cProd, lExclusao, lFiltra, lPendAut)
   Local aArea     := GetArea()
   Local lRet      := .T.
   Local aRetXML   := {}
   Local aRetWS    := {}
   Local aRetData  := {}
   Local aRetArq   := {}
   Local cNomeXml  := ""
   Local cProduto  := ""
   Local cGerouXml := ""
   Local cOperacao := ""
   Local cPont     := ""

   //VariАvel utilizada para identificar que estА sendo executada a integraГЦo para o PPI dentro do MATI010.
   Private lRunPPI := .T.
   Default cXml      := ""
   Default cProd     := ""
   Default lExclusao := .F.
   Default lFiltra   := .T.
   Default lPendAut  := .F.

   If Empty(cXml)
      If lExclusao 
         cOperacao := Lower(STR0007) //"excluir"
      Else
         If INCLUI
            cOperacao := Lower(STR0005) //"incluir"
         Else
            cOperacao := Lower(STR0006) //"alterar"
         EndIf
      EndIf
   Else
      If PCPEvntXml(cXml) == "delete"
         lExclusao := .T.
      EndIf
   EndIf

   If Empty(cXml)
      If lExclusao
         cProduto := SB1->B1_COD
         cPont    := "SB1"
      Else
         cProduto := M->B1_COD
         cPont    := "M"
      EndIf
   Else
      cProduto := cProd
   EndIf

   //Realiza filtro na tabela SOE, para verificar se o produto entra na integraГЦo.
   If !Empty(cXml) .Or. !lFiltra .Or. PCPFiltPPI("SB1", cProduto, cPont, cTmpPPI)
      //Adapter para criaГЦo do XML
      If Empty(cXml)
         aRetXML := MATI010("", TRANS_SEND, EAI_MESSAGE_BUSINESS)
      Else
         aRetXML := {.T.,cXml}
      EndIf
      /*
         aRetXML[1] - Status da criaГЦo do XML
         aRetXML[2] - String com o XML
      */
      If aRetXML[1]
         //Retira os caracteres especiais
         aRetXML[2] := EncodeUTF8(aRetXML[2])
   
         //Busca a data/hora de geraГЦo do XML
         aRetData := PCPxDtXml(aRetXML[2])
         /*
            aRetData[1] - Data de geraГЦo AAAAMMDD
            aRetData[1] - Hora de geraГЦo HH:MM:SS
         */
   
         //Envia o XML para o PCFactory
         aRetWS := PCPWebsPPI(aRetXML[2])
         /*
            aRetWS[1] - Status do envio (1 - OK, 2 - Pendente, 3 - Erro.)
            aRetWS[2] - Mensagem de retorno do PPI
         */
         If aRetWS[1] != "1" .And. Empty(cXml)
            If lPendAut
               lRet := .T.
            Else
               If l010Auto
                  Help(" ",1,AllTrim(aRetWS[2]))
                  lRet := .T.
               Else
                  //"AtenГЦo! Ocorreram erros na integraГЦo com o PCFactory. Erro: "
                  // XXXXXX
                  // XXXXXX
                  // "Deseja incluir/alterar/excluir o local de estoque no protheus e gerar pendЙncia para integraГЦo?"
                  If !MsgYesNo(STR0107 + AllTrim(aRetWS[2]) +CHR(10)+;
                               STR0108 + AllTrim(cOperacao) +STR0109)
                     lret := .F.
                  EndiF
               EndIf
            EndIf
         EndIf
         If lRet
            //Cria o XML fisicamente no diretСrio parametrizado
            aRetArq := PCPXmLPPI(aRetWS[1],"SB1",cProduto,aRetData[1],aRetData[2],aRetXML[2])
            /*
               aRetArq[1] Status da criaГЦo do arquivo. .T./.F.
               aRetArq[2] Nome do XML caso tenha criado. Mensagem de erro caso nЦo tenha criado o XML.
            */
            If !aRetArq[1]
               If Empty(cXml) .And. !l010Auto .And. !lPendAut
                  Alert(aRetArq[2])
               EndIf
            Else
               cNomeXml := aRetArq[2]
            EndIf
            If Empty(cNomeXml)
               cGerouXml := "2"
            Else
               cGerouXml := "1"
            EndIf
            //Cria a tabela SOF
            PCPCriaSOF("SB1",cProduto,aRetWS[1],cGerouXml,cNomeXml,aRetData[1],aRetData[2],__cUserId,aRetWS[2],aRetXML[2])
         EndIf
      EndIf
   EndIf
   //Tratativa para retornar .F. mesmo quando И pendЙncia automАtica;
   //Utilizado apenas para o programa de sincronizaГЦo.
   If AllTrim(FunName()) == "PCPA111" .And. aRetWS[1] != "1"
      lRet := .F.
   EndIf
   RestArea(aArea)
Return lRet

// -----------------------------------------------------------
/*/{Protheus.doc} AjustaSX7
Ajuste de Gatilhos
@author Manuela Cavalcante
@since 22/07/2016
@version 1.0
/*/
// -----------------------------------------------------------

Static Function AjustaSX7()
Local aArea	:= GetArea()

dbSelectArea("SX7")
SX7->(dbSetOrder(1))
If SX7->(MsSeek("B1_CODBAR " + "001"))
	Reclock("SX7",.F.)
	SX7->X7_CONDIC := "NMODULO <> 12 .AND. !VAZIO()"
	SX7->(MsUnlock())
EndIf

RestArea(aArea)
    
Return